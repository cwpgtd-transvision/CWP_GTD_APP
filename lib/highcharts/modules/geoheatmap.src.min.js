!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(t._Highcharts,t._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/modules/geoheatmap",["highcharts/highcharts"],function(t){return e(t,t.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/modules/geoheatmap"]=e(t._Highcharts,t._Highcharts.SeriesRegistry):t.Highcharts=e(t.Highcharts,t.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(v,w)=>(()=>{"use strict";var o={512:t=>{t.exports=w},944:t=>{t.exports=v}},a={};function i(t){var e=a[t];if(void 0!==e)return e.exports;e=a[t]={exports:{}};return o[t](e,e.exports,i),e.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var o in e)i.o(e,o)&&!i.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var t={},e=(i.d(t,{default:()=>b}),i(944)),e=i.n(e),r=i(512),r=i.n(r),{pointClass:n}=r().seriesTypes["map"]["prototype"];const s=e()["isNumber"];class p extends n{applyOptions(t,e){const o=super.applyOptions.call(this,t,e),{lat:a,lon:i}=o.options;var r,n;return s(i)&&s(a)&&({colsize:t=1,rowsize:e=1}=this.series.options,r=i-t/2,n=a-e/2,o.geometry=o.options.geometry={type:"Polygon",coordinates:[[[r,n],[r+t,n],[r+t,n+e],[r,n+e],[r,n]]]}),o}}n=p;const l=e()["doc"],{defined:h,pick:c}=e();var d={colorFromPoint:function(t,e){const o=e.series.colorAxis;if(o){const a=o.toColor(t||0,e).split(")")[0].split("(")[1].split(",").map(t=>c(parseFloat(t),parseInt(t,10)));return a[3]=255*c(a[3],1),h(t)&&e.visible||(a[3]=0),a}return[0,0,0,0]},getContext:function(t){const{canvas:e,context:o}=t;return e&&o?(o.clearRect(0,0,e.width,e.height),o):(t.canvas=l.createElement("canvas"),t.context=t.canvas.getContext("2d",{willReadFrequently:!0})||void 0,t.context)}};const{animObject:q,stop:J}=e();var g=e()["noop"];const{colorFromPoint:K,getContext:B}=d;var d=r()["seriesTypes"]["map"];const{addEvent:u,error:G,extend:y,isNumber:Q,isObject:m,merge:Z,pick:$}=e();function f(t){return t-360*Math.floor((t+180)/360)}class x extends d{constructor(){super(...arguments),this.isDirtyCanvas=!0}update(){var t=this;t.options=Z(t.options,arguments[0]),t.getInterpolation().enabled&&(t.isDirtyCanvas=!0,t.points.forEach(t=>{t.graphic&&(t.graphic.destroy(),delete t.graphic)})),super.update.apply(t,arguments)}translate(){this.getInterpolation().enabled&&this.image&&!this.isDirty&&!this.isDirtyData||super.translate.apply(this,arguments)}getInterpolation(){return m(this.options.interpolation)?this.options.interpolation:{blur:1,enabled:this.options.interpolation}}drawPoints(){const t=this,e=t.chart,o=e.mapView,a=t.options;if(t.getInterpolation().enabled&&o&&t.bounds){const d=t.context||B(t),{canvas:g,colorAxis:N,image:u,chart:e,points:y}=t,[m,f]=[$(a.colsize,1),$(a.rowsize,1)],x=o.projectedUnitsToPixels({x:t.bounds.x1,y:t.bounds.y2}),b=o.projectedUnitsToPixels({x:t.bounds.x2,y:t.bounds.y1});if(g&&d&&N&&x&&b){const{x:v,y:w}=x,D=b.x-v,C=b.y-w,j={x:v,y:w,width:D,height:C};if(t.isDirtyCanvas||t.isDirtyData||"Orthographic"===o.projection.options.name){const P=g.width=1+~~(360/m),I=g.height=1+~~(180/f),_=P*I,T=new Uint8ClampedArray(4*_),{lat:X=0,lon:E=0}=y[0].options,z=E%f!=0,O=X%m!=0,V=z?t=>Math.round(t/f)*f:t=>t,W=O?t=>Math.round(t/m)*m:t=>t,Y=y.length;(z||O)&&G("Highcharts Warning: For best performance, lon/lat datapoints should spaced by a single colsize/rowsize",!1,t.chart,{colsize:String(m),rowsize:String(f)}),t.directTouch=!1,t.isDirtyCanvas=!0;for(let t=0;t<Y;t++){var i=y[t],{lon:r,lat:n}=i.options;Q(r)&&Q(n)&&T.set(K(i.value,i),4*(i=V(r),r=W(n),n=P,S=I,k=m,F=f,Math.ceil(n*(S-1-(r+90)/F)+(i+180)/k)))}var s=t.getInterpolation().blur,s=0===s?1:11*s,p=~~(P*s),s=~~(I*s),l=~~D,h=~~C,c=new ImageData(T,P,I),c=(g.width=p,g.height=s,d.putImageData(c,0,0),d.globalCompositeOperation="copy",d.drawImage(g,0,0,c.width,c.height,0,0,p,s),this.getProjectedImageData(o,l,h,d.getImageData(0,0,p,s),g,v,w));g.width=l,g.height=h,d.putImageData(new ImageData(c,l,h),0,0)}if(u)if(e.renderer.globalAnimation&&e.hasRendered){const L=Number(u.attr("x")),R=Number(u.attr("y")),A=Number(u.attr("width")),U=Number(u.attr("height")),H=Z(q(e.renderer.globalAnimation)),M=H.step;H.step=function(){M&&M.apply(this,arguments),((t,e)=>{e=e.pos;u.attr({x:L+(v-L)*e,y:R+(w-R)*e,width:A+(D-A)*e,height:U+(C-U)*e})}).apply(this,arguments)},u.attr(Z({animator:0},t.isDirtyCanvas?{href:g.toDataURL("image/png",1)}:void 0)).animate({animator:1},H)}else J(u),u.attr(Z(j,t.isDirtyCanvas?{href:g.toDataURL("image/png",1)}:void 0));else t.image=e.renderer.image(g.toDataURL("image/png",1)).attr(j).add(t.group);t.isDirtyCanvas=!1}}else super.drawPoints.apply(t,arguments);var S,k,F}getProjectedImageData(e,o,t,a,i,r,n){const s=new Uint8ClampedArray(o*t*4),p=$(e.projection.options.rotation?.[0],0),l=i.width/360,h=-1*i.height/180;let c=-1;for(let t=0;t<s.length;t+=4){var d,g=t/4%o;0==g&&c++;const u=e.pixelsToLonLat({x:r+g,y:n+c});u&&(u.lon>-180-p&&u.lon<180-p&&(u.lon=f(u.lon)),d=(g=[u.lon,u.lat])[0]*l+i.width/2,g=g[1]*h+i.height/2,0<=d&&d<=i.width&&0<=g&&g<=i.height&&(g=Math.floor(g)*i.width*4+4*Math.round(d),s[t]=a.data[g],s[t+1]=a.data[1+g],s[t+2]=a.data[2+g],s[t+3]=a.data[3+g]))}return s}searchPoint(t,e){const o=this,a=this.chart,i=a.mapView;if(i&&o.bounds&&o.image&&a.tooltip&&a.tooltip.options.enabled)if(!a.pointer.hasDragged&&(+o.image.attr("animator")<=.01||.99<=+o.image.attr("animator"))){var r=i.projectedUnitsToPixels({x:o.bounds.x1,y:o.bounds.y2}),n=i.projectedUnitsToPixels({x:o.bounds.x2,y:o.bounds.y1});if(a.pointer.normalize(t),t.lon&&t.lat&&r&&n&&t.chartX-a.plotLeft>r.x&&t.chartX-a.plotLeft<n.x&&t.chartY-a.plotTop>r.y&&t.chartY-a.plotTop<n.y)return this.searchKDTree({clientX:t.chartX,lon:f(t.lon),lat:t.lat},e,t)}else a.tooltip.destroy()}}x.defaultOptions=Z(d.defaultOptions,{nullColor:"transparent",tooltip:{pointFormat:"Lat: {point.lat}, Lon: {point.lon}, Value: {point.value}<br/>"},borderWidth:0,colsize:1,rowsize:1,stickyTracking:!0,interpolation:{enabled:!1,blur:1}}),u(x,"afterDataClassLegendClick",function(){this.isDirtyCanvas=!0,this.drawPoints()}),y(x.prototype,{type:"geoheatmap",applyJitter:g,pointClass:n,pointArrayMap:["lon","lat","value"],kdAxisArray:["lon","lat"]}),r().registerSeriesType("geoheatmap",x);const b=e();return t.default})());