!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/modules/tiledwebmap",["highcharts/highcharts"],function(e){return t(e,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/modules/tiledwebmap"]=t(e._Highcharts,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(u,g)=>(()=>{"use strict";var o={512:e=>{e.exports=g},944:e=>{e.exports=u}},r={};function i(e){var t=r[e];if(void 0!==t)return t.exports;t=r[e]={exports:{}};return o[e](t,t.exports,i),t.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var e={},t=(i.d(e,{default:()=>y}),i(944)),t=i.n(t);let b={Esri:class{constructor(){this.defaultCredits="Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS,  Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012",this.initialProjectionName="WebMercator",this.themes={WorldStreetMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},DeLorme:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/Specialty/DeLorme_World_Base_Map/MapServer/tile/{z}/{y}/{x}",minZoom:1,maxZoom:11,credits:"Tiles &copy; Esri &mdash; Copyright: &copy;2012 DeLorme"},WorldTopoMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20,credits:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community"},WorldImagery:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20,credits:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"},WorldTerrain:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:13,credits:"Tiles &copy; Esri &mdash; Source: USGS, Esri, TANA, DeLorme, and NPS"},WorldShadedRelief:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:13,credits:"Tiles &copy; Esri &mdash; Source: Esri"},WorldPhysical:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:8,credits:"Tiles &copy; Esri &mdash; Source: US National Park Service"},NatGeoWorldMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:16,credits:"Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC"},WorldGrayCanvas:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:16,credits:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ"}}}},LimaLabs:class{constructor(){this.defaultCredits='Map data &copy;2023 <a href="https://maps.lima-labs.com/">LimaLabs</a>',this.initialProjectionName="WebMercator",this.requiresApiKey=!0,this.themes={Standard:{url:"https://cdn.lima-labs.com/{zoom}/{x}/{y}.png?api={apikey}",minZoom:0,maxZoom:20}}}},OpenStreetMap:class{constructor(){this.defaultCredits='Map data &copy2023 <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',this.initialProjectionName="WebMercator",this.subdomains=["a","b","c"],this.themes={Standard:{url:"https://tile.openstreetmap.org/{zoom}/{x}/{y}.png",minZoom:0,maxZoom:19},Hot:{url:"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png",minZoom:0,maxZoom:19},OpenTopoMap:{url:"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",minZoom:0,maxZoom:17,credits:`Map data: &copy; <a href="https://www.openstreetmap.org/copyright">
                OpenStreetMap</a> contributors, <a href="https://viewfinderpanoramas.org">SRTM</a> 
                | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> 
                (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)`}}}},Stamen:class{constructor(){this.defaultCredits='&copy; Map tiles by <a href="https://stamen.com">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="https://openstreetmap.org">OpenStreetMap</a>, under <a href="https://www.openstreetmap.org/copyright">ODbL</a>',this.initialProjectionName="WebMercator",this.subdomains=["a","b","c","d"],this.themes={Toner:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},TonerBackground:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},TonerLite:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},Terrain:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png",minZoom:0,maxZoom:18},TerrainBackground:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png",minZoom:0,maxZoom:18},Watercolor:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png",minZoom:1,maxZoom:16,credits:'&copy Map tiles by <a href="https://stamen.com">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="https://openstreetmap.org">OpenStreetMap</a>, under <a href="https://creativecommons.org/licenses/by-sa/3.0">CC BY SA</a>'}}}},Thunderforest:class{constructor(){this.defaultCredits='Maps &copy <a href="https://www.thunderforest.com">Thunderforest</a>, Data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>',this.initialProjectionName="WebMercator",this.requiresApiKey=!0,this.subdomains=["a","b","c"],this.themes={OpenCycleMap:{url:"https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Transport:{url:"https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},TransportDark:{url:"https://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},SpinalMap:{url:"https://{s}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Landscape:{url:"https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Outdoors:{url:"https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Pioneer:{url:"https://{s}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},MobileAtlas:{url:"https://{s}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Neighbourhood:{url:"https://{s}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22}}}},USGS:class{constructor(){this.defaultCredits='Tiles courtesy of the <a href="https://usgs.gov/">U.S. GeologicalSurvey</a>',this.initialProjectionName="WebMercator",this.themes={USTopo:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},USImagery:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryOnly/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},USImageryTopo:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryTopo/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20}}}}};var s=i(512),s=i.n(s);let a=t()["composed"],n=s().seriesTypes["map"],{addEvent:p,defined:w,error:j,merge:l,pick:P,pushUnique:m}=t();function h(t){let{geoBounds:o,chart:e}=t,r=(e.options.series||[]).filter(e=>"tiledwebmap"===e.type)[0];if(r&&r.provider&&r.provider.type&&!r.provider.url){let e=b[r.provider.type];var i,s,a,n;if(w(e))return t=(new e)["initialProjectionName"],o?({x1:i,y1:s,x2:a,y2:n}=o,this.recommendedMapView={projection:{name:t,parallels:[s,n],rotation:[-(i+a)/2]}}):this.recommendedMapView={projection:{name:t},minZoom:0},!1;j("Highcharts warning: Tiles Provider not defined in the Provider Registry.",!1)}return!0}class c extends n{constructor(){super(...arguments),this.redrawTiles=!1,this.isAnimating=!1}static compose(e){m(a,"TiledWebMapSeries")&&p(e,"onRecommendMapView",h)}lonLatToTile(e,t){var{lon:e,lat:o}=e;return{x:Math.floor((e+180)/360*Math.pow(2,t)),y:Math.floor((1-Math.log(Math.tan(o*Math.PI/180)+1/Math.cos(o*Math.PI/180))/Math.PI)/2*Math.pow(2,t))}}tileToLonLat(e,t,o){e=e/Math.pow(2,o)*360-180,t=Math.PI-2*Math.PI*t/Math.pow(2,o);return{lon:e,lat:180/Math.PI*Math.atan(.5*(Math.exp(t)-Math.exp(-t)))}}drawPoints(){let M=this.chart,v=M.mapView;if(v){let d=this.tiles=this.tiles||{},p=this.transformGroups=this.transformGroups||[],y=this,l=this.options.provider,e=v["zoom"],u=P(v.projection.options.rotation&&v.projection.options.rotation[0],0),g=200*!M.renderer.forExport,f=r=>{for(let o of Object.keys(d))parseFloat(o)===(v.zoom<0?0:Math.floor(v.zoom))||y.minZoom&&(v.zoom<0?0:Math.floor(v.zoom))<y.minZoom&&parseFloat(o)===y.minZoom||y.maxZoom&&(v.zoom<0?0:Math.floor(v.zoom))>y.maxZoom&&parseFloat(o)===y.maxZoom?Object.keys(d[o].tiles).forEach((e,t)=>{d[o].tiles[e].animate({opacity:1},{duration:r},()=>{t===Object.keys(d[o].tiles).length-1&&(d[o].isActive=!0)})}):Object.keys(d[o].tiles).forEach((e,t)=>{d[o].tiles[e].animate({opacity:0},{duration:r,defer:r/2},()=>{d[o].tiles[e].destroy(),delete d[o].tiles[e],t===Object.keys(d[o].tiles).length-1&&(d[o].isActive=!1,d[o].loaded=!1)})})},x=e<0?0:Math.floor(e),m=Math.pow(2,x),t=.638436911716859*Math.pow(2,e)/(.638436911716859*Math.pow(2,x)),h=256*t;if(l&&(l.type||l.url)){if(l.type&&!l.url){let e=b[l.type];if(!w(e))return void j("Highcharts warning: Tiles Provider '"+l.type+"' not defined in the ProviderRegistry.",!1);let t=new e,o=t.initialProjectionName,r,i="";l.theme&&w(t.themes[l.theme])?r=t.themes[l.theme]:(a=Object.keys(t.themes)[0],r=t.themes[a],j("Highcharts warning: The Tiles Provider's Theme '"+l.theme+"' is not defined in the Provider definition - falling back to '"+a+"'.",!1)),l.subdomain&&t.subdomains&&-1!==t.subdomains.indexOf(l.subdomain)?i=l.subdomain:w(t.subdomains)&&-1!==r.url.indexOf("{s}")&&(i=P(t.subdomains&&t.subdomains[0],""),j("Highcharts warning: The Tiles Provider's Subdomain '"+l.subdomain+"' is not defined in the Provider definition - falling back to '"+i+"'.",!1)),t.requiresApiKey&&(l.apiKey?r.url=r.url.replace("{apikey}",l.apiKey):(j("Highcharts warning: The Tiles Provider requires API Key to use tiles, use provider.apiKey to provide a token.",!1),r.url=r.url.replace("?apikey={apikey}",""))),l.url=r.url.replace("{s}",i),this.minZoom=r.minZoom,this.maxZoom=r.maxZoom;var a=P(M.userOptions.credits&&M.userOptions.credits.text,"Highcharts.com "+P(r.credits,t.defaultCredits));M.credits?M.credits.update({text:a}):M.addCredits({text:a,style:P(M.options.credits?.style,{})}),v.projection.options.name!==o&&j("Highcharts warning: The set projection is different than supported by Tiles Provider.",!1)}else v.projection.options.name||j("Highcharts warning: The set projection is different than supported by Tiles Provider.",!1);if(w(this.minZoom)&&x<this.minZoom?(m=Math.pow(2,x=this.minZoom),h=256*(t=.638436911716859*Math.pow(2,e)/(.638436911716859*Math.pow(2,x)))):w(this.maxZoom)&&x>this.maxZoom&&(m=Math.pow(2,x=this.maxZoom),h=256*(t=.638436911716859*Math.pow(2,e)/(.638436911716859*Math.pow(2,x)))),v.projection&&v.projection.def){v.projection.hasCoordinates=!0,p[x]||(p[x]=M.renderer.g().add(this.group));let n=(e,t,o,r)=>e.replace("{x}",t.toString()).replace("{y}",o.toString()).replace("{zoom}",r.toString()).replace("{z}",r.toString()),e=v.pixelsToProjectedUnits({x:0,y:0}),t=v.projection.def.inverse([e.x,e.y]),o={lon:t[0]-u,lat:t[1]},r=v.pixelsToProjectedUnits({x:M.plotWidth,y:M.plotHeight}),i=v.projection.def.inverse([r.x,r.y]),s={lon:i[0]-u,lat:i[1]};(o.lat>v.projection.maxLatitude||s.lat<-1*v.projection.maxLatitude)&&(o.lat=v.projection.maxLatitude,s.lat=-1*v.projection.maxLatitude);var c=this.lonLatToTile(o,x),S=this.lonLatToTile(s,x),a=this.tileToLonLat(c.x,c.y,x),a=v.projection.def.forward([a.lon+u,a.lat]),a=v.projectedUnitsToPixels({x:a[0],y:a[1]}),T=c.x*h-a.x,Z=c.y*h-a.y;d[""+x]||(d[""+x]={tiles:{},isActive:!1,howManyTiles:0,actualTilesCount:0,loaded:!1}),d[""+x].howManyTiles=(S.x-c.x+1)*(S.y-c.y+1),d[""+x].actualTilesCount=0;for(let t=c.x;t<=S.x;t++)for(let e=c.y;e<=S.y;e++)((e,t,o,r,i)=>{var s=e%m,a=t%m,s=s<0?s+m:s,a=a<0?a+m:a;!d[""+o].tiles[e+","+t]&&l.url&&(s=n(l.url,s,a,o),d[o].loaded=!1,d[""+o].tiles[e+","+t]=M.renderer.image(s,e*h-r,t*h-i,h,h).attr({zIndex:2,opacity:0}).on("load",function(){l.onload&&l.onload.apply(this),o!==(v.zoom<0?0:Math.floor(v.zoom))&&o!==y.minZoom||(d[""+o].actualTilesCount++,d[""+o].howManyTiles===d[""+o].actualTilesCount&&(d[o].loaded=!0,y.isAnimating?y.redrawTiles=!0:(y.redrawTiles=!1,f(g)),d[""+o].actualTilesCount=0))}).add(p[o]),d[""+o].tiles[e+","+t].posX=e,d[""+o].tiles[e+","+t].posY=t,d[""+o].tiles[e+","+t].originalURL=s)})(t,e,x,T,Z)}for(let c of Object.keys(d))for(let h of Object.keys(d[c].tiles))if(v.projection&&v.projection.def){let p=.638436911716859*Math.pow(2,e)/(.638436911716859*Math.pow(2,parseFloat(c)))*256,r=d[c].tiles[Object.keys(d[c].tiles)[0]],{posX:l,posY:m}=d[c].tiles[h];if(w(l)&&w(m)&&w(r.posX)&&w(r.posY)){let e=this.tileToLonLat(r.posX,r.posY,parseFloat(c)),t=v.projection.def.forward([e.lon+u,e.lat]),o=v.projectedUnitsToPixels({x:t[0],y:t[1]}),a=r.posX*p-o.x,n=r.posY*p-o.y;if(M.renderer.globalAnimation&&M.hasRendered){let o=Number(d[c].tiles[h].attr("x")),r=Number(d[c].tiles[h].attr("y")),i=Number(d[c].tiles[h].attr("width")),s=Number(d[c].tiles[h].attr("height")),e=(e,t)=>{d[c].tiles[h].attr({x:o+(l*p-a-o)*t.pos,y:r+(m*p-n-r)*t.pos,width:i+(Math.ceil(p)+1-i)*t.pos,height:s+(Math.ceil(p)+1-s)*t.pos})};y.isAnimating=!0,d[c].tiles[h].attr({animator:0}).animate({animator:1},{step:e},function(){y.isAnimating=!1,y.redrawTiles&&(y.redrawTiles=!1,f(g))})}else(y.redrawTiles||parseFloat(c)!==x||(d[c].isActive||parseFloat(c)===x)&&Object.keys(d[c].tiles).map(e=>d[c].tiles[e]).some(e=>0===e.opacity))&&(y.redrawTiles=!1,f(g)),d[c].tiles[h].attr({x:l*p-a,y:m*p-n,width:Math.ceil(p)+1,height:Math.ceil(p)+1})}}}else j("Highcharts warning: Tiles Provider not defined in the Provider Registry.",!1)}}update(){let e=this["transformGroups"],t=this.chart,o=t.mapView,r=arguments[0],i=r["provider"];if(e&&(e.forEach(e=>{0!==Object.keys(e).length&&e.destroy()}),this.transformGroups=[]),o&&!w(t.userOptions.mapView?.projection)&&i&&i.type){let e=b[i.type];var s;e&&(s=(new e)["initialProjectionName"],o.update({projection:{name:s}}))}super.update.apply(this,arguments)}}c.defaultOptions=l(n.defaultOptions,{states:{inactive:{enabled:!1}}}),s().registerSeriesType("tiledwebmap",c);let d=t(),y=(d.TilesProviderRegistry=d.TilesProviderRegistry||b,c.compose(d.MapView),t());return e.default})());