!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.Color,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/modules/venn",["highcharts/highcharts"],function(e){return t(e,e.Color,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/modules/venn"]=t(e._Highcharts,e._Highcharts.Color,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.Color,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(le,ue,fe)=>(()=>{"use strict";var _={512:e=>{e.exports=fe},620:e=>{e.exports=ue},944:e=>{e.exports=le}},r={};function n(e){var t=r[e];if(void 0!==t)return t.exports;t=r[e]={exports:{}};return _[e](t,t.exports,n),t.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var e={},t=(n.d(e,{default:()=>ce}),n(944)),t=n.n(t),i=n(620),i=n.n(i),s=((s=x=x||{}).getCenterOfPoints=function(e){var t=e.reduce((e,t)=>(e.x+=t.x,e.y+=t.y,e),{x:0,y:0});return{x:t.x/e.length,y:t.y/e.length}},s.getDistanceBetweenPoints=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))},s.getAngleBetweenPoints=function(e,t){return Math.atan2(t.x-e.x,t.y-e.y)},s.pointInPolygon=function({x:e,y:t},r){var n=r.length;let i,s,o=!1;for(i=0,s=n-1;i<n;s=i++){var[a,c]=r[i],[l,u]=r[s];t<c!=t<u&&e<(l-a)*(t-c)/(u-c)+a&&(o=!o)}return o},x);const{getAngleBetweenPoints:l,getCenterOfPoints:u,getDistanceBetweenPoints:f}=s;function h(e,t){t=Math.pow(10,t);return Math.round(e*t)/t}function o(e){if(e<=0)throw new Error("radius of circle must be a positive number.");return Math.PI*e*e}function a(e,t){return e*e*Math.acos(1-t/e)-(e-t)*Math.sqrt(t*(2*e-t))}function c(e,t){var r,n,i,s=f(e,t),o=e.r,a=t.r;let c=[];return s<o+a&&s>Math.abs(o-a)&&(a=((o=o*o)-a*a+s*s)/(2*s),o=Math.sqrt(o-a*a),i=(r=e.x)+a*((n=t.x)-r)/s,t=(e=e.y)+a*((a=t.y)-e)/s,a=o/s*-(a-e),e=o/s*-(n-r),c=[{x:h(i+a,14),y:h(t-e,14)},{x:h(i-a,14),y:h(t+e,14)}]),c}function p(e){return e.reduce((e,i,s,t)=>{t=t.slice(s+1).reduce((e,t,r)=>{const n=[s,r+s+1];return e.concat(c(i,t).map(e=>(e.indexes=n,e)))},[]);return e.concat(t)},[])}function d(e,t){return f(e,t)<=t.r+1e-10}function g(t,e){return!e.some(function(e){return!d(t,e)})}function y(t){return p(t).filter(function(e){return g(e,t)})}(x=v=v||{}).round=h,x.getAreaOfCircle=o,x.getCircularSegmentArea=a,x.getOverlapBetweenCircles=function(e,t,r){let n=0;var i;return n=r<e+t?h(n=r<=Math.abs(t-e)?o(e<t?e:t):(i=r-(r=(e*e-t*t+r*r)/(2*r)),a(e,e-r)+a(t,t-i)),14):n},x.getCircleCircleIntersection=c,x.getCirclesIntersectionPoints=p,x.isCircle1CompletelyOverlappingCircle2=function(e,t){return f(e,t)+t.r<e.r+1e-10},x.isPointInsideCircle=d,x.isPointInsideAllCircles=g,x.isPointOutsideAllCircles=function(t,e){return!e.some(function(e){return d(t,e)})},x.getCirclesIntersectionPolygon=y,x.getAreaOfIntersectionBetweenCircles=function(c){let e=y(c),t;if(1<e.length){const n=u(e);var r=(e=e.map(function(e){return e.angle=l(n,e),e}).sort(function(e,t){return t.angle-e.angle}))[e.length-1];const i=e.reduce(function(e,s){const o=e["startPoint"],a=u([o,s]);var t,r=s.indexes.filter(function(e){return-1<o.indexes.indexOf(e)}).reduce(function(e,t){var t=c[t],r=l(t,s),n=l(t,o),n=n-(n-r+(n<r?2*Math.PI:0))/2;let i=f(a,{x:t.x+t.r*Math.sin(n),y:t.y+t.r*Math.cos(n)});r=t.r;return i>2*r&&(i=2*r),e=!e||e.width>i?{r:r,largeArc:i>r?1:0,width:i,x:s.x,y:s.y}:e},null);return r&&(t=r["r"],e.arcs.push(["A",t,t,0,r.largeArc,1,r.x,r.y]),e.startPoint=s),e},{startPoint:r,arcs:[]}).arcs;0!==i.length&&1!==i.length&&(i.unshift(["M",r.x,r.y]),t={center:n,d:i})}return t};var x=v;const H={draw:function(e,t){const{animatableAttribs:r,onComplete:n,css:i,renderer:s}=t;var o=e.series&&e.series.chart.hasRendered?void 0:e.series&&e.series.options.animation;let a=e.graphic;if(t.attribs={...t.attribs,class:e.getClassName()},e.shouldDraw())a||(a="text"===t.shapeType?s.text():"image"===t.shapeType?s.image(t.imageUrl||"").attr(t.shapeArgs||{}):s[t.shapeType](t.shapeArgs||{}),(e.graphic=a).add(t.group)),i&&a.css(i),a.attr(t.attribs).animate(r,!t.isNew&&o,n);else if(a){const c=()=>{e.graphic=a=a&&a.destroy(),"function"==typeof n&&n()};Object.keys(r).length?a.animate(r,void 0,()=>c()):c()}}};var v=n(512),v=n.n(v),{pointClass:m}=v().seriesTypes["scatter"]["prototype"];const D=t()["isNumber"];class X extends m{isValid(){return D(this.value)}shouldDraw(){return!!this.shapeArgs}}var m=X,k={borderColor:"#cccccc",borderDashStyle:"solid",borderWidth:1,brighten:0,clip:!1,colorByPoint:!0,dataLabels:{enabled:!0,verticalAlign:"middle",formatter:function(){return this.point.name}},inactiveOtherPoints:!0,marker:!1,opacity:.75,showInLegend:!1,legendType:"point",states:{hover:{opacity:1,borderColor:"#333333"},select:{color:"#cccccc",borderColor:"#000000",animation:!1},inactive:{opacity:.075}},tooltip:{pointFormat:"{point.name}: {point.value}"},legendSymbol:"rectangle"};const{getAreaOfCircle:U,getCircleCircleIntersection:F,getOverlapBetweenCircles:b,isPointInsideAllCircles:R,isPointInsideCircle:W,isPointOutsideAllCircles:q}=x,C=s["getDistanceBetweenPoints"],{extend:Y,isArray:O,isNumber:G,isObject:A,isString:z}=t();function w(e){const i={};return e.filter(e=>2===e.sets.length).forEach(n=>{n.sets.forEach((e,t,r)=>{A(i[e])||(i[e]={totalOverlap:0,overlapping:{}}),i[e]={totalOverlap:(i[e].totalOverlap||0)+n.value,overlapping:{...i[e].overlapping||{},[r[1-t]]:n.value}}})}),e.filter(S).forEach(e=>{var t=i[e.sets[0]];Y(e,t)}),e}function M(e,t,r,n,i){var s=e(t),o=e(r),a=i||100,c=n||1e-10;let l=r-t,u,f,h=1;if(r<=t)throw new Error("a must be smaller than b.");if(0<s*o)throw new Error("f(a) and f(b) must have opposite signs.");if(0===s)u=t;else if(0===o)u=r;else for(;h++<=a&&0!==f&&l>c;)l=(r-t)/2,u=t+l,0<s*(f=e(u))?t=u:r=u;return u}function P(e){const t=e.slice(0,-1),r=t.length,n=[],i=(e,t)=>(e.sum+=t[e.i],e);for(let e=0;e<r;e++)n[e]=t.reduce(i,{sum:0,i:e}).sum/r;return n}function I(t,r,n){var e=t+r;let i;return i=n<=0?e:U(t<r?t:r)<=n?0:M(e=>{e=b(t,r,e);return n-e},0,e)}function S(e){return O(e.sets)&&1===e.sets.length}function T(e){const r={};return A(e)&&G(e.value)&&-1<e.value&&O(e.sets)&&0<e.sets.length&&!e.sets.some(function(e){let t=!1;return!r[e]&&z(e)?r[e]=!0:t=!0,t})}function E(n,e){return e.reduce(function(e,t){let r=0;return 1<t.sets.length&&(t=t.value-function(e){let t=0;var r;return 2===e.length&&(r=e[0],e=e[1],t=b(r.r,e.r,C(r,e))),t}(t.sets.map(function(e){return n[e]})),r=Math.round(t*t*1e11)/1e11),e+r},0)}function J(e,t){return void 0!==t.totalOverlap&&void 0!==e.totalOverlap?t.totalOverlap-e.totalOverlap:NaN}const L={geometry:s,geometryCircles:x,addOverlapToSets:w,getCentroid:P,getDistanceBetweenCirclesByOverlap:I,getLabelWidth:function(i,s,e){const t=s.reduce((e,t)=>Math.min(t.r,e),1/0),o=e.filter(e=>!W(i,e));function r(r,n){return M(e=>{var t={x:i.x+n*e,y:i.y},t=R(t,s)&&q(t,o);return-(r-e)+(t?0:Number.MAX_VALUE)},0,r)}return 2*Math.min(r(t,-1),r(t,1))},getMarginFromCircles:function(r,e,t){return e=e.reduce((e,t)=>{t=t.r-C(r,t);return t<=e?t:e},Number.MAX_VALUE),t.reduce((e,t)=>{t=C(r,t)-t.r;return t<=e?t:e},e)},isSet:S,layoutGreedyVenn:function(e){const f=[],h={};e.filter(e=>1===e.sets.length).forEach(e=>{h[e.sets[0]]=e.circle={x:Number.MAX_VALUE,y:Number.MAX_VALUE,r:Math.sqrt(e.value/Math.PI)}});var t=(e,t)=>{const r=e.circle;r&&(r.x=t.x,r.y=t.y),f.push(e)};w(e);const r=e.filter(S).sort(J),p=(t(r.shift(),{x:0,y:0}),e.filter(e=>2===e.sets.length));for(const i of r){const d=i.circle;if(d){const g=d.r,y=i.overlapping;var n=f.reduce((e,t,r)=>{var n=t.circle;if(!n||!y)return e;var t=y[t.sets[0]],i=I(g,n.r,t);let s=[{x:n.x+i,y:n.y},{x:n.x-i,y:n.y},{x:n.x,y:n.y+i},{x:n.x,y:n.y-i}];for(const l of f.slice(r+1)){var o=l.circle,a=y[l.sets[0]];o&&(a=I(g,o.r,a),s=s.concat(F({x:n.x,y:n.y,r:i},{x:o.x,y:o.y,r:a})))}for(const u of s){d.x=u.x,d.y=u.y;var c=E(h,p);c<e.loss&&(e.loss=c,e.coordinates=u)}return e},{loss:Number.MAX_VALUE,coordinates:void 0});t(i,n.coordinates)}}return h},loss:E,nelderMead:function(s,e){function t(e,t){return e.fx-t.fx}const o=(r,e,n,i)=>e.map((e,t)=>r*e+n*i[t]);var r=(e,t)=>(t.fx=s(t),e[e.length-1]=t,e),n=e=>{const r=e[0];return e.map(e=>{const t=o(.5,r,.5,e);return t.fx=s(t),t})},i=(e,t,r,n)=>{const i=o(r,e,n,t);return i.fx=s(i),i};let a=(t=>{const r=t.length,n=new Array(r+1);n[0]=t,n[0].fx=s(t);for(let e=0;e<r;++e){const i=t.slice();i[e]=i[e]?1.05*i[e]:.001,i.fx=s(i),n[e+1]=i}return n})(e);for(let e=0;e<100;e++){a.sort(t);var c=a[a.length-1],l=P(a),u=i(l,c,2,-1);if(u.fx<a[0].fx){var f=i(l,c,3,-2);a=r(a,f.fx<u.fx?f:u)}else if(u.fx>=a[a.length-2].fx){let e;a=u.fx>c.fx?(e=i(l,c,.5,.5)).fx<c.fx?r(a,e):n(a):(e=i(l,c,1.5,-.5)).fx<u.fx?r(a,e):n(a)}else a=r(a,u)}return a[0]},processVennData:function(e,s){const t=O(e)?e:[],r=t.reduce(function(e,t){var r;return t.sets&&(T(r=t)&&S(r)&&0<r.value)&&-1===e.indexOf(t.sets[0])&&e.push(t.sets[0]),e},[]).sort(),n=t.reduce(function(e,t){return t.sets&&T(t)&&!t.sets.some(function(e){return-1===r.indexOf(e)})&&(e[t.sets.sort().join(s)]={sets:t.sets,value:t.value||0}),e},{});return r.reduce(function(t,r,e,n){const i=n.slice(e+1);return i.forEach(function(e){t.push(r+s+e)}),t},[]).forEach(function(e){var t;n[e]||(t={sets:e.split(s),value:0},n[e]=t)}),Object.keys(n).map(function(e){return n[e]})},sortByTotalOverlap:J},K=t()["animObject"],Q=i()["parse"],{getAreaOfIntersectionBetweenCircles:Z,getCirclesIntersectionPolygon:$,isCircle1CompletelyOverlappingCircle2:ee,isPointInsideAllCircles:te,isPointOutsideAllCircles:re}=x,ne=s["getCenterOfPoints"],j=v().seriesTypes["scatter"],{addEvent:ie,extend:se,isArray:oe,isNumber:B,isObject:ae,merge:V}=t();class N extends j{static getLabelPosition(n,i){let e=n.reduce((e,t)=>{var r=t.r/2;return[{x:t.x,y:t.y},{x:t.x+r,y:t.y},{x:t.x-r,y:t.y},{x:t.x,y:t.y+r},{x:t.x,y:t.y-r}].reduce((e,t)=>{var r=L.getMarginFromCircles(t,n,i);return e.margin<r&&(e.point=t,e.margin=r),e},e)},{point:void 0,margin:-Number.MAX_VALUE}).point;var t=L.nelderMead(e=>-L.getMarginFromCircles({x:e[0],y:e[1]},n,i),[e.x,e.y]);return e={x:t[0],y:t[1]},e=te(e,n)&&re(e,i)?e:1<n.length?ne($(n)):{x:n[0].x,y:n[0].y}}static getLabelValues(e,t){const n=e.sets,r=t.reduce((e,t)=>{var r=-1<n.indexOf(t.sets[0]);return t.circle&&e[r?"internal":"external"].push(t.circle),e},{internal:[],external:[]});r.external=r.external.filter(t=>r.internal.some(e=>!ee(t,e)));e=N.getLabelPosition(r.internal,r.external);return{position:e,width:L.getLabelWidth(e,r.internal,r.external)}}static layout(e){const t={},r={};if(0<e.length){const o=L.layoutGreedyVenn(e);var n=e.filter(L.isSet);for(const a of e){const c=a.sets;var i=c.join(),s=L.isSet(a)?o[i]:Z(c.map(e=>o[e]));s&&(t[i]=s,r[i]=N.getLabelValues(a,n))}}return{mapOfIdToShape:t,mapOfIdToLabelValues:r}}static getScale(e,t,r){var n=r.bottom-r.top,i=r.right-r.left,s=(r.right+r.left)/2,r=(r.top+r.bottom)/2,i=Math.min(0<i?1/i*e:1,0<n?1/n*t:1);return{scale:i,centerX:e/2-s*i,centerY:t/2-r*i}}static updateFieldBoundaries(e,t){var r=t.x-t.r,n=t.x+t.r,i=t.y+t.r,t=t.y-t.r;return(!B(e.left)||e.left>r)&&(e.left=r),(!B(e.right)||e.right<n)&&(e.right=n),(!B(e.top)||e.top>t)&&(e.top=t),(!B(e.bottom)||e.bottom<i)&&(e.bottom=i),e}animate(e){if(!e){var t=K(this.options.animation);for(const n of this.points){var r=n.shapeArgs;if(n.graphic&&r){const i={},s={};r.d?i.opacity=.001:(i.r=0,s.r=r.r),n.graphic.attr(i).animate(s,t),r.d&&setTimeout(()=>{n?.graphic?.animate({opacity:1})},t.duration)}}}}drawPoints(){var e=this.chart,t=this.group,r=this.points||[],n=e.renderer;for(const o of r){var i={zIndex:oe(o.sets)?o.sets.length:0},s=o.shapeArgs;e.styledMode||se(i,this.pointAttribs(o,o.state)),H.draw(o,{isNew:!o.graphic,animatableAttribs:s,attribs:i,group:t,renderer:n,shapeType:s?.d?"path":"circle"})}}init(){j.prototype.init.apply(this,arguments),delete this.opacity}pointAttribs(e,t){var r=this.options||{},n=e?.options||{},t=t&&r.states[t]||{},r=V(r,{color:e?.color},n,t);return{fill:Q(r.color).brighten(r.brightness).get(),opacity:r.opacity,stroke:r.borderColor,"stroke-width":r.borderWidth,dashstyle:r.borderDashStyle}}translate(){var e=this.chart,t=(this.dataTable.modified=this.dataTable,this.generatePoints(),L.processVennData(this.options.data,N.splitter));const{mapOfIdToShape:n,mapOfIdToLabelValues:i}=N.layout(t),r=Object.keys(n).filter(e=>{e=n[e];return e&&B(e.r)}).reduce((e,t)=>N.updateFieldBoundaries(e,n[t]),{top:0,bottom:0,left:0,right:0}),s=N.getScale(e.plotWidth,e.plotHeight,r),o=s.scale,a=s.centerX,c=s.centerY;for(const l of this.points){const u=oe(l.sets)?l.sets:[],f=u.join(),h=n[f],p=i[f]||{},d=l.options?.dataLabels;let e,t=p.width,r=p.position;if(h){if(h.r)e={x:a+h.x*o,y:c+h.y*o,r:h.r*o};else if(h.d){const g=h.d;g.forEach(e=>{"M"===e[0]?(e[1]=a+e[1]*o,e[2]=c+e[2]*o):"A"===e[0]&&(e[1]=e[1]*o,e[2]=e[2]*o,e[6]=a+e[6]*o,e[7]=c+e[7]*o)}),e={d:g}}r?(r.x=a+r.x*o,r.y=c+r.y*o):r={},B(t)&&(t=Math.round(t*o))}l.shapeArgs=e,r&&e&&(l.plotX=r.x,l.plotY=r.y),t&&e&&(l.dlOptions=V(!0,{style:{width:t}},ae(d,!0)?d:void 0)),l.name=l.options.name||u.join("∩")}}}N.splitter="highcharts-split",N.defaultOptions=V(j.defaultOptions,k),se(N.prototype,{axisTypes:[],directTouch:!0,isCartesian:!1,pointArrayMap:["value"],pointClass:m,utils:L}),ie(N,"afterSetOptions",function(e){const t=e.options,r=t.states||{};if(this.is("venn"))for(const n of Object.keys(r))r[n].halo=!1}),v().registerSeriesType("venn",N);const ce=t();return e.default})());