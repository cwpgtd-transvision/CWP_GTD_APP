!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.Series,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/modules/histogram-bellcurve",["highcharts/highcharts"],function(e){return t(e,e.Series,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/modules/histogram-bellcurve"]=t(e._Highcharts,e._Highcharts.Series,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.Series,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(j,q,B)=>(()=>{"use strict";var s={512:e=>{e.exports=B},820:e=>{e.exports=q},944:e=>{e.exports=j}},i={};function r(e){var t=i[e];if(void 0!==t)return t.exports;t=i[e]={exports:{}};return s[e](t,t.exports,r),t.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var s in t)r.o(t,s)&&!r.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var e={},t=(r.d(e,{default:()=>w}),r(944)),t=r.n(t),a=r(820),n=r.n(a);const o=t()["noop"],{addEvent:h,defined:d}=t();function u(){n().prototype.init.apply(this,arguments),this.initialised=!1,this.baseSeries=null,this.eventRemovers=[],this.addEvents()}function p(){const e=this.chart,t=this.options.baseSeries,s=d(t)&&(e.series[t]||e.get(t));this.baseSeries=s||null}function c(){this.eventRemovers.push(h(this.chart,"afterLinkSeries",()=>{this.setBaseSeries(),this.baseSeries&&!this.initialised&&(this.setDerivedData(),this.addBaseSeriesEvents(),this.initialised=!0)}))}function l(){this.eventRemovers.push(h(this.baseSeries,"updatedData",()=>{this.setDerivedData()}),h(this.baseSeries,"destroy",()=>{this.baseSeries=null,this.initialised=!1}))}function v(){this.eventRemovers.forEach(e=>{e()}),n().prototype.destroy.apply(this,arguments)}(a=f=f||{}).hasDerivedData=!0,a.setDerivedData=o,a.compose=function(e){const t=e.prototype;return t.addBaseSeriesEvents=l,t.addEvents=c,t.destroy=v,t.init=u,t.setBaseSeries=p,e},a.init=u,a.setBaseSeries=p,a.addEvents=c,a.addBaseSeriesEvents=l,a.destroy=v;const g=f;var a={binsNumber:"square-root",binWidth:void 0,pointPadding:0,groupPadding:0,grouping:!1,pointPlacement:"between",tooltip:{headerFormat:"",pointFormat:'<span style="font-size: 0.8em">{point.x} - {point.x2}</span><br/><span style="color:{point.color}">‚óè</span> {series.name} <b>{point.y}</b><br/>'}},f=r(512),f=r.n(f),m=f().seriesTypes["column"];const{arrayMax:b,arrayMin:y,correctFloat:D,extend:S,isNumber:x,merge:M}=t(),H={"square-root":function(e){return Math.ceil(Math.sqrt(e.options.data.length))},sturges:function(e){return Math.ceil(Math.log(e.options.data.length)*Math.LOG2E)},rice:function(e){return Math.ceil(2*Math.pow(e.options.data.length,1/3))}};class O extends m{binsNumber(){var e=this.options.binsNumber;const t=H[e]||"function"==typeof e&&e;return Math.ceil(t&&t(this.baseSeries)||(x(e)?e:H["square-root"](this.baseSeries)))}derivedData(e,t,s){const i=D(b(e)),r=D(y(e)),a=[],n={},o=[];let h;for(s=this.binWidth=D(x(s)?s||1:(i-r)/t),this.options.pointRange=Math.max(s,0),h=r;h<i&&(this.userOptions.binWidth||D(i-h)>=s||D(D(r+a.length*s)-h)<=0);h=D(h+s))a.push(h),n[h]=0;0!==n[r]&&(a.push(r),n[r]=0);u=a.map(e=>parseFloat(e));const d=function(e){let t=1;for(;u[t]<=e;)t++;return u[--t]};var u;for(const p of e)n[D(d(p))]++;for(const c of Object.keys(n))o.push({x:Number(c),y:n[c],x2:D(Number(c)+s)});return o.sort((e,t)=>e.x-t.x),o[o.length-1].x2=i,o}setDerivedData(){var e=this.baseSeries?.getColumn("y");e?.length?(e=this.derivedData(e,this.binsNumber(),this.options.binWidth),this.setData(e,!1)):this.setData([])}}O.defaultOptions=M(m.defaultOptions,a),S(O.prototype,{hasDerivedData:g.hasDerivedData}),g.compose(O),f().registerSeriesType("histogram",O);m={intervals:3,pointsInInterval:3,marker:{enabled:!1}},a=f().seriesTypes.areaspline;const{correctFloat:E,isNumber:R,merge:N}=t();class _ extends a{static mean(e){var t=e.length,e=e.reduce(function(e,t){return e+t},0);return 0<t&&e/t}static standardDeviation(e,s){var t=e.length,e=(s=R(s)?s:_.mean(e),e.reduce((e,t)=>{t-=s;return e+t*t},0));return 1<t&&Math.sqrt(e/(t-1))}static normalDensity(e,t,s){e-=t;return Math.exp(-e*e/(2*s*s))/(s*Math.sqrt(2*Math.PI))}derivedData(t,s){const e=this.options,i=e.intervals,r=e.pointsInInterval,a=i*r*2+1,n=s/r,o=[];let h=t-i*s;for(let e=0;e<a;e++)o.push([h,_.normalDensity(h,t,s)]),h+=n;return o}setDerivedData(){var e=this;e.baseSeries?.getColumn("y").length&&(e.setMean(),e.setStandardDeviation(),e.setData(e.derivedData(e.mean||0,e.standardDeviation||0),!1,void 0,!1))}setMean(){this.mean=E(_.mean(this.baseSeries?.getColumn("y")||[]))}setStandardDeviation(){this.standardDeviation=E(_.standardDeviation(this.baseSeries?.getColumn("y")||[],this.mean))}}_.defaultOptions=N(a.defaultOptions,m),g.compose(_),f().registerSeriesType("bellcurve",_);const w=t();return e.default})());