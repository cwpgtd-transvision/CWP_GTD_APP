!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(t._Highcharts,t._Highcharts.Axis,t._Highcharts.Color,t._Highcharts.LegendSymbol,t._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/modules/coloraxis",["highcharts/highcharts"],function(t){return e(t,t.Axis,t.Color,t.LegendSymbol,t.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/modules/coloraxis"]=e(t._Highcharts,t._Highcharts.Axis,t._Highcharts.Color,t._Highcharts.LegendSymbol,t._Highcharts.SeriesRegistry):t.Highcharts=e(t.Highcharts,t.Highcharts.Axis,t.Highcharts.Color,t.Highcharts.LegendSymbol,t.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(X,U,Y,F,G)=>(()=>{"use strict";var s={500:t=>{t.exports=F},512:t=>{t.exports=G},532:t=>{t.exports=U},620:t=>{t.exports=Y},944:t=>{t.exports=X}},o={};function i(t){var e=o[t];if(void 0!==e)return e.exports;e=o[t]={exports:{}};return s[t](e,e.exports,i),e.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var t={},e=(i.d(t,{default:()=>N}),i(944)),e=i.n(e),r=i(532),r=i.n(r),l=i(620),l=i.n(l);const a=l()["parse"],{addEvent:d,extend:c,merge:p,pick:g,splat:n}=e();{var f=S=S||{};let h;function u(){const t=this["userOptions"];this.colorAxis=[],t.colorAxis&&(t.colorAxis=n(t.colorAxis),t.colorAxis.map(t=>new h(this,t)))}function m(e){const t=this.chart.colorAxis||[],s=t=>{t=e.allItems.indexOf(t);-1!==t&&(this.destroyItem(e.allItems[t]),e.allItems.splice(t,1))};let o=[],i,r;for(t.forEach(function(t){(i=t.options)?.showInLegend&&(i.dataClasses&&i.visible?o=o.concat(t.getDataClassLegendSymbols()):i.visible&&o.push(t),t.series.forEach(function(t){t.options.showInLegend&&!i.dataClasses||("point"===t.options.legendType?t.points.forEach(function(t){s(t)}):s(t))}))}),r=o.length;r--;)e.allItems.unshift(o[r])}function x(t){t.visible&&t.item.legendColor&&t.item.legendItem.symbol.attr({fill:t.item.legendColor})}function y(e){this.chart.colorAxis?.forEach(t=>{t.update({},e.redraw)})}function b(){(this.chart.colorAxis?.length||this.colorAttribs)&&this.translateColors()}function C(){const t=this.axisTypes;t?-1===t.indexOf("colorAxis")&&t.push("colorAxis"):this.axisTypes=["colorAxis"]}function v(t){const e=this,s=t?"show":"hide";e.visible=e.options.visible=Boolean(t),["graphic","dataLabel"].forEach(function(t){e[t]&&e[t][s]()}),this.series.buildKDTree()}function A(){const s=this,t=this.getPointsCollection(),o=this.options.nullColor,i=this.colorAxis,r=this.colorKey;t.forEach(t=>{var e=t.getNestedProperty(r),e=t.options.color||(t.isNull||null===t.value?o:i&&void 0!==e?i.toColor(e,t):t.color||s.color);e&&t.color!==e&&(t.color=e,"point"===s.options.legendType&&t.legendItem&&t.legendItem.label&&s.chart.legend.colorizeItem(t,t.visible))})}function I(){this.elem.attr("fill",a(this.start).tweenTo(a(this.end),this.pos),void 0,!0)}function L(){this.elem.attr("stroke",a(this.start).tweenTo(a(this.end),this.pos),void 0,!0)}f.compose=function(t,e,s,o,i){const r=e.prototype,l=s.prototype,a=i.prototype;if(!r.collectionsWithUpdate.includes("colorAxis")){h=t,r.collectionsWithUpdate.push("colorAxis"),r.collectionsWithInit.colorAxis=[r.addColorAxis],d(e,"afterCreateAxes",u);{s=e;const n=s.prototype.createAxis;s.prototype.createAxis=function(t,e){var s=this;if("colorAxis"!==t)return n.apply(s,arguments);t=new h(s,p(e.axis,{index:s[t].length,isX:!1}));return s.isDirtyLegend=!0,s.axes.forEach(t=>{t.series=[]}),s.series.forEach(t=>{t.bindAxes(),t.isDirtyData=!0}),g(e.redraw,!0)&&s.redraw(e.animation),t}}l.fillSetter=I,l.strokeSetter=L,d(o,"afterGetAllItems",m),d(o,"afterColorizeItem",x),d(o,"afterUpdate",y),c(a,{optionalAxis:"colorAxis",translateColors:A}),c(a.pointClass.prototype,{setVisible:v}),d(i,"afterTranslate",b,{order:1}),d(i,"bindAxes",C)}},f.pointSetVisible=v}const T=S;f={lineWidth:0,minPadding:0,maxPadding:0,gridLineColor:"#ffffff",gridLineWidth:1,tickPixelInterval:72,startOnTick:!0,endOnTick:!0,offset:0,marker:{animation:{duration:50},width:.01,color:"#999999"},labels:{distance:8,overflow:"justify",rotation:0},minColor:"#e6e9ff",maxColor:"#0022ff",tickLength:5,showInLegend:!0};const w=l()["parse"],_=e()["merge"];(S=h=h||{}).initDataClasses=function(t){const e=this,s=e.chart,o=e.legendItem=e.legendItem||{},i=e.options,r=t.dataClasses||[];let l,a,n=s.options.chart.colorCount,h=0,d;e.dataClasses=a=[],o.labels=[];for(let t=0,e=r.length;t<e;++t)l=r[t],l=_(l),a.push(l),!s.styledMode&&l.color||("category"===i.dataClassColor?(s.styledMode||(d=s.options.colors||[],n=d.length,l.color=d[h]),l.colorIndex=h,++h===n&&(h=0)):l.color=w(i.minColor).tweenTo(w(i.maxColor),e<2?.5:t/(e-1)))},S.initStops=function(){const t=this.options,s=this.stops=t.stops||[[0,t.minColor||""],[1,t.maxColor||""]];for(let t=0,e=s.length;t<e;++t)s[t].color=w(s[t][1])},S.normalizedValue=function(t){var e=this.max||0,s=this.min||0;return 1-(e-(t=this.logarithmic?this.logarithmic.log2lin(t):t))/(e-s||1)},S.toColor=function(t,e){var s=this.dataClasses,o=this.stops;let i,r,l,a,n,h;if(s){for(h=s.length;h--;)if(n=s[h],r=n.from,l=n.to,(void 0===r||t>=r)&&(void 0===l||t<=l)){a=n.color,e&&(e.dataClass=h,e.colorIndex=n.colorIndex);break}}else{for(i=this.normalizedValue(t),h=o.length;h--&&!(i>o[h][0]););r=o[h]||o[h+1],l=o[h+1]||r,i=1-(l[0]-i)/(l[0]-r[0]||1),a=r.color.tweenTo(l.color,i)}return a};var l=h,S=i(500),W=i.n(S),h=i(512),S=i.n(h);const M=e()["defaultOptions"],P=S()["series"],{defined:k,extend:z,fireEvent:j,isArray:K,isNumber:R,merge:D,pick:E,relativeLength:H}=e();M.colorAxis=D(M.xAxis,f);class O extends r(){static compose(t,e,s,o){T.compose(O,t,e,s,o)}constructor(t,e){super(t,e),this.coll="colorAxis",this.visible=!0,this.init(t,e)}init(t,e){var s=this,o=t.options.legend||{},o=e.layout?"vertical"!==e.layout:"vertical"!==o.layout;s.side=e.side||o?2:1,s.reversed=e.reversed||!o,s.opposite=!o,super.init(t,e,"colorAxis"),this.userOptions=e,K(t.userOptions.colorAxis)&&(t.userOptions.colorAxis[this.index]=e),e.dataClasses&&s.initDataClasses(e),s.initStops(),s.horiz=o,s.zoomEnabled=!1}hasData(){return!!(this.tickPositions||[]).length}setTickPositions(){if(!this.dataClasses)return super.setTickPositions()}setOptions(t){t=D(M.colorAxis,t,{showEmpty:!1,title:null,visible:this.chart.options.legend.enabled&&!1!==t.visible});super.setOptions(t),this.options.crosshair=this.options.marker}setAxisSize(){const t=this.chart,e=this.legendItem?.symbol;let{width:s,height:o}=this.getSize();e&&(this.left=+e.attr("x"),this.top=+e.attr("y"),this.width=s=+e.attr("width"),this.height=o=+e.attr("height"),this.right=t.chartWidth-this.left-s,this.bottom=t.chartHeight-this.top-o,this.pos=this.horiz?this.left:this.top),this.len=(this.horiz?s:o)||O.defaultLegendLength}getOffset(){var t=this,e=t.legendItem?.group,s=t.chart.axisOffset[t.side];if(e){t.axisParent=e,super.getOffset();const o=this.chart.legend;o.allItems.forEach(function(t){t instanceof O&&t.drawLegendSymbol(o,t)}),o.render(),this.chart.getMargins(!0),this.chart.series.some(t=>t.isDrilling)||(t.isDirty=!0),t.added||(t.added=!0,t.labelLeft=0,t.labelRight=t.width),t.chart.axisOffset[t.side]=s}}setLegendColor(){var t=this.horiz,e=this.reversed,s=e?1:0,e=e?0:1,t=t?[s,0,e,0]:[0,e,0,s];this.legendColor={linearGradient:{x1:t[0],y1:t[1],x2:t[2],y2:t[3]},stops:this.stops}}drawLegendSymbol(t,e){const s=e.legendItem||{},o=t.padding,i=t.options,r=this.options.labels,l=E(i.itemDistance,10),a=this.horiz,{width:n,height:h}=this.getSize(),d=E(i.labelPadding,a?16:30);this.setLegendColor(),s.symbol||(s.symbol=this.chart.renderer.symbol("roundedRect").attr({r:i.symbolRadius??3,zIndex:1}).add(s.group)),s.symbol.attr({x:0,y:(t.baseline||0)-11,width:n,height:h}),s.labelWidth=n+o+(a?l:E(r.x,r.distance)+(this.maxLabelLength||0)),s.labelHeight=h+o+(a?d:0)}setState(e){this.series.forEach(function(t){t.setState(e)})}setVisible(){}getSeriesExtremes(){var t,e=this.series;let s,o,i,r,l=e.length;for(this.dataMin=1/0,this.dataMax=-1/0;l--;){o=(r=e[l]).colorKey=E(r.options.colorKey,r.colorKey,r.pointValKey,r.zoneAxis,"y"),i=r[o+"Min"]&&r[o+"Max"];for(const a of[o,"value","y"])if((s=r.getColumn(a)).length)break;i?(r.minColorValue=r[o+"Min"],r.maxColorValue=r[o+"Max"]):(t=P.prototype.getExtremes.call(r,s),r.minColorValue=t.dataMin,r.maxColorValue=t.dataMax),k(r.minColorValue)&&k(r.maxColorValue)&&(this.dataMin=Math.min(this.dataMin,r.minColorValue),this.dataMax=Math.max(this.dataMax,r.maxColorValue)),i||P.prototype.applyExtremes.call(r)}}drawCrosshair(t,e){var s=this,o=s.legendItem||{},i=e?.plotX,r=e?.plotY,l=s.pos,a=s.len;let n;e&&((n=s.toPixels(e.getNestedProperty(e.series.colorKey)))<l?n=l-2:n>l+a&&(n=l+a+2),e.plotX=n,e.plotY=s.len-n,super.drawCrosshair(t,e),e.plotX=i,e.plotY=r,s.cross&&!s.cross.addedToColorAxis&&o.group&&(s.cross.addClass("highcharts-coloraxis-marker").add(o.group),s.cross.addedToColorAxis=!0,s.chart.styledMode||"object"!=typeof s.crosshair||s.cross.attr({fill:s.crosshair.color})))}getPlotLinePath(t){var e=this.left,s=t.translatedValue,o=this.top;return R(s)?this.horiz?[["M",s-4,o-6],["L",s+4,o-6],["L",s,o],["Z"]]:[["M",e,s],["L",e-6,s+6],["L",e-6,s-6],["Z"]]:super.getPlotLinePath(t)}update(t,e){const s=this,o=s.chart,i=o.legend;this.series.forEach(t=>{t.isDirtyData=!0}),(t.dataClasses&&i.allItems||s.dataClasses)&&s.destroyItems(),super.update(t,e),s.legendItem?.label&&(s.setLegendColor(),i.colorizeItem(this,!0))}destroyItems(){const t=this.chart,e=this.legendItem||{};if(e.label)t.legend.destroyItem(this);else if(e.labels)for(const s of e.labels)t.legend.destroyItem(s);t.isDirtyLegend=!0}destroy(){this.chart.isDirtyLegend=!0,this.destroyItems(),super.destroy(...[].slice.call(arguments))}remove(t){this.destroyItems(),super.remove(t)}getDataClassLegendSymbols(){const l=this,a=l.chart,n=l.legendItem&&l.legendItem.labels||[],t=a.options.legend,h=E(t.valueDecimals,-1),d=E(t.valueSuffix,""),c=s=>l.series.reduce((t,e)=>(t.push(...e.points.filter(t=>t.dataClass===s)),t),[]);let p;return n.length||l.dataClasses.forEach((t,s)=>{const e=t.from,o=t.to,i=a["numberFormatter"];let r=!0;p="",void 0===e?p="< ":void 0===o&&(p="> "),void 0!==e&&(p+=i(e,h)+d),void 0!==e&&void 0!==o&&(p+=" - "),void 0!==o&&(p+=i(o,h)+d),n.push(z({chart:a,name:p,options:{},drawLegendSymbol:W().rectangle,visible:!0,isDataClass:!0,setState:t=>{for(const e of c(s))e.setState(t)},setVisible:function(){this.visible=r=l.visible=!r;const t=[];for(const e of c(s))e.setVisible(r),e.hiddenInDataClass=!r,-1===t.indexOf(e.series)&&t.push(e.series);a.legend.colorizeItem(this,r),t.forEach(t=>{j(t,"afterDataClassLegendClick")})}},t))}),n}getSize(){var{chart:t,horiz:e}=this,{height:s,width:o}=this.options,i=t.options["legend"];return{width:E(k(o)?H(o,t.chartWidth):void 0,i?.symbolWidth,e?O.defaultLegendLength:12),height:E(k(s)?H(s,t.chartHeight):void 0,i?.symbolHeight,e?12:O.defaultLegendLength)}}}O.defaultLegendLength=200,O.keepProps=["legendItem"],z(O.prototype,l),Array.prototype.push.apply(r().keepProps,O.keepProps);h=O;const V=e(),N=(V.ColorAxis=V.ColorAxis||h,V.ColorAxis.compose(V.Chart,V.Fx,V.Legend,V.Series),e());return t.default})());