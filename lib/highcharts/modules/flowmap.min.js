!function(t,o){"object"==typeof exports&&"object"==typeof module?module.exports=o(t._Highcharts,t._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/modules/flowmap",["highcharts/highcharts"],function(t){return o(t,t.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/modules/flowmap"]=o(t._Highcharts,t._Highcharts.SeriesRegistry):t.Highcharts=o(t.Highcharts,t.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(v,b)=>(()=>{"use strict";var e={512:t=>{t.exports=b},944:t=>{t.exports=v}},i={};function s(t){var o=i[t];if(void 0!==o)return o.exports;o=i[t]={exports:{}};return e[t](o,o.exports,s),o.exports}s.n=t=>{var o=t&&t.__esModule?()=>t.default:()=>t;return s.d(o,{a:o}),o},s.d=(t,o)=>{for(var e in o)s.o(o,e)&&!s.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:o[e]})},s.o=(t,o)=>Object.prototype.hasOwnProperty.call(t,o);var t={},o=(s.d(t,{default:()=>P}),s(944)),o=s.n(o),r=s(512),r=s.n(r);let{prototype:{pointClass:n}}=r()["seriesTypes"]["mapline"],{pick:a,isString:h,isNumber:p}=o(),l=class extends n{isValid(){let o=!(!this.options.to||!this.options.from);return[this.options.to,this.options.from].forEach(function(t){o=!!(o&&t&&(h(t)||p(a(t[0],t.lat))&&p(a(t[1],t.lon))))}),o}},{series:{prototype:{pointClass:f}},seriesTypes:{column:d,map:g,mapline:c}}=r(),{addEvent:m,arrayMax:u,arrayMin:y,defined:k,extend:w,isArray:x,merge:A,pick:M,relativeLength:O}=o();class C extends c{static getLength(t,o){return Math.sqrt(t*t+o*o)}static normalize(t,o){var e=this.getLength(t,o);return[t/e,o/e]}static markerEndPath(t,o,e,i){let s=O(i.width||0,this.getLength(o[0]-t[0],o[1]-t[1])),r=i.markerType||"arrow",[n,a]=this.normalize(o[0]-t[0],o[1]-t[1]),h=[];var p,l,d,f;return"arrow"===r&&([i,p]=t,i-=n*s,p-=a*s,h.push(["L",i,p]),h.push(["L",e[0],e[1]]),[i,p]=o,i+=n*s,p+=a*s,h.push(["L",i,p])),"mushroom"===r&&([i,p]=t,[t,o]=o,[e,l]=e,d=(t-i)/2+i,f=(o-p)/2+p,i-=n*s,p-=a*s,h.push(["L",i,p]),t+=n*s,o+=a*s,h.push(["Q",2*(e-d)+d,2*(l-f)+f,t,o])),h}animate(t){let o=this.points;t||o.forEach(t=>{if(t.shapeArgs&&x(t.shapeArgs.d)&&t.shapeArgs.d.length){var i=t.shapeArgs.d,s=i[0][1],r=i[0][2];if(s&&r){let e=[];for(let o=0;o<i.length;o++){e.push([...i[o]]);for(let t=1;t<i[o].length;t++)e[o][t]=t%2?s:r}t.graphic&&(t.graphic.attr({d:e}),t.graphic.animate({d:i}))}}})}getLinkWidth(t){var o=this.options.width,e=t.options.weight||this.options.weight;if(t.options.weight=e,o&&!e)return o;t=this.smallestWeight,o=this.greatestWeight;if(!k(e)||!t||!o)return 0;var i=this.options.minWidth;return(e-t)*(this.options.maxWidth-i)/(o-t||1)+i}autoCurve(t,o,e,i,s,r){let n=e-t,a=i-o,h=(e-t)/2+t,p=(i-o)/2+o,l=h-s,d=p-r,f=n*l+a*d,g=Math.atan2(n*d-a*l,f),c=180*g/Math.PI;return c<0&&(c=360+c),-.7*Math.sin(c*Math.PI/180)}pointAttribs(t,o){let e=g.prototype.pointAttribs.call(this,t,o);return e.fill=M(t.options.fillColor,t.options.color,"none"===this.options.fillColor?null:this.options.fillColor,this.color),e["fill-opacity"]=M(t.options.fillOpacity,this.options.fillOpacity),e["stroke-width"]=M(t.options.lineWidth,this.options.lineWidth,1),t.options.opacity&&(e.opacity=t.options.opacity),e}translate(){!this.chart.hasRendered||!this.isDirtyData&&this.hasRendered||(this.processData(),this.generatePoints());let p=[],l=0,d=0;this.points.forEach(t=>{let o,e,i=this.chart,s=i.mapView,r=t.options,n=()=>{t.series.isDirty=!0},a=t=>{t=i.get(t);if(t instanceof f&&t.plotX&&t.plotY)return m(t,"update",n),{x:t.plotX,y:t.plotY}},h=t=>x(t)?{lon:t[0],lat:t[1]}:t;"string"==typeof r.from?o=a(r.from):"object"==typeof r.from&&s&&(o=s.lonLatToPixels(h(r.from))),"string"==typeof r.to?e=a(r.to):"object"==typeof r.to&&s&&(e=s.lonLatToPixels(h(r.to))),t.fromPos=o,t.toPos=e,o&&e&&(l+=(o.x+e.x)/2,d+=(o.y+e.y)/2),M(t.options.weight,this.options.weight)&&p.push(M(t.options.weight,this.options.weight))}),this.smallestWeight=y(p),this.greatestWeight=u(p),this.centerOfPoints={x:l/this.points.length,y:d/this.points.length},this.points.forEach(t=>{this.getLinkWidth(t)?(t.fromPos&&(t.plotX=t.fromPos.x,t.plotY=t.fromPos.y),t.shapeType="path",t.shapeArgs=this.getPointShapeArgs(t),t.color=M(t.options.color,t.series.color)):t.shapeArgs={d:[]}})}getPointShapeArgs(t){var{fromPos:o,toPos:e}=t;if(!o||!e)return{};let i=this.getLinkWidth(t)/2,s=t.options,r=A(this.options.markerEnd,s.markerEnd),n=M(s.growTowards,this.options.growTowards),a=o.x||0,h=o.y||0,p=e.x||0,l=e.y||0,d=M(s.curveFactor,this.options.curveFactor),f=r&&r.enabled&&r.height||0;k(d)||(d=this.autoCurve(a,h,p,l,this.centerOfPoints.x,this.centerOfPoints.y)),f&&(f=O(f,4*i),o=p-a,g=l-h,c=a+(o*=.5),m=h+(g*=.5),u=o,c=c+(o=g)*d,o=m+(g=-u)*d,[m,u]=C.normalize(c-p,o-l),m*=f,u*=f,p+=m,l+=u);var g=p-a,c=l-h,o=a+(g*=.5),m=h+(c*=.5),u=g,g=c,c=-u;let[y,w]=C.normalize(g,c),x=1+.25*Math.sqrt(d*d),P=(y*=i*x,w*=i*x,o+g*d),v=m+c*d,[b,L]=C.normalize(P-a,v-h);u=b,b=L,L=-u,b*=i,L*=i;var[o,g]=C.normalize(P-p,v-l),u=o,o=-g,g=u;o*=i,g*=i,n&&(b/=i,L/=i,y/=4,w/=4);let W={d:[["M",a-b,h-L],["Q",P-y,v-w,p-o,l-g],["L",p+o,l+g],["Q",P+y,v+w,a+b,h+L],["Z"]]};r&&r.enabled&&W.d&&(m=C.markerEndPath([p-o,l-g],[p+o,l+g],[e.x,e.y],r),W.d.splice(2,0,...m));c=t.options.from,u=t.options.to,o=c.lat,g=c.lon,e=u.lat,m=u.lon;return o&&g&&(t.options.from=+o+", "+ +g),e&&m&&(t.options.to=+e+", "+ +m),W}}C.defaultOptions=A(c.defaultOptions,{animation:!0,dataLabels:{enabled:!1},fillOpacity:.5,markerEnd:{enabled:!0,height:"40%",width:"40%",markerType:"arrow"},width:1,maxWidth:25,minWidth:5,lineWidth:void 0,tooltip:{headerFormat:'<span style="font-size: 0.8em">{series.name}</span><br/>',pointFormat:"{point.options.from} â†’ {point.options.to}: <b>{point.options.weight}</b>"}}),w(C.prototype,{pointClass:l,pointArrayMap:["from","to","weight"],drawPoints:d.prototype.drawPoints,dataColumnKeys:d.prototype.dataColumnKeys,useMapGeometry:!0}),r().registerSeriesType("flowmap",C);let P=o();return t.default})());