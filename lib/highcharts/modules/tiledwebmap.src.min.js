!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/modules/tiledwebmap",["highcharts/highcharts"],function(e){return t(e,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/modules/tiledwebmap"]=t(e._Highcharts,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(f,x)=>(()=>{"use strict";var o={512:e=>{e.exports=x},944:e=>{e.exports=f}},r={};function i(e){var t=r[e];if(void 0!==t)return t.exports;t=r[e]={exports:{}};return o[e](t,t.exports,i),t.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var e={},t=(i.d(e,{default:()=>g}),i(944)),t=i.n(t);const K={Esri:class{constructor(){this.defaultCredits="Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS,  Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012",this.initialProjectionName="WebMercator",this.themes={WorldStreetMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},DeLorme:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/Specialty/DeLorme_World_Base_Map/MapServer/tile/{z}/{y}/{x}",minZoom:1,maxZoom:11,credits:"Tiles &copy; Esri &mdash; Copyright: &copy;2012 DeLorme"},WorldTopoMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20,credits:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community"},WorldImagery:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20,credits:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"},WorldTerrain:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:13,credits:"Tiles &copy; Esri &mdash; Source: USGS, Esri, TANA, DeLorme, and NPS"},WorldShadedRelief:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:13,credits:"Tiles &copy; Esri &mdash; Source: Esri"},WorldPhysical:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:8,credits:"Tiles &copy; Esri &mdash; Source: US National Park Service"},NatGeoWorldMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:16,credits:"Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC"},WorldGrayCanvas:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:16,credits:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ"}}}},LimaLabs:class{constructor(){this.defaultCredits='Map data &copy;2023 <a href="https://maps.lima-labs.com/">LimaLabs</a>',this.initialProjectionName="WebMercator",this.requiresApiKey=!0,this.themes={Standard:{url:"https://cdn.lima-labs.com/{zoom}/{x}/{y}.png?api={apikey}",minZoom:0,maxZoom:20}}}},OpenStreetMap:class{constructor(){this.defaultCredits='Map data &copy2023 <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',this.initialProjectionName="WebMercator",this.subdomains=["a","b","c"],this.themes={Standard:{url:"https://tile.openstreetmap.org/{zoom}/{x}/{y}.png",minZoom:0,maxZoom:19},Hot:{url:"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png",minZoom:0,maxZoom:19},OpenTopoMap:{url:"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",minZoom:0,maxZoom:17,credits:`Map data: &copy; <a href="https://www.openstreetmap.org/copyright">
                OpenStreetMap</a> contributors, <a href="https://viewfinderpanoramas.org">SRTM</a> 
                | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> 
                (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)`}}}},Stamen:class{constructor(){this.defaultCredits='&copy; Map tiles by <a href="https://stamen.com">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="https://openstreetmap.org">OpenStreetMap</a>, under <a href="https://www.openstreetmap.org/copyright">ODbL</a>',this.initialProjectionName="WebMercator",this.subdomains=["a","b","c","d"],this.themes={Toner:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},TonerBackground:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},TonerLite:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},Terrain:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png",minZoom:0,maxZoom:18},TerrainBackground:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png",minZoom:0,maxZoom:18},Watercolor:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png",minZoom:1,maxZoom:16,credits:'&copy Map tiles by <a href="https://stamen.com">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="https://openstreetmap.org">OpenStreetMap</a>, under <a href="https://creativecommons.org/licenses/by-sa/3.0">CC BY SA</a>'}}}},Thunderforest:class{constructor(){this.defaultCredits='Maps &copy <a href="https://www.thunderforest.com">Thunderforest</a>, Data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>',this.initialProjectionName="WebMercator",this.requiresApiKey=!0,this.subdomains=["a","b","c"],this.themes={OpenCycleMap:{url:"https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Transport:{url:"https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},TransportDark:{url:"https://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},SpinalMap:{url:"https://{s}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Landscape:{url:"https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Outdoors:{url:"https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Pioneer:{url:"https://{s}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},MobileAtlas:{url:"https://{s}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Neighbourhood:{url:"https://{s}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22}}}},USGS:class{constructor(){this.defaultCredits='Tiles courtesy of the <a href="https://usgs.gov/">U.S. GeologicalSurvey</a>',this.initialProjectionName="WebMercator",this.themes={USTopo:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},USImagery:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryOnly/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},USImageryTopo:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryTopo/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20}}}}};var s=i(512),s=i.n(s),a={states:{inactive:{enabled:!1}}};const n=t()["composed"];var p=s().seriesTypes["map"];const{addEvent:m,defined:Y,error:F,merge:l,pick:X,pushUnique:c}=t();function h(e){const{geoBounds:t,chart:o}=e,r=(o.options.series||[]).filter(e=>"tiledwebmap"===e.type)[0];if(r&&r.provider&&r.provider.type&&!r.provider.url){const p=K[r.provider.type];var i,s,a,n;if(Y(p))return e=(new p)["initialProjectionName"],t?({x1:i,y1:s,x2:a,y2:n}=t,this.recommendedMapView={projection:{name:e,parallels:[s,n],rotation:[-(i+a)/2]}}):this.recommendedMapView={projection:{name:e},minZoom:0},!1;F("Highcharts warning: Tiles Provider not defined in the Provider Registry.",!1)}return!0}class d extends p{constructor(){super(...arguments),this.redrawTiles=!1,this.isAnimating=!1}static compose(e){c(n,"TiledWebMapSeries")&&m(e,"onRecommendMapView",h)}lonLatToTile(e,t){var{lon:e,lat:o}=e;return{x:Math.floor((e+180)/360*Math.pow(2,t)),y:Math.floor((1-Math.log(Math.tan(o*Math.PI/180)+1/Math.cos(o*Math.PI/180))/Math.PI)/2*Math.pow(2,t))}}tileToLonLat(e,t,o){e=e/Math.pow(2,o)*360-180,t=Math.PI-2*Math.PI*t/Math.pow(2,o);return{lon:e,lat:180/Math.PI*Math.atan(.5*(Math.exp(t)-Math.exp(-t)))}}drawPoints(){const m=this.chart,l=m.mapView;if(l){const c=this.tiles=this.tiles||{},h=this.transformGroups=this.transformGroups||[],d=this,R=this.options,y=R.provider,t=l["zoom"],a=X(l.projection.options.rotation&&l.projection.options.rotation[0],0),u=400.979322,g=256,f=m.renderer.forExport?0:200,x=o=>{for(const r of Object.keys(c))parseFloat(r)===(l.zoom<0?0:Math.floor(l.zoom))||d.minZoom&&(l.zoom<0?0:Math.floor(l.zoom))<d.minZoom&&parseFloat(r)===d.minZoom||d.maxZoom&&(l.zoom<0?0:Math.floor(l.zoom))>d.maxZoom&&parseFloat(r)===d.maxZoom?Object.keys(c[r].tiles).forEach((e,t)=>{c[r].tiles[e].animate({opacity:1},{duration:o},()=>{t===Object.keys(c[r].tiles).length-1&&(c[r].isActive=!0)})}):Object.keys(c[r].tiles).forEach((e,t)=>{c[r].tiles[e].animate({opacity:0},{duration:o,defer:o/2},()=>{c[r].tiles[e].destroy(),delete c[r].tiles[e],t===Object.keys(c[r].tiles).length-1&&(c[r].isActive=!1,c[r].loaded=!1)})})};let r=t<0?0:Math.floor(t),n=Math.pow(2,r),e=g/u*Math.pow(2,t)/(g/u*Math.pow(2,r)),p=256*e;if(y&&(y.type||y.url)){if(y.type&&!y.url){const M=K[y.type];if(!Y(M))return void F("Highcharts warning: Tiles Provider '"+y.type+"' not defined in the ProviderRegistry.",!1);const v=new M,D=v.initialProjectionName;let e,t="";y.theme&&Y(v.themes[y.theme])?e=v.themes[y.theme]:(o=Object.keys(v.themes)[0],e=v.themes[o],F("Highcharts warning: The Tiles Provider's Theme '"+y.theme+"' is not defined in the Provider definition - falling back to '"+o+"'.",!1)),y.subdomain&&v.subdomains&&-1!==v.subdomains.indexOf(y.subdomain)?t=y.subdomain:Y(v.subdomains)&&-1!==e.url.indexOf("{s}")&&(t=X(v.subdomains&&v.subdomains[0],""),F("Highcharts warning: The Tiles Provider's Subdomain '"+y.subdomain+"' is not defined in the Provider definition - falling back to '"+t+"'.",!1)),v.requiresApiKey&&(y.apiKey?e.url=e.url.replace("{apikey}",y.apiKey):(F("Highcharts warning: The Tiles Provider requires API Key to use tiles, use provider.apiKey to provide a token.",!1),e.url=e.url.replace("?apikey={apikey}",""))),y.url=e.url.replace("{s}",t),this.minZoom=e.minZoom,this.maxZoom=e.maxZoom;var o=X(m.userOptions.credits&&m.userOptions.credits.text,"Highcharts.com "+X(e.credits,v.defaultCredits));m.credits?m.credits.update({text:o}):m.addCredits({text:o,style:X(m.options.credits?.style,{})}),l.projection.options.name!==D&&F("Highcharts warning: The set projection is different than supported by Tiles Provider.",!1)}else l.projection.options.name||F("Highcharts warning: The set projection is different than supported by Tiles Provider.",!1);if(Y(this.minZoom)&&r<this.minZoom?(r=this.minZoom,n=Math.pow(2,r),e=g/u*Math.pow(2,t)/(g/u*Math.pow(2,r)),p=256*e):Y(this.maxZoom)&&r>this.maxZoom&&(r=this.maxZoom,n=Math.pow(2,r),e=g/u*Math.pow(2,t)/(g/u*Math.pow(2,r)),p=256*e),l.projection&&l.projection.def){l.projection.hasCoordinates=!0,h[r]||(h[r]=m.renderer.g().add(this.group));const B=(e,t,o,r)=>e.replace("{x}",t.toString()).replace("{y}",o.toString()).replace("{zoom}",r.toString()).replace("{z}",r.toString());const S=l.pixelsToProjectedUnits({x:0,y:0}),T=l.projection.def.inverse([S.x,S.y]),Z={lon:T[0]-a,lat:T[1]},b=l.pixelsToProjectedUnits({x:m.plotWidth,y:m.plotHeight}),w=l.projection.def.inverse([b.x,b.y]),j={lon:w[0]-a,lat:w[1]};(Z.lat>l.projection.maxLatitude||j.lat<-1*l.projection.maxLatitude)&&(Z.lat=l.projection.maxLatitude,j.lat=-1*l.projection.maxLatitude);var i=this.lonLatToTile(Z,r),s=this.lonLatToTile(j,r),o=this.tileToLonLat(i.x,i.y,r),o=l.projection.def.forward([o.lon+a,o.lat]),o=l.projectedUnitsToPixels({x:o[0],y:o[1]}),_=i.x*p-o.x,H=i.y*p-o.y;c[""+r]||(c[""+r]={tiles:{},isActive:!1,howManyTiles:0,actualTilesCount:0,loaded:!1}),c[""+r].howManyTiles=(s.x-i.x+1)*(s.y-i.y+1),c[""+r].actualTilesCount=0;for(let t=i.x;t<=s.x;t++)for(let e=i.y;e<=s.y;e++)((e,t,o,r,i)=>{var s=e%n,a=t%n,s=s<0?s+n:s,a=a<0?a+n:a;c[""+o].tiles[e+","+t]||y.url&&(s=B(y.url,s,a,o),c[o].loaded=!1,c[""+o].tiles[e+","+t]=m.renderer.image(s,e*p-r,t*p-i,p,p).attr({zIndex:2,opacity:0}).on("load",function(){y.onload&&y.onload.apply(this),o!==(l.zoom<0?0:Math.floor(l.zoom))&&o!==d.minZoom||(c[""+o].actualTilesCount++,c[""+o].howManyTiles===c[""+o].actualTilesCount&&(c[o].loaded=!0,d.isAnimating?d.redrawTiles=!0:(d.redrawTiles=!1,x(f)),c[""+o].actualTilesCount=0))}).add(h[o]),c[""+o].tiles[e+","+t].posX=e,c[""+o].tiles[e+","+t].posY=t,c[""+o].tiles[e+","+t].originalURL=s)})(t,e,r,_,H)}for(const P of Object.keys(c))for(const k of Object.keys(c[P].tiles))if(l.projection&&l.projection.def){const e=g/u*Math.pow(2,t)/(g/u*Math.pow(2,parseFloat(P))),o=256*e,z=c[P].tiles[Object.keys(c[P].tiles)[0]],{posX:A,posY:E}=c[P].tiles[k];if(Y(A)&&Y(E)&&Y(z.posX)&&Y(z.posY)){const C=this.tileToLonLat(z.posX,z.posY,parseFloat(P)),G=l.projection.def.forward([C.lon+a,C.lat]),O=l.projectedUnitsToPixels({x:G[0],y:G[1]}),N=z.posX*o-O.x,I=z.posY*o-O.y;if(m.renderer.globalAnimation&&m.hasRendered){const L=Number(c[P].tiles[k].attr("x")),W=Number(c[P].tiles[k].attr("y")),U=Number(c[P].tiles[k].attr("width")),V=Number(c[P].tiles[k].attr("height"));d.isAnimating=!0,c[P].tiles[k].attr({animator:0}).animate({animator:1},{step:(e,t)=>{c[P].tiles[k].attr({x:L+(A*o-N-L)*t.pos,y:W+(E*o-I-W)*t.pos,width:U+(Math.ceil(o)+1-U)*t.pos,height:V+(Math.ceil(o)+1-V)*t.pos})}},function(){d.isAnimating=!1,d.redrawTiles&&(d.redrawTiles=!1,x(f))})}else(d.redrawTiles||parseFloat(P)!==r||(c[P].isActive||parseFloat(P)===r)&&Object.keys(c[P].tiles).map(e=>c[P].tiles[e]).some(e=>0===e.opacity))&&(d.redrawTiles=!1,x(f)),c[P].tiles[k].attr({x:A*o-N,y:E*o-I,width:Math.ceil(o)+1,height:Math.ceil(o)+1})}}}else F("Highcharts warning: Tiles Provider not defined in the Provider Registry.",!1)}}update(){const e=this["transformGroups"],t=this.chart,o=t.mapView,r=arguments[0],i=r["provider"];if(e&&(e.forEach(e=>{0!==Object.keys(e).length&&e.destroy()}),this.transformGroups=[]),o&&!Y(t.userOptions.mapView?.projection)&&i&&i.type){const a=K[i.type];var s;a&&(s=(new a)["initialProjectionName"],o.update({projection:{name:s}}))}super.update.apply(this,arguments)}}d.defaultOptions=l(p.defaultOptions,a),s().registerSeriesType("tiledwebmap",d);const y=d,u=t(),g=(u.TilesProviderRegistry=u.TilesProviderRegistry||K,y.compose(u.MapView),t());return e.default})());