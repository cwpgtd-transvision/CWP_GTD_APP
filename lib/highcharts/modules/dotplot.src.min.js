!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/modules/dotplot",["highcharts/highcharts"],function(e){return t(e,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/modules/dotplot"]=t(e._Highcharts,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(p,l)=>(()=>{"use strict";var r={512:e=>{e.exports=l},944:e=>{e.exports=p}},s={};function i(e){var t=s[e];if(void 0!==t)return t.exports;t=s[e]={exports:{}};return r[e](t,t.exports,i),t.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var e={},t=(i.d(e,{default:()=>c}),i(944)),t=i.n(t),o={itemPadding:.1,marker:{symbol:"circle",states:{hover:{},select:{}}},slotsPerBar:void 0},a=i(512),a=i.n(a),d=a().seriesTypes["column"];const{extend:k,isNumber:H,merge:n,pick:P}=t();class h extends d{drawPoints(){const t=this,e=t.options,a=t.chart.renderer,d=e.marker,r=this.points.reduce((e,t)=>e+Math.abs(t.y||0),0),s=this.points.reduce((e,t)=>e+(t.shapeArgs?.height||0),0),n=e.itemPadding||0,i=this.points[0]?.shapeArgs?.width||0;let h=e.slotsPerBar,c=i;if(!H(h))for(h=1;h<r&&!(r/h<s/c*1.2);)h++,c=i/h;var p=s*h/r;for(const x of t.points){var l=x.marker||{},g=l.symbol||d.symbol,f=P(l.radius,d.radius),u="rect"!==g?p:c,l=x.shapeArgs||{},y=(l.x||0)+((l.width||0)-h*u)/2,m=Math.abs(x.y??0),v=l.y||0,l=l.height||0;let r,s=y,i=x.negative?v:v+l-p,o=0;x.graphics=r=x.graphics||[];const A=x.pointAttr?x.pointAttr[x.selected?"selected":""]||t.pointAttr[""]:t.pointAttribs(x,x.selected&&"select");if(delete A.r,t.chart.styledMode&&(delete A.stroke,delete A["stroke-width"]),"number"==typeof x.y){x.graphic||(x.graphic=a.g("point").add(t.group));for(let t=0;t<m;t++){var b={x:s+u*n,y:i+p*n,width:u*(1-2*n),height:p*(1-2*n),r:f};let e=r[t];e?e.animate(b):e=a.symbol(g).attr(k(b,A)).add(x.graphic),e.isActive=!0,r[t]=e,s+=u,++o>=h&&(o=0,s=y,i=x.negative?i+p:i-p)}}let e=-1;for(const w of r)++e,w&&(w.isActive?w.isActive=!1:(w.destroy(),r.splice(e,1)))}}}h.defaultOptions=n(d.defaultOptions,o),k(h.prototype,{markerAttribs:void 0}),a().registerSeriesType("dotplot",h);const c=t();return e.default})());