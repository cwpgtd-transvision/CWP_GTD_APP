"use strict";import BorderRadius from"../../Extensions/BorderRadius.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{gauge:GaugeSeries,pie:PieSeries}=SeriesRegistry.seriesTypes;import SolidGaugeAxis from"../../Core/Axis/SolidGaugeAxis.js";import SolidGaugeSeriesDefaults from"./SolidGaugeSeriesDefaults.js";import U from"../../Core/Utilities.js";const{clamp,extend,isNumber,merge,pick,pInt}=U;class SolidGaugeSeries extends GaugeSeries{translate(){const e=this.yAxis;SolidGaugeAxis.init(e),!e.dataClasses&&e.options.dataClasses&&e.initDataClasses(e.options),e.initStops(),GaugeSeries.prototype.translate.call(this)}drawPoints(){const l=this,n=l.yAxis,g=n.center,u=l.options,p=l.chart.renderer,e=u.overshoot,h=u.rounded&&void 0===u.borderRadius,c=isNumber(e)?e/180*Math.PI:0;let s;isNumber(u.threshold)&&(s=n.startAngleRad+n.translate(u.threshold,void 0,void 0,void 0,!0)),this.thresholdAngleRad=pick(s,n.startAngleRad);for(const f of l.points)if(!f.isNull){var S=pInt(pick(f.options.radius,u.radius,100))*g[2]/200,m=pInt(pick(f.options.innerRadius,u.innerRadius,60))*g[2]/200,R=Math.min(n.startAngleRad,n.endAngleRad),A=Math.max(n.startAngleRad,n.endAngleRad);let e=f.graphic,s=n.startAngleRad+n.translate(f.y,void 0,void 0,void 0,!0),i,r,t=n.toColor(f.y,f),a=f.getClassName();"none"!==(t="none"===t?f.color||l.color||"none":t)&&(f.color=t),s=clamp(s,R-c,A+c),!1===u.wrap&&(s=clamp(s,R,A));R=h?(S-m)/2/S:0,A=Math.min(s,l.thresholdAngleRad)-R;let o=Math.max(s,l.thresholdAngleRad)+R,d=(o-A>2*Math.PI&&(o=A+2*Math.PI),h?"50%":0);u.borderRadius&&(d=BorderRadius.optionsToObject(u.borderRadius).radius),f.shapeArgs=i={x:g[0],y:g[1],r:S,innerR:m,start:A,end:o,borderRadius:d},f.startR=S,e?(r=i.d,e.animate(extend({fill:t},i)),r&&(i.d=r)):f.graphic=e=p.arc(i).attr({fill:t,"sweep-flag":0}).add(l.group),l.chart.styledMode?l.yAxis?.stops&&(a=a.replace(/highcharts-color-\d/gm,"").trim()):("square"!==u.linecap&&e.attr({"stroke-linecap":"round","stroke-linejoin":"round"}),e.attr({stroke:u.borderColor||"none","stroke-width":u.borderWidth||0})),e&&e.addClass(a)}}animate(e){e||(this.startAngleRad=this.thresholdAngleRad,PieSeries.prototype.animate.call(this,e))}}SolidGaugeSeries.defaultOptions=merge(GaugeSeries.defaultOptions,SolidGaugeSeriesDefaults),SeriesRegistry.registerSeriesType("solidgauge",SolidGaugeSeries);export default SolidGaugeSeries;