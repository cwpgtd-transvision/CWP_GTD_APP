"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const ColumnSeries=SeriesRegistry.seriesTypes["column"];import VariwideComposition from"./VariwideComposition.js";import VariwidePoint from"./VariwidePoint.js";import VariwideSeriesDefaults from"./VariwideSeriesDefaults.js";import U from"../../Core/Utilities.js";const{addEvent,arrayMin,arrayMax,crisp,extend,merge,pick}=U;class VariwideSeries extends ColumnSeries{processData(i){this.totalZ=0,this.relZ=[],SeriesRegistry.seriesTypes.column.prototype.processData.call(this,i);const t=this.getColumn("z");(this.xAxis.reversed?t.slice().reverse():t).forEach(function(i,t){this.relZ[t]=this.totalZ,this.totalZ+=i},this),this.xAxis.categories&&(this.xAxis.variwide=!0,this.xAxis.zData=t)}postTranslate(i,t,e){const s=this.xAxis,r=this.relZ,a=s.reversed?r.length-i:i,o=s.reversed?-1:1,n=s.toPixels(s.reversed?(s.dataMax||0)+s.pointRange:s.dataMin||0),p=s.toPixels(s.reversed?s.dataMin||0:(s.dataMax||0)+s.pointRange),h=Math.abs(p-n),d=this.totalZ,l=this.chart.inverted?p-(this.chart.plotTop-o*s.minPixelPadding):n-this.chart.plotLeft-o*s.minPixelPadding,c=a/r.length*h,x=(a+o)/r.length*h,m=pick(r[a],d)/d*h,g=pick(r[a+o],d)/d*h,f=t-(l+c);return e&&(e.crosshairWidth=g-m),l+m+f*(g-m)/(x-c)}translate(){this.crispOption=this.options.crisp,this.options.crisp=!1,super.translate(),this.options.crisp=this.crispOption}correctStackLabels(){var i=this,t=i.options,e=i.yAxis;let s,r,a,o;for(const n of i.points)o=n.x,r=n.shapeArgs.width,(a=e.stacking.stacks[(i.negStacks&&n.y<(t.startFromThreshold?0:t.threshold)?"-":"")+i.stackKey])&&(s=a[o])&&!n.isNull&&s.setOffset(-r/2||0,r||0,void 0,void 0,n.plotX,i.xAxis)}getXExtremes(i){var t=arrayMax(i),e=this.getColumn("z")[i.indexOf(t)];return{min:arrayMin(i),max:t+(this.xAxis.categories?0:e)}}}VariwideSeries.compose=VariwideComposition.compose,VariwideSeries.defaultOptions=merge(ColumnSeries.defaultOptions,VariwideSeriesDefaults),addEvent(VariwideSeries,"afterColumnTranslate",function(){const e=this.xAxis,s=this.chart.inverted;let r=-1;for(const a of this.points){++r;const o=a.shapeArgs||{},{x:n=0,width:p=0}=o,{plotX:h=0,tooltipPos:d,z:l=0}=a;let i,t;t=e.variwide?(i=this.postTranslate(r,n,a),this.postTranslate(r,n+p)):(i=h,e.translate(a.x+l,!1,!1,!1,!0)),this.crispOption&&(i=crisp(i,this.borderWidth),t=crisp(t,this.borderWidth)),o.x=i,o.width=Math.max(t-i,1),a.plotX=(i+t)/2,d&&(s?d[1]=e.len-o.x-o.width/2:d[0]=o.x+o.width/2)}this.options.stacking&&this.correctStackLabels()},{order:2}),extend(VariwideSeries.prototype,{irregularWidths:!0,keysAffectYAxis:["y"],pointArrayMap:["y","z"],parallelArrays:["x","y","z"],pointClass:VariwidePoint}),SeriesRegistry.registerSeriesType("variwide",VariwideSeries);export default VariwideSeries;