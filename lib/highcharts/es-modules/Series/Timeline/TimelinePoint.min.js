"use strict";import Point from"../../Core/Series/Point.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{line:{prototype:{pointClass:LinePoint}},pie:{prototype:{pointClass:PiePoint}}}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{defined,isNumber,merge,objectEach,pick}=U;class TimelinePoint extends LinePoint{alignConnector(){const t=this,e=t.series,i=t.dataLabel,s=i.connector,n=i.options||{},o=n.connectorWidth||0,r=t.series.chart,a=s.getBBox(),l={x:a.x+(i.translateX||0),y:a.y+(i.translateY||0)};r.inverted?l.y-=o/2:l.x+=o/2;var c=r.isInsidePlot(l.x,l.y);s[c?"animate":"attr"]({d:t.getConnectorPath()}),s.addClass("highcharts-color-"+t.colorIndex),e.chart.styledMode||s.attr({stroke:n.connectorColor||t.color,"stroke-width":n.connectorWidth,opacity:i[defined(i.newOpacity)?"newOpacity":"opacity"]})}drawConnector(){const t=this,{dataLabel:e,series:i}=t;e&&(e.connector||(e.connector=i.chart.renderer.path(t.getConnectorPath()).attr({zIndex:-1}).add(e)),t.series.chart.isInsidePlot(e.x||0,e.y||0)&&t.alignConnector())}getConnectorPath(){const{plotX:t=0,plotY:e=0,series:s,dataLabel:n}=this,o=s.chart,r=s.xAxis.len,a=o.inverted,l=a?"x2":"y2";if(n){var c=n.targetPosition,p=(n.alignAttr||n)[l[0]]<s.yAxis.len/2;let i={x1:t,y1:e,x2:t,y2:(isNumber(c.y)?c:n).y};return a&&(i={x1:e,y1:r-t,x2:c.x||n.x,y2:r-t}),p&&(i[l]+=n[a?"width":"height"]||0),objectEach(i,(t,e)=>{i[e]-=(n.alignAttr||n)[e[0]]}),o.renderer.crispLine([["M",i.x1,i.y1],["L",i.x2,i.y2]],n.options?.connectorWidth||0)}return[]}constructor(t,e){super(t,e),this.name??(this.name=e&&null!==e.y||!t.options.nullInteraction?"Event":"Null"),this.y=1}isValid(){return null!==this.options.y||this.series.options.nullInteraction||!0}setState(){const t=super.setState;this.isNull&&!this.series.options.nullInteraction||t.apply(this,arguments)}setVisible(t,e){const i=this.series;e=pick(e,i.options.ignoreHiddenPoint),PiePoint.prototype.setVisible.call(this,t,!1),i.processData(),e&&i.chart.redraw()}applyOptions(t,e){const i=this.isNull||null===t||null===t.y,s=this.series,n=(e||t?.x||(isNumber(this.x)?e=this.x:isNumber(s?.xIncrement)&&(e=s.xIncrement||0,s.autoIncrement())),t=Point.prototype.optionsToObject.call(this,t??(s.options.nullInteraction?{y:0}:null)),super.applyOptions(t,e));return this.userDLOptions=merge(this.userDLOptions,t.dataLabels),n.isNull=i,n}}export default TimelinePoint;