"use strict";import A from"../Core/Animation/AnimationUtilities.js";const setAnimation=A["setAnimation"];import H from"../Core/Globals.js";const composed=H["composed"];import U from"../Core/Utilities.js";const{addEvent,pushUnique}=U,integrations={},layouts={};function compose(t){pushUnique(composed,"GraphLayout")&&(addEvent(t,"afterPrint",onChartAfterPrint),addEvent(t,"beforePrint",onChartBeforePrint),addEvent(t,"predraw",onChartPredraw),addEvent(t,"render",onChartRender))}function onChartAfterPrint(){this.graphLayoutsLookup&&(this.graphLayoutsLookup.forEach(t=>{t.updateSimulation()}),this.redraw())}function onChartBeforePrint(){this.graphLayoutsLookup&&(this.graphLayoutsLookup.forEach(t=>{t.updateSimulation(!1)}),this.redraw())}function onChartPredraw(){this.graphLayoutsLookup&&this.graphLayoutsLookup.forEach(t=>{t.stop()})}function onChartRender(){let o,r=!1;var t=t=>{t.maxIterations--&&isFinite(t.temperature)&&!t.isStable()&&!t.enableSimulation&&(t.beforeStep&&t.beforeStep(),t.step(),o=!1,r=!0)};if(this.graphLayoutsLookup&&!this.pointer?.hasDragged){for(setAnimation(!1,this),this.graphLayoutsLookup.forEach(t=>t.start());!o;)o=!0,this.graphLayoutsLookup.forEach(t);r&&this.series.forEach(t=>{t&&t.layout&&t.render()})}}const GraphLayoutComposition={compose:compose,integrations:integrations,layouts:layouts};export default GraphLayoutComposition;