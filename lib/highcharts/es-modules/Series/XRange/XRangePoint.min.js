"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{prototype:{pointClass:ColumnPoint}}=SeriesRegistry.seriesTypes["column"];import U from"../../Core/Utilities.js";const extend=U["extend"];class XRangePoint extends ColumnPoint{static getColorByCategory(t,o){var s=t.options.colors||t.chart.options.colors,t=s?s.length:t.chart.options.chart.colorCount,o=o.y%t;return{colorIndex:o,color:s?.[o]}}resolveColor(){var t,o=this.series;o.options.colorByPoint&&!this.options.color?(t=XRangePoint.getColorByCategory(o,this),o.chart.styledMode||(this.color=t.color),this.options.colorIndex||(this.colorIndex=t.colorIndex)):this.color=this.options.color||o.color}constructor(t,o){super(t,o),this.y||(this.y=0)}applyOptions(t,o){return super.applyOptions(t,o),this.x2=this.series.chart.time.parse(this.x2),this.isNull=!this.isValid?.(),this}setState(){super.setState.apply(this,arguments),this.series.drawPoint(this,this.series.getAnimationVerb())}isValid(){return"number"==typeof this.x&&"number"==typeof this.x2}}extend(XRangePoint.prototype,{ttBelow:!1,tooltipDateKeys:["x","x2"]});export default XRangePoint;