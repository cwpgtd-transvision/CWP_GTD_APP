"use strict";import BoxPlotSeriesDefaults from"./BoxPlotSeriesDefaults.js";import ColumnSeries from"../Column/ColumnSeries.js";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import U from"../../Core/Utilities.js";const{crisp,extend,merge,pick,relativeLength}=U;class BoxPlotSeries extends ColumnSeries{pointAttribs(){return{}}getWhiskerPair(o,s,t,e,i){const r=i.whiskers.strokeWidth(),l=(t,e)=>{t=relativeLength(t,2*o)/2,e=crisp(e,r);return[["M",crisp(s-t),e],["L",crisp(s+t),e]]};return[...l(t,i.highPlot),...l(e,i.lowPlot)]}translate(){const t=this,o=t.yAxis,s=t.pointArrayMap;super.translate.apply(t),t.points.forEach(function(e){s.forEach(function(t){null!==e[t]&&(e[t+"Plot"]=o.translate(e[t],0,1,0,1))}),e.plotHigh=e.highPlot})}drawPoints(){const e=this,t=e.points,o=e.options,s=e.chart,i=s.renderer,r=!1!==e.doQuartiles,l=e.options.whiskerLength;let h,a,d,n,p,m,c,k,S;for(const y of t){const x=(m=y.graphic)?"animate":"attr",u=y.shapeArgs,f={},P={},C={},W={},L=y.color||e.color,b=y.options.whiskerLength||l;if(void 0!==y.plotY){c=u.width,k=u.x,S=k+c,h=r?y.q1Plot:y.lowPlot,a=r?y.q3Plot:y.lowPlot,d=y.highPlot,n=y.lowPlot,m||(y.graphic=m=i.g("point").add(e.group),y.stem=i.path().addClass("highcharts-boxplot-stem").add(m),l&&(y.whiskers=i.path().addClass("highcharts-boxplot-whisker").add(m)),r&&(y.box=i.path(void 0).addClass("highcharts-boxplot-box").add(m)),y.medianShape=i.path(void 0).addClass("highcharts-boxplot-median").add(m)),s.styledMode||(P.stroke=y.stemColor||o.stemColor||L,P["stroke-width"]=pick(y.stemWidth,o.stemWidth,o.lineWidth),P.dashstyle=y.stemDashStyle||o.stemDashStyle||o.dashStyle,y.stem.attr(P),b&&(C.stroke=y.whiskerColor||o.whiskerColor||L,C["stroke-width"]=pick(y.whiskerWidth,o.whiskerWidth,o.lineWidth),C.dashstyle=y.whiskerDashStyle||o.whiskerDashStyle||o.dashStyle,y.whiskers.attr(C)),r&&(f.fill=y.fillColor||o.fillColor||L,f.stroke=o.lineColor||L,f["stroke-width"]=o.lineWidth||0,f.dashstyle=y.boxDashStyle||o.boxDashStyle||o.dashStyle,y.box.attr(f)),W.stroke=y.medianColor||o.medianColor||L,W["stroke-width"]=pick(y.medianWidth,o.medianWidth,o.lineWidth),W.dashstyle=y.medianDashStyle||o.medianDashStyle||o.dashStyle,y.medianShape.attr(W));let t;var g,w=crisp((y.plotX||0)+(e.pointXOffset||0)+(e.barW||0)/2,y.stem.strokeWidth());t=[["M",w,a],["L",w,d],["M",w,h],["L",w,n]],y.stem[x]({d:t}),r&&(g=y.box.strokeWidth(),h=crisp(h,g),a=crisp(a,g),k=crisp(k,g),S=crisp(S,g),t=[["M",k,a],["L",k,h],["L",S,h],["L",S,a],["L",k,a],["Z"]],y.box[x]({d:t})),b&&(g=this.getWhiskerPair(c/2,w,y.upperWhiskerLength??o.upperWhiskerLength??b,y.lowerWhiskerLength??o.lowerWhiskerLength??b,y),y.whiskers[x]({d:g})),p=crisp(y.medianPlot,y.medianShape.strokeWidth()),t=[["M",k,p],["L",S,p]],y.medianShape[x]({d:t})}}}toYData(t){return[t.low,t.q1,t.median,t.q3,t.high]}}BoxPlotSeries.defaultOptions=merge(ColumnSeries.defaultOptions,BoxPlotSeriesDefaults),extend(BoxPlotSeries.prototype,{pointArrayMap:["low","q1","median","q3","high"],pointValKey:"high",drawDataLabels:noop,setStackedPoints:noop}),SeriesRegistry.registerSeriesType("boxplot",BoxPlotSeries);export default BoxPlotSeries;