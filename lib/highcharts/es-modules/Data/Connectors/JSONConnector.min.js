"use strict";import DataConnector from"./DataConnector.js";import U from"../../Core/Utilities.js";import JSONConverter from"../Converters/JSONConverter.js";const{merge,defined}=U;class JSONConnector extends DataConnector{constructor(e,t){e=merge(JSONConnector.defaultOptions,e);super(e,t),this.options=defined(t)?merge(e,{dataTables:t}):e,e.enablePolling&&this.startPolling(1e3*Math.max(e.dataRefreshRate||0,1))}load(t){const o=this,a=o.dataTables,{data:e,dataUrl:r,dataModifier:n,dataTables:s}=o.options;return o.emit({type:"load",data:e,detail:t,tables:a}),Promise.resolve(r?fetch(r,{signal:o?.pollingController?.signal}).then(e=>e.json()).catch(e=>{o.emit({type:"loadError",detail:t,error:e,tables:a}),console.warn(`Unable to fetch data from ${r}.`)}):e||[]).then(e=>(e&&this.initConverters(e,t=>{var e=this.options,o=s?.find(e=>e.key===t),o={dataTableKey:t,columnNames:o?.columnNames??e.columnNames,firstRowAsNames:o?.firstRowAsNames??e.firstRowAsNames,orientation:o?.orientation??e.orientation,beforeParse:o?.beforeParse??e.beforeParse};return new JSONConverter(merge(this.options,o))},(e,t)=>{e.parse({data:t})}),o.setModifierOptions(n,s).then(()=>e))).then(e=>(o.emit({type:"afterLoad",data:e,detail:t,tables:a}),o)).catch(e=>{throw o.emit({type:"loadError",detail:t,error:e,tables:a}),e})}}JSONConnector.defaultOptions={data:[],enablePolling:!1,dataRefreshRate:0,firstRowAsNames:!0,orientation:"rows"},DataConnector.registerType("JSON",JSONConnector);export default JSONConnector;