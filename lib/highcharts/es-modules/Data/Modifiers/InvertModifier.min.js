"use strict";import DataModifier from"./DataModifier.js";import U from"../../Core/Utilities.js";const merge=U["merge"];class InvertModifier extends DataModifier{constructor(e){super(),this.options=merge(InvertModifier.defaultOptions,e)}modifyCell(e,t,o,l,n){const i=e.modified,s=i.getRowIndexBy("columnNames",t);return void 0===s?i.setColumns(this.modifyTable(e.clone()).getColumns(),void 0,n):i.setCell(""+o,s,l,n),e}modifyColumns(e,i,s,r){const m=e.modified,o=m.getColumn("columnNames")||[];let f=e.getColumnNames(),l=e.getRowCount()!==o.length;if(!l)for(let e=0,t=f.length;e<t;++e)if(f[e]!==o[e]){l=!0;break}if(l)return this.modifyTable(e,r);for(let e=0,t=(f=Object.keys(i)).length,l,o,n;e<t;++e){l=i[o=f[e]],n=m.getRowIndexBy("columnNames",o)||m.getRowCount();for(let e=0,t=s,o=l.length;e<o;++e,++t)m.setCell(""+t,n,l[e],r)}return e}modifyRows(e,n,i,s){const r=e.getColumnNames(),m=e.modified,o=m.getColumn("columnNames")||[];let l=e.getRowCount()!==o.length;if(!l)for(let e=0,t=r.length;e<t;++e)if(r[e]!==o[e]){l=!0;break}if(l)return this.modifyTable(e,s);for(let e=0,o=i,t=n.length,l;e<t;++e,++o)if((l=n[e])instanceof Array)m.setColumn(""+o,l);else for(let e=0,t=r.length;e<t;++e)m.setCell(""+o,e,l[r[e]],s);return e}modifyTable(l,e){this.emit({type:"modify",detail:e,table:l});const t=l.modified;if(l.hasColumns(["columnNames"])){const o=(l.deleteColumns(["columnNames"])||{}).columnNames||[],n={},i=[];for(let e=0,t=o.length;e<t;++e)i.push(""+o[e]);for(let e=0,t=l.getRowCount(),o;e<t;++e)(o=l.getRow(e))&&(n[i[e]]=o);t.deleteColumns(),t.setColumns(n)}else{const s={};for(let e=0,t=l.getRowCount(),o;e<t;++e)(o=l.getRow(e))&&(s[""+e]=o);s.columnNames=l.getColumnNames(),t.deleteColumns(),t.setColumns(s)}return this.emit({type:"afterModify",detail:e,table:l}),l}}InvertModifier.defaultOptions={type:"Invert"},DataModifier.registerType("Invert",InvertModifier);export default InvertModifier;