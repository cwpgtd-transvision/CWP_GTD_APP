"use strict";import ColumnUtils from"./ColumnUtils.js";const{setLength,splice}=ColumnUtils;import U from"../Core/Utilities.js";const{fireEvent,objectEach,uniqueKey}=U;class DataTableCore{constructor(t={}){this.autoId=!t.id,this.columns={},this.id=t.id||uniqueKey(),(this.modified=this).rowCount=0,this.versionTag=uniqueKey();let e=0;objectEach(t.columns||{},(t,s)=>{this.columns[s]=t.slice(),e=Math.max(e,t.length)}),this.applyRowCount(e)}applyRowCount(e){this.rowCount=e,objectEach(this.columns,(t,s)=>{t.length!==e&&(this.columns[s]=setLength(t,e))})}deleteRows(o,i=1){if(0<i&&o<this.rowCount){let e=0;objectEach(this.columns,(t,s)=>{this.columns[s]=splice(t,o,i).array,e=t.length}),this.rowCount=e}fireEvent(this,"afterDeleteRows",{rowIndex:o,rowCount:i}),this.versionTag=uniqueKey()}getColumn(t,s){return this.columns[t]}getColumns(t,s){return(t||Object.keys(this.columns)).reduce((t,s)=>(t[s]=this.columns[s],t),{})}getRow(s,t){return(t||Object.keys(this.columns)).map(t=>this.columns[t]?.[s])}setColumn(t,s=[],e=0,o){this.setColumns({[t]:s},e,o)}setColumns(t,s,e){let o=this.rowCount;objectEach(t,(t,s)=>{this.columns[s]=t.slice(),o=t.length}),this.applyRowCount(o),e?.silent||(fireEvent(this,"afterSetColumns"),this.versionTag=uniqueKey())}setRow(t,o=this.rowCount,i,n){const u=this["columns"],l=i?this.rowCount+1:o+1;objectEach(t,(t,s)=>{let e=u[s]||!1!==n?.addColumns&&new Array(l);e&&(i?e=splice(e,o,0,!0,[t]).array:e[o]=t,u[s]=e)}),l>this.rowCount&&this.applyRowCount(l),n?.silent||(fireEvent(this,"afterSetRows"),this.versionTag=uniqueKey())}}export default DataTableCore;