"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const merge=U["merge"];class CMFIndicator extends SMAIndicator{constructor(){super(...arguments),this.nameBase="Chaikin Money Flow"}isValid(){const e=this.chart,t=this.options,r=this.linkedParent,s=this.volumeSeries||(this.volumeSeries=e.get(t.params.volumeSeriesID)),i=4===r?.pointArrayMap?.length;function o(e){return e.dataTable.rowCount>=t.params.period}return!!(r&&s&&o(r)&&o(s)&&i)}getValues(e,t){if(this.isValid())return this.getMoneyFlow(e.xData,e.yData,this.volumeSeries.getColumn("y"),t.period)}getMoneyFlow(e,t,r,s){const i=t.length,o=[],n=[],a=[],l=[];let u,p,m=-1,c=0,d=0;function h(e,t){var r=e[1],s=e[2],e=e[3];return null!==t&&null!==r&&null!==s&&null!==e&&r!==s?(e-s-(r-e))/(r-s)*t:(m=u,null)}if(0<s&&s<=i){for(u=0;u<s;u++)o[u]=h(t[u],r[u]),c+=r[u],d+=o[u];for(n.push(e[u-1]),a.push(u-m>=s&&0!==c?d/c:null),l.push([n[0],a[0]]);u<i;u++)o[u]=h(t[u],r[u]),c=(c-=r[u-s])+r[u],d=(d-=o[u-s])+o[u],p=[e[u],u-m>=s?d/c:null],n.push(p[0]),a.push(p[1]),l.push([p[0],p[1]])}return{values:l,xData:n,yData:a}}}CMFIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume"}}),SeriesRegistry.registerSeriesType("cmf",CMFIndicator);export default CMFIndicator;