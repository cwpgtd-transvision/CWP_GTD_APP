"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{isNumber,error,extend,merge}=U;class OBVIndicator extends SMAIndicator{getValues(e,r){const t=e.chart.get(r.volumeSeriesID),s=e.xData,i=e.yData,o=[],a=[],n=[],u=!isNumber(i[0]);let d,m=1,l=0,p=0,c=0,S,I;if(t){for(I=t.getColumn("y"),d=[s[0],l],c=u?i[0][3]:i[0],o.push(d),a.push(s[0]),n.push(d[1]),m;m<i.length;m++)S=u?i[m][3]:i[m],p=S>c?l+I[m]:S===c?l:l-I[m],d=[s[m],p],l=p,c=S,o.push(d),a.push(s[m]),n.push(d[1]);return{values:o,xData:a,yData:n}}error("Series "+r.volumeSeriesID+" not found! Check `volumeSeriesID`.",!0,e.chart)}}OBVIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{marker:{enabled:!1},params:{index:void 0,period:void 0,volumeSeriesID:"volume"},tooltip:{valueDecimals:0}}),extend(OBVIndicator.prototype,{nameComponents:void 0}),SeriesRegistry.registerSeriesType("obv",OBVIndicator);export default OBVIndicator;