"use strict";import Chart from"../../../Core/Chart/Chart.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const LineSeries=SeriesRegistry.seriesTypes["line"];import U from"../../../Core/Utilities.js";const{addEvent,fireEvent,error,extend,isArray,merge,pick}=U,tableToMultiYData=(a,t)=>{const e=[],n=a.pointArrayMap,i=t&&a.dataTable.modified||a.dataTable;if(!n)return a.getColumn("y",t);const r=n.map(e=>a.getColumn(e,t));for(let t=0;t<i.rowCount;t++){var s=n.map((e,a)=>r[a]?.[t]||0);e.push(s)}return e};class SMAIndicator extends LineSeries{destroy(){this.dataEventsToUnbind.forEach(function(e){e()}),super.destroy.apply(this,arguments)}getName(){const t=[];let e=this.name;return e||((this.nameComponents||[]).forEach(function(e,a){t.push(this.options.params[e]+pick(this.nameSuffixes[a],""))},this),e=(this.nameBase||this.type.toUpperCase())+(this.nameComponents?" ("+t.join(", ")+")":"")),e}getValues(e,a){const t=a.period,n=e.xData||[],i=e.yData,r=i.length,s=[],o=[],l=[];let d,p=-1,u=0,c,h=0;if(!(n.length<t)){for(isArray(i[0])&&(p=a.index||0);u<t-1;)h+=p<0?i[u]:i[u][p],u++;for(d=u;d<r;d++)h+=p<0?i[d]:i[d][p],c=[n[d],h/t],s.push(c),o.push(c[0]),l.push(c[1]),h-=p<0?i[d-u]:i[d-u][p];return{values:s,xData:o,yData:l}}}init(t,e){const n=this;super.init.call(n,t,e);e=addEvent(Chart,"afterLinkSeries",function({isUpdating:e}){if(!e){e=!!n.dataEventsToUnbind.length;if(!n.linkedParent)return error("Series "+n.options.linkedTo+" not found! Check `linkedTo`.",!1,t);if(e||(n.dataEventsToUnbind.push(addEvent(n.linkedParent,"updatedData",function(){n.recalculateValues()})),n.calculateOn.xAxis&&n.dataEventsToUnbind.push(addEvent(n.linkedParent.xAxis,n.calculateOn.xAxis,function(){n.recalculateValues()}))),"init"===n.calculateOn.chart)n.closestPointRange||n.recalculateValues();else if(!e){const a=addEvent(n.chart,n.calculateOn.chart,function(){n.recalculateValues(),a()})}}},{order:0});n.dataEventsToUnbind=[],n.eventsToUnbind.push(e)}recalculateValues(){const e=[],a=this,t=this.dataTable,n=a.points||[],i=a.dataTable.rowCount,r={values:[],xData:[],yData:[]};let s=!0,o,l,d,p;var u=a.linkedParent.yData,c=a.linkedParent.processedYData;a.linkedParent.xData=a.linkedParent.getColumn("x"),a.linkedParent.yData=tableToMultiYData(a.linkedParent),a.linkedParent.processedYData=tableToMultiYData(a.linkedParent,!0);const h=a.linkedParent.options&&a.linkedParent.dataTable.rowCount&&a.getValues(a.linkedParent,a.options.params)||r,f=(delete a.linkedParent.xData,a.linkedParent.yData=u,a.linkedParent.processedYData=c,a.pointArrayMap||["y"]),m={};if(h.yData.forEach(n=>{f.forEach((e,a)=>{const t=m[e]||[];t.push(isArray(n)?n[a]:n),m[e]||(m[e]=t)})}),i&&!a.hasGroupedData&&a.visible&&a.points)if(a.cropped){a.xAxis&&(d=a.xAxis.min,p=a.xAxis.max);var x=a.cropData(t,d,p);const y=["x",...a.pointArrayMap||["y"]];for(let a=0;a<(x.modified?.rowCount||0);a++){var D=y.map(e=>this.getColumn(e)[a]||0);e.push(D)}u=a.getColumn("x");o=h.xData.indexOf(u[0]),l=h.xData.indexOf(u[u.length-1]),-1===o&&l===h.xData.length-2&&e[0][0]===n[0].x&&e.shift(),a.updateData(e)}else(a.updateAllPoints||h.xData.length!==i-1&&h.xData.length!==i+1)&&(s=!1,a.updateData(h.values));s&&(t.setColumns({...m,x:h.xData}),a.options.data=h.values),a.calculateOn.xAxis&&a.getColumn("x",!0).length&&(a.isDirty=!0,a.redraw()),a.isDirtyData=!!a.linkedSeries.length,fireEvent(a,"updatedData")}processData(){var e=this,a=e.options.compareToMain,t=e.linkedParent;super.processData.apply(e,arguments),e.dataModify&&t&&t.dataModify&&t.dataModify.compareValue&&a&&(e.dataModify.compareValue=t.dataModify.compareValue)}}SMAIndicator.defaultOptions=merge(LineSeries.defaultOptions,{name:void 0,tooltip:{valueDecimals:4},linkedTo:void 0,compareToMain:!1,params:{index:3,period:14}}),extend(SMAIndicator.prototype,{calculateOn:{chart:"init"},hasDerivedData:!0,nameComponents:["period"],nameSuffixes:[],useCommonDataGrouping:!0}),SeriesRegistry.registerSeriesType("sma",SMAIndicator);export default SMAIndicator;