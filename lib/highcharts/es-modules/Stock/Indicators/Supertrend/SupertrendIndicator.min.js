"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{atr:ATRIndicator,sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{addEvent,correctFloat,isArray,isNumber,extend,merge,objectEach}=U;function createPointObj(e,o){return{index:o,close:e.getColumn("close")[o],x:e.getColumn("x")[o]}}class SupertrendIndicator extends SMAIndicator{init(){const r=this,t=(super.init.apply(r,arguments),addEvent(this.chart.constructor,"afterLinkSeries",()=>{if(r.options){const e=r.options,o=r.linkedParent.options;e.cropThreshold=o.cropThreshold-(e.params.period-1)}t()},{order:1}))}drawGraph(){const r=this,e=r.options,o=r.linkedParent,t=o.getColumn("x"),i=o?o.points:[],n=r.points,l=r.graph,s=i.length-n.length,p=0<s?s:0,a={options:{gapSize:e.gapSize}},c={top:[],bottom:[],intersect:[]},d={top:{styles:{lineWidth:e.lineWidth,lineColor:e.fallingTrendColor||e.color,dashStyle:e.dashStyle}},bottom:{styles:{lineWidth:e.lineWidth,lineColor:e.risingTrendColor||e.color,dashStyle:e.dashStyle}},intersect:e.changeTrendLine};let h,u,g,m,x,y,S,C,T,b=n.length;for(;b--;)h=n[b],u=n[b-1],g=i[b-1+p],m=i[b-2+p],x=i[b+p],y=i[b+p+1],S=h.options.color,C={x:h.x,plotX:h.plotX,plotY:h.plotY,isNull:!1},!m&&g&&isNumber(t[g.index-1])&&(m=createPointObj(o,g.index-1)),!y&&x&&isNumber(t[x.index+1])&&(y=createPointObj(o,x.index+1)),!g&&m&&isNumber(t[m.index+1])?g=createPointObj(o,m.index+1):!g&&x&&isNumber(t[x.index-1])&&(g=createPointObj(o,x.index-1)),h&&g&&x&&m&&h.x!==g.x&&(h.x===x.x?(m=g,g=x):h.x===m.x?(g=m,m={close:o.getColumn("close")[g.index-1],x:t[g.index-1]}):y&&h.x===y.x&&(g=y,m=x)),u&&m&&g?(T={x:u.x,plotX:u.plotX,plotY:u.plotY,isNull:!1},h.y>=g.close&&u.y>=m.close?(h.color=S||e.fallingTrendColor||e.color,c.top.push(C)):h.y<g.close&&u.y<m.close?(h.color=S||e.risingTrendColor||e.color,c.bottom.push(C)):(c.intersect.push(C),c.intersect.push(T),c.intersect.push(merge(T,{isNull:!0})),h.y>=g.close&&u.y<m.close?(h.color=S||e.fallingTrendColor||e.color,u.color=S||e.risingTrendColor||e.color,c.top.push(C),c.top.push(merge(T,{isNull:!0}))):h.y<g.close&&u.y>=m.close&&(h.color=S||e.risingTrendColor||e.color,u.color=S||e.fallingTrendColor||e.color,c.bottom.push(C),c.bottom.push(merge(T,{isNull:!0}))))):g&&(h.y>=g.close?(h.color=S||e.fallingTrendColor||e.color,c.top.push(C)):(h.color=S||e.risingTrendColor||e.color,c.bottom.push(C)));objectEach(c,function(e,o){r.points=e,r.options=merge(d[o].styles,a),r.graph=r["graph"+o+"Line"],SMAIndicator.prototype.drawGraph.call(r),r["graph"+o+"Line"]=r.graph}),r.points=n,r.options=e,r.graph=l}getValues(e,o){const r=o.period,t=o.multiplier,i=e.xData,n=e.yData,l=[],s=[],p=[],a=0===r?0:r-1,c=[],d=[];let h,u,g,m,x,y,S,C,T,b;if(!(i.length<=r||!isArray(n[0])||4!==n[0].length||r<0)){for(h=ATRIndicator.prototype.getValues.call(this,e,{period:r}).yData,b=0;b<h.length;b++)T=n[a+b],C=n[a+b-1]||[],x=c[b-1],y=d[b-1],S=p[b-1],0===b&&(x=y=S=0),u=correctFloat((T[1]+T[2])/2+t*h[b]),g=correctFloat((T[1]+T[2])/2-t*h[b]),u<x||C[3]>x?c[b]=u:c[b]=x,g>y||C[3]<y?d[b]=g:d[b]=y,S===x&&T[3]<c[b]||S===y&&T[3]<d[b]?m=c[b]:(S===x&&T[3]>c[b]||S===y&&T[3]>d[b])&&(m=d[b]),l.push([i[a+b],m]),s.push(i[a+b]),p.push(m);return{values:l,xData:s,yData:p}}}}SupertrendIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,multiplier:3,period:10},risingTrendColor:"#06b535",fallingTrendColor:"#f21313",changeTrendLine:{styles:{lineWidth:1,lineColor:"#333333",dashStyle:"LongDash"}}}),extend(SupertrendIndicator.prototype,{nameBase:"Supertrend",nameComponents:["multiplier","period"]}),SeriesRegistry.registerSeriesType("supertrend",SupertrendIndicator);export default SupertrendIndicator;