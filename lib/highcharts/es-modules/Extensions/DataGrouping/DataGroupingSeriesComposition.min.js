"use strict";import ApproximationRegistry from"./ApproximationRegistry.js";import DataGroupingDefaults from"./DataGroupingDefaults.js";import DataTableCore from"../../Data/DataTableCore.js";import DateTimeAxis from"../../Core/Axis/DateTimeAxis.js";import D from"../../Core/Defaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{prototype:seriesProto}=SeriesRegistry["series"];import U from"../../Core/Utilities.js";const{addEvent,defined,error,extend,isNumber,merge,pick,splat}=U,baseGeneratePoints=seriesProto.generatePoints;function adjustExtremes(t,o){defined(o[0])&&isNumber(t.min)&&isNumber(t.dataMin)&&o[0]<t.min&&((!defined(t.options.min)&&t.min<=t.dataMin||t.min===t.dataMin)&&(t.min=Math.min(o[0],t.min)),t.dataMin=Math.min(o[0],t.dataMin)),defined(o[o.length-1])&&isNumber(t.max)&&isNumber(t.dataMax)&&o[o.length-1]>t.max&&((!defined(t.options.max)&&isNumber(t.dataMax)&&t.max>=t.dataMax||t.max===t.dataMax)&&(t.max=Math.max(o[o.length-1],t.max)),t.dataMax=Math.max(o[o.length-1],t.dataMax))}function anchorPoints(a,e,i){var r=a.options.dataGrouping,n=a.currentDataGrouping&&a.currentDataGrouping.gapSize,s=a.getColumn("x");if(r&&s.length&&n&&a.groupMap){var p=e.length-1,u=r.anchor,l=r.firstAnchor,r=r.lastAnchor;let t=e.length-1,o=0;if(l&&s[0]>=e[0]){o++;var d=a.groupMap[0].start,g=a.groupMap[0].length;let t;isNumber(d)&&isNumber(g)&&(t=d+(g-1)),e[0]={start:e[0],middle:e[0]+.5*n,end:e[0]+n,firstPoint:s[0],lastPoint:t&&s[t]}[l]}if(0<p&&r&&n&&e[p]>=i-n&&(t--,d=a.groupMap[a.groupMap.length-1].start,e[p]={start:e[p],middle:e[p]+.5*n,end:e[p]+n,firstPoint:d&&s[d],lastPoint:s[s.length-1]}[r]),u&&"start"!==u)for(var m=n*{middle:.5,end:1}[u];t>=o;)e[t]+=m,t--}}function applyGrouping(t){const r=this,n=r.chart,o=r.options,s=o.dataGrouping,a=!1!==r.allowDG&&s&&pick(s.enabled,n.options.isStock),p=r.reserveSpace(),u=this.currentDataGrouping;let l,d,e=!1;a&&!r.requireSorting&&(r.requireSorting=e=!0);t=!1===skipDataGrouping(r,t)||!a;if(e&&(r.requireSorting=!1),!t){r.destroyGroupedData();const g=!s.groupAll&&r.dataTable.modified||r.dataTable,m=r.getColumn("x",!s.groupAll),h=m,f=n.plotSizeX,c=r.xAxis,D=c.getExtremes(),G=c.options.ordinal,x=r.groupPixelWidth;let e,i;if(x&&h&&g.rowCount&&f&&isNumber(D.min)){i=!0,r.isDirty=!0,r.points=null;const y=D.min,A=D.max,M=G&&c.ordinal&&c.ordinal.getGroupIntervalFactor(y,A,r)||1,b=x*(A-y)/f*M,S=c.getTimeTicks(DateTimeAxis.Additions.prototype.normalizeTimeTickInterval(b,s.units||DataGroupingDefaults.units),Math.min(y,h[0]),Math.max(A,h[h.length-1]),c.options.startOfWeek,m,r.closestPointRange),C=seriesProto.groupData.apply(r,[g,S,s.approximation]);let t=C.modified,o=t.getColumn("x",!0),a=0;for(s?.smoothed&&t.rowCount&&(s.firstAnchor="firstPoint",s.anchor="middle",s.lastAnchor="lastPoint",error(32,!1,n,{"dataGrouping.smoothed":"use dataGrouping.anchor"})),e=1;e<S.length;e++)S.info.segmentStarts&&-1!==S.info.segmentStarts.indexOf(e)||(a=Math.max(S[e]-S[e-1],a));(l=S.info).gapSize=a,r.closestPointRange=S.info.totalRange,r.groupMap=C.groupMap,r.currentDataGrouping=l,anchorPoints(r,o||[],A),p&&o&&adjustExtremes(c,o),s.groupAll&&(r.allGroupedTable=t,d=r.cropData(t,c.min||0,c.max||0),t=d.modified,o=t.getColumn("x"),r.cropStart=d.start),r.dataTable.modified=t}else r.groupMap=void 0,r.currentDataGrouping=void 0;r.hasGroupedData=i,r.preventGraphAnimation=(u&&u.totalRange)!==(l&&l.totalRange)}}function compose(t){var o,a=t.prototype;a.applyGrouping||(o=t.prototype.pointClass,addEvent(o,"update",function(){if(this.dataGroup)return error(24,!1,this.series.chart),!1}),addEvent(t,"afterSetOptions",onAfterSetOptions),addEvent(t,"destroy",destroyGroupedData),extend(a,{applyGrouping:applyGrouping,destroyGroupedData:destroyGroupedData,generatePoints:generatePoints,getDGApproximation:getDGApproximation,groupData:groupData}))}function destroyGroupedData(){this.groupedData&&(this.groupedData.forEach(function(t,o){t&&(this.groupedData[o]=t.destroy?t.destroy():null)},this),this.groupedData.length=0,delete this.allGroupedTable)}function generatePoints(){baseGeneratePoints.apply(this),this.destroyGroupedData(),this.groupedData=this.hasGroupedData?this.points:null}function getDGApproximation(){return this.is("arearange")?"range":this.is("ohlc")?"ohlc":this.is("hlc")?"hlc":this.is("column")||this.options.cumulative?"sum":"average"}function groupData(t,o,a){const e=t.getColumn("x",!0)||[],i=t.getColumn("y",!0),r=this,n=r.data,s=r.options&&r.options.data,p=[],u=new DataTableCore,l=[],d=t.rowCount,g=!!i,m=[],h=r.pointArrayMap,f=h&&h.length,c=["x"].concat(h||["y"]),D=(h||["y"]).map(()=>[]),G=this.options.dataGrouping&&this.options.dataGrouping.groupAll;let x,y,A,M=0,b=0;const S="function"==typeof a?a:a&&ApproximationRegistry[a]?ApproximationRegistry[a]:ApproximationRegistry[r.getDGApproximation&&r.getDGApproximation()||"average"];if(f){let t=h.length;for(;t--;)m.push([])}else m.push([]);var C=f||1;for(let t=0;t<=d;t++)if(!(e[t]<o[0])){for(;void 0!==o[M+1]&&e[t]>=o[M+1]||t===d;){if(x=o[M],r.dataGroupInfo={start:G?b:r.cropStart+b,length:m[0].length,groupStart:x},A=S.apply(r,m),r.pointClass&&!defined(r.dataGroupInfo.options)&&(r.dataGroupInfo.options=merge(r.pointClass.prototype.optionsToObject.call({series:r},r.options.data[r.cropStart+b])),c.forEach(function(t){delete r.dataGroupInfo.options[t]})),void 0!==A){p.push(x);var v=splat(A);for(let t=0;t<v.length;t++)D[t].push(v[t]);l.push(r.dataGroupInfo)}b=t;for(let t=0;t<C;t++)m[t].length=0,m[t].hasNulls=!1;if(M+=1,t===d)break}if(t===d)break;if(h){var P,T=G?t:r.cropStart+t,N=n&&n[T]||r.pointClass.prototype.applyOptions.apply({series:r},[s[T]]);for(let t=0;t<f;t++)P=N[h[t]],isNumber(P)?m[t].push(P):null===P&&(m[t].hasNulls=!0)}else y=g?i[t]:null,isNumber(y)?m[0].push(y):null===y&&(m[0].hasNulls=!0)}const R={x:p};return(h||["y"]).forEach((t,o)=>{R[t]=D[o]}),u.setColumns(R),{groupMap:l,modified:u}}function onAfterSetOptions(t){const o=t.options,a=this.type,e=this.chart.options.plotOptions,i=this.useCommonDataGrouping&&DataGroupingDefaults.common,r=DataGroupingDefaults.seriesSpecific;let n=D.defaultOptions.plotOptions[a].dataGrouping;e&&(r[a]||i)&&(t=this.chart.rangeSelector,n=n||merge(DataGroupingDefaults.common,r[a]),o.dataGrouping=merge(i,n,e.series&&e.series.dataGrouping,e[a].dataGrouping,this.userOptions.dataGrouping,!o.isInternal&&t&&isNumber(t.selected)&&t.buttonOptions[t.selected].dataGrouping))}function skipDataGrouping(t,o){return!(t.isCartesian&&!t.isDirty&&!t.xAxis.isDirty&&!t.yAxis.isDirty&&!o)}const DataGroupingSeriesComposition={compose:compose,groupData:groupData};export default DataGroupingSeriesComposition;