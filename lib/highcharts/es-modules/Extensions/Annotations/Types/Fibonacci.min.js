"use strict";import Annotation from"../Annotation.js";import D from"../../../Core/Defaults.js";const defaultOptions=D["defaultOptions"];import MockPoint from"../MockPoint.js";import Tunnel from"./Tunnel.js";import U from"../../../Core/Utilities.js";const merge=U["merge"];function createPathDGenerator(s,a){return function(){var t,n=this.annotation;if(!n.startRetracements||!n.endRetracements)return[];const e=this.anchor(n.startRetracements[s]).absolutePosition,o=this.anchor(n.endRetracements[s]).absolutePosition,i=[["M",Math.round(e.x),Math.round(e.y)],["L",Math.round(o.x),Math.round(o.y)]];return a&&(t=this.anchor(n.endRetracements[s-1]).absolutePosition,n=this.anchor(n.startRetracements[s-1]).absolutePosition,i.push(["L",Math.round(t.x),Math.round(t.y)],["L",Math.round(n.x),Math.round(n.y)])),i}}defaultOptions.annotations&&(defaultOptions.annotations.types.fibonacci=merge(defaultOptions.annotations.types.tunnel,{typeOptions:{reversed:!1,height:2,backgroundColors:["rgba(130, 170, 255, 0.4)","rgba(139, 191, 216, 0.4)","rgba(150, 216, 192, 0.4)","rgba(156, 229, 161, 0.4)","rgba(162, 241, 130, 0.4)","rgba(169, 255, 101, 0.4)"],lineColor:"#999999",lineColors:[],labels:[]},labelOptions:{allowOverlap:!0,align:"right",backgroundColor:"none",borderWidth:0,crop:!1,overflow:"none",shape:"rect",style:{color:"#333333"},verticalAlign:"middle",y:0}}));class Fibonacci extends Tunnel{linkPoints(){super.linkPoints(),this.linkRetracementsPoints()}linkRetracementsPoints(){const o=this.points,i=o[0].y-o[3].y,s=o[1].y-o[2].y,a=o[0].x,r=o[1].x;Fibonacci.levels.forEach((t,n)=>{var e=o[0].y-i*t,t=o[1].y-s*t,n=this.options.typeOptions.reversed?Fibonacci.levels.length-n-1:n;this.startRetracements=this.startRetracements||[],this.endRetracements=this.endRetracements||[],this.linkRetracementPoint(n,a,e,this.startRetracements),this.linkRetracementPoint(n,r,t,this.endRetracements)})}linkRetracementPoint(t,n,e,o){const i=o[t],s=this.options.typeOptions;i?(i.options.x=n,i.options.y=e,i.refresh()):o[t]=new MockPoint(this.chart,this,{x:n,y:e,xAxis:s.xAxis,yAxis:s.yAxis})}addShapes(){Fibonacci.levels.forEach(function(t,n){var{backgroundColors:e,lineColor:o,lineColors:i}=this.options.typeOptions;this.initShape({type:"path",d:createPathDGenerator(n),stroke:i[n]||o,className:"highcharts-fibonacci-line"},n),0<n&&this.initShape({type:"path",fill:e[n-1],strokeWidth:0,d:createPathDGenerator(n,!0),className:"highcharts-fibonacci-background-"+(n-1)})},this)}addLabels(){Fibonacci.levels.forEach(function(t,n){const e=this.options.typeOptions,o=this.initLabel(merge(e.labels[n],{point:function(t){return MockPoint.pointToOptions(t.annotation.startRetracements[n])},text:t.toString()}));e.labels[n]=o.options},this)}}Fibonacci.levels=[0,.236,.382,.5,.618,.786,1];export default Annotation.types.fibonacci=Fibonacci;