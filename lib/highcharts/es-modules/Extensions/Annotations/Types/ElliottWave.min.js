"use strict";import Annotation from"../Annotation.js";import CrookedLine from"./CrookedLine.js";import D from"../../../Core/Defaults.js";const defaultOptions=D["defaultOptions"];import U from"../../../Core/Utilities.js";const merge=U["merge"];defaultOptions.annotations&&(defaultOptions.annotations.types.elliottWave=merge(defaultOptions.annotations.types.crookedLine,{typeOptions:{labels:["(0)","(A)","(B)","(C)","(D)","(E)"],line:{strokeWidth:1}},labelOptions:{align:"center",allowOverlap:!0,crop:!0,overflow:"none",type:"rect",backgroundColor:"none",borderWidth:0,y:-5,style:{color:"#333333"}}}));class ElliottWave extends CrookedLine{addLabels(){this.getPointsOptions().forEach((t,o)=>{var e=this.options.typeOptions,e=this.initLabel(merge(t.label,{text:e.labels[o],point:function(t){return t.annotation.points[o]}}),!1);t.label=e.options})}}export default Annotation.types.elliottWave=ElliottWave;