"use strict";import Annotation from"../Annotation.js";import ControlPoint from"../ControlPoint.js";import CrookedLine from"./CrookedLine.js";import D from"../../../Core/Defaults.js";const defaultOptions=D["defaultOptions"];import InfinityLine from"./InfinityLine.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";const merge=U["merge"];function edgePoint(a,p,c){return function(t){var o=t.annotation.chart,i=o.inverted?o.plotTop:o.plotLeft;let n=t.annotation.points;const e=n[0].series.xAxis,s=1<n.length?n[1].plotX-n[0].plotX:0,r=e.toValue(n[0].plotX+i+c*s);return n=[new MockPoint(o,n[0].target,{x:r,y:0,xAxis:n[0].options.xAxis,yAxis:n[0].options.yAxis}),new MockPoint(o,n[0].target,{x:r,y:1,xAxis:n[0].options.xAxis,yAxis:n[0].options.yAxis})],InfinityLine.findEdgePoint(n[a],n[p])}}defaultOptions.annotations&&(defaultOptions.annotations.types.fibonacciTimeZones=merge(defaultOptions.annotations.types.crookedLine,{typeOptions:{line:{stroke:"#333333",strokeWidth:1,fill:void 0},controlPointOptions:{positioner:function(){const t=this.target,o=this.graphic,i=t.secondLineEdgePoints,n={annotation:t},e=i[0](n).y,s=i[1](n).y,r=this.chart.plotLeft,a=this.chart.plotTop;let p=i[0](n).x,c=(e+s)/2;return this.chart.inverted&&([p,c]=[c,p]),{x:r+p-(o.width||0)/2,y:a+c-(o.height||0)/2}},events:{drag:function(t,o){o.chart.isInsidePlot(t.chartX-o.chart.plotLeft,t.chartY-o.chart.plotTop,{visiblePlotOnly:!0})&&(t=this.mouseMoveToTranslation(t),o.translatePoint(t.x,0,1),o.redraw(!1))}}}}}));class FibonacciTimeZones extends CrookedLine{addShapes(){let o=1,i=1;for(let t=0;t<11;t++){var n=t?o:0,n=[edgePoint(1,0,n),edgePoint(0,1,n)];i=o+i,o=i-o,1===t&&(this.secondLineEdgePoints=[n[0],n[1]]),this.initShape(merge(this.options.typeOptions.line,{type:"path",points:n,className:"highcharts-fibonacci-timezones-lines"}),t)}}addControlPoints(){const t=this.options,o=t.typeOptions,i=new ControlPoint(this.chart,this,merge(t.controlPointOptions,o.controlPointOptions),0);this.controlPoints.push(i),o.controlPointOptions=i.options}}export default Annotation.types.fibonacciTimeZones=FibonacciTimeZones;