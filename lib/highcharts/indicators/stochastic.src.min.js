!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(t._Highcharts,t._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/stochastic",["highcharts/highcharts"],function(t){return e(t,t.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/stochastic"]=e(t._Highcharts,t._Highcharts.SeriesRegistry):t.Highcharts=e(t.Highcharts,t.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(O,P)=>(()=>{"use strict";var o={512:t=>{t.exports=P},944:t=>{t.exports=O}},r={};function s(t){var e=r[t];if(void 0!==e)return e.exports;e=r[t]={exports:{}};return o[t](e,e.exports,s),e.exports}s.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return s.d(e,{a:e}),e},s.d=(t,e)=>{for(var o in e)s.o(e,o)&&!s.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var t={},e=(s.d(t,{default:()=>E}),s(944)),e=s.n(e);const x={getArrayExtremes:function(t,o,r){return t.reduce((t,e)=>[Math.min(t[0],e[o]),Math.max(t[1],e[r])],[Number.MAX_VALUE,-Number.MAX_VALUE])}};var i,a=s(512),a=s.n(a);const f=a().seriesTypes["sma"]["prototype"],{defined:g,error:m,merge:A}=e();{var n=i=i||{};const G=["bottomLine"],D=["top","bottom"],L=["top"];function N(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function v(t,e){const o=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&o.push(N(t))}),o}function p(){const o=this,t=o.pointValKey,e=o.linesApiNames,r=o.areaLinesNames,s=o.points,i=o.options,a=o.graph,n={options:{gapSize:i.gapSize}},p=[],l=v(o,t);let h=s.length,c;var u,d,y;l.forEach((t,e)=>{for(p[e]=[];h--;)c=s[h],p[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!g(c[t])});h=s.length}),o.userOptions.fillColor&&r.length&&(u=l.indexOf(N(r[0])),u=p[u],d=1===r.length?s:p[l.indexOf(N(r[1]))],y=o.color,o.points=d,o.nextPoints=u,o.color=o.userOptions.fillColor,o.options=A(s,n),o.graph=o.area,o.fillGraph=!0,f.drawGraph.call(o),o.area=o.graph,delete o.nextPoints,delete o.fillGraph,o.color=y),e.forEach((t,e)=>{p[e]?(o.points=p[e],i[t]?o.options=A(i[t].styles,n):m('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),o.graph=o["graph"+t],f.drawGraph.call(o),o["graph"+t]=o.graph):m('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=s,o.options=i,o.graph=a,f.drawGraph.call(o)}function l(t){let e,o=[],r;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=f.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",o=f.getGraphPath.call(this,t);for(let t=(r=e.slice(0,o.length)).length-1;0<=t;t--)o.push(r[t])}}else o=f.getGraphPath.apply(this,arguments);return o}function h(e){const o=[];return(this.pointArrayMap||[]).forEach(t=>{o.push(e[t])}),o}function c(){const t=this.pointArrayMap;let r,s;r=v(this),f.translate.apply(this,arguments),this.points.forEach(o=>{t.forEach((t,e)=>{s=o[t],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(o[r[e]]=this.yAxis.toPixels(s,!0))})})}n.compose=function(t){const e=t.prototype;return e.linesApiNames=e.linesApiNames||G.slice(),e.pointArrayMap=e.pointArrayMap||D.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||L.slice(),e.drawGraph=p,e.getGraphPath=l,e.toYData=h,e.translate=c,t}}const u=i;n=a().seriesTypes.sma;const{extend:d,isArray:b,merge:y}=e();class M extends n{init(){super.init.apply(this,arguments),this.options=y({smoothedLine:{styles:{lineColor:this.color}}},this.options)}getValues(t,e){const o=e.periods[0],r=e.periods[1],s=t.xData,i=t.yData,a=i?i.length:0,n=[],p=[],l=[];let h,c,u,d=null,y,f,g;if(!(a<o)&&b(i[0])&&4===i[0].length){let t=!0,e=0;for(g=o-1;g<a;g++){var m;h=i.slice(g-o+1,g+1),c=(f=x.getArrayExtremes(h,2,1))[0],u=(i[g][3]-c)/(f[1]-c)*100,isNaN(u)&&t?e++:(t&&!isNaN(u)&&(t=!1),m=p.push(s[g]),isNaN(u)?l.push([l[m-2]&&"number"==typeof l[m-2][0]?l[m-2][0]:null,null]):l.push([u,null]),g>=e+(o-1)+(r-1)&&(y=super.getValues({xData:p.slice(-r),yData:l.slice(-r)},{period:r}),d=y.yData[0]),n.push([s[g],u,d]),l[m-1][1]=d)}return{values:n,xData:p,yData:l}}}}M.defaultOptions=y(n.defaultOptions,{params:{index:void 0,period:void 0,periods:[14,3]},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'},smoothedLine:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),d(M.prototype,{areaLinesNames:[],nameComponents:["periods"],nameBase:"Stochastic",pointArrayMap:["y","smoothed"],parallelArrays:["x","y","smoothed"],pointValKey:"y",linesApiNames:["smoothedLine"]}),u.compose(M),a().registerSeriesType("stochastic",M);const E=e();return t.default})());