!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/regressions",["highcharts/highcharts"],function(e){return t(e,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/regressions"]=t(e._Highcharts,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(v,O)=>(()=>{"use strict";var r={512:e=>{e.exports=O},944:e=>{e.exports=v}},s={};function n(e){var t=s[e];if(void 0!==t)return t.exports;t=s[e]={exports:{}};return r[e](t,t.exports,n),t.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var e={},t=(n.d(e,{default:()=>D}),n(944)),t=n.n(t),i=n(512),i=n.n(i),o=i().seriesTypes["sma"];const{isArray:y,extend:a,merge:p}=t();class l extends o{getRegressionLineParameters(e,t){function r(e,t){return y(e)?e[t]:e}const s=this.options.params.index,n=e.reduce(function(e,t){return t+e},0),i=t.reduce(function(e,t){return r(t,s)+e},0),o=n/e.length,a=i/t.length;let p,l,c,g=0,d=0;for(c=0;c<e.length;c++)p=e[c]-o,l=r(t[c],s)-a,g+=p*l,d+=Math.pow(p,2);var u=d?g/d:0;return{slope:u,intercept:a-u*o}}getEndPointY(e,t){return e.slope*t+e.intercept}transformXData(e,t){const r=e[0];return e.map(function(e){return(e-r)/t})}findClosestDistance(e){let t,r,s;for(s=1;s<e.length-1;s++)0<(t=e[s]-e[s-1])&&(void 0===r||t<r)&&(r=t);return r}getValues(e,t){const r=e.xData,s=e.yData,n=t.period,i={xData:[],yData:[],values:[]},o=this.options.params.xAxisUnit||this.findClosestDistance(r);let a,p,l,c,g,d,u,h,f;for(p=n-1;p<=r.length-1;p++)l=p-n+1,c=p+1,g=r[p],u=r.slice(l,c),h=s.slice(l,c),f=this.transformXData(u,o),a=this.getRegressionLineParameters(f,h),d=this.getEndPointY(a,f[f.length-1]),i.values.push({regressionLineParameters:a,x:g,y:d}),y(i.xData)&&i.xData.push(g),y(i.yData)&&i.yData.push(d);return i}}l.defaultOptions=p(o.defaultOptions,{params:{xAxisUnit:null},tooltip:{valueDecimals:4}}),a(l.prototype,{nameBase:"Linear Regression Indicator"}),i().registerSeriesType("linearRegression",l);o=i().seriesTypes.linearRegression;const{extend:c,merge:g}=t();class d extends o{getEndPointY(e){return e.slope}}d.defaultOptions=g(o.defaultOptions),c(d.prototype,{nameBase:"Linear Regression Slope Indicator"}),i().registerSeriesType("linearRegressionSlope",d);o=i().seriesTypes.linearRegression;const{extend:u,merge:h}=t();class f extends o{getEndPointY(e){return e.intercept}}f.defaultOptions=h(o.defaultOptions),u(f.prototype,{nameBase:"Linear Regression Intercept Indicator"}),i().registerSeriesType("linearRegressionIntercept",f);o=i().seriesTypes.linearRegression;const{extend:x,merge:m}=t();class R extends o{slopeToAngle(e){return Math.atan(e)*(180/Math.PI)}getEndPointY(e){return this.slopeToAngle(e.slope)}}R.defaultOptions=m(o.defaultOptions,{tooltip:{pointFormat:'<span style="color:{point.color}">●</span>{series.name}: <b>{point.y}°</b><br/>'}}),x(R.prototype,{nameBase:"Linear Regression Angle Indicator"}),i().registerSeriesType("linearRegressionAngle",R);const D=t();return e.default})());