!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/aroon",["highcharts/highcharts"],function(e){return t(e,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/aroon"]=t(e._Highcharts,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(N,O)=>(()=>{"use strict";var e,r={512:e=>{e.exports=O},944:e=>{e.exports=N}},o={};function a(e){var t=o[e];if(void 0!==t)return t.exports;t=o[e]={exports:{}};return r[e](t,t.exports,a),t.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var t={},i=(a.d(t,{default:()=>M}),a(944)),i=a.n(i),n=a(512),n=a.n(n);let y=n().seriesTypes["sma"]["prototype"],{defined:g,error:m,merge:x}=i();{var s=e=e||{};let r=["bottomLine"],o=["top","bottom"],a=["top"];function A(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function v(e,t){let r=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&r.push(A(e))}),r}function p(){let r=this,e=r.pointValKey,t=r.linesApiNames,o=r.areaLinesNames,a=r.points,i=r.options,n=r.graph,s={options:{gapSize:i.gapSize}},p=[],l=v(r,e),h=a.length,c;var u,f,d;l.forEach((e,t)=>{for(p[t]=[];h--;)c=a[h],p[t].push({x:c.x,plotX:c.plotX,plotY:c[e],isNull:!g(c[e])});h=a.length}),r.userOptions.fillColor&&o.length&&(u=p[l.indexOf(A(o[0]))],f=1===o.length?a:p[l.indexOf(A(o[1]))],d=r.color,r.points=f,r.nextPoints=u,r.color=r.userOptions.fillColor,r.options=x(a,s),r.graph=r.area,r.fillGraph=!0,y.drawGraph.call(r),r.area=r.graph,delete r.nextPoints,delete r.fillGraph,r.color=d),t.forEach((e,t)=>{p[t]?(r.points=p[t],i[e]?r.options=x(i[e].styles,s):m('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),r.graph=r["graph"+e],y.drawGraph.call(r),r["graph"+e]=r.graph):m('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),r.points=a,r.options=i,r.graph=n,y.drawGraph.call(r)}function l(e){let t,r=[],o;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=y.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",r=y.getGraphPath.call(this,e);for(let e=(o=t.slice(0,r.length)).length-1;0<=e;e--)r.push(o[e])}}else r=y.getGraphPath.apply(this,arguments);return r}function h(t){let r=[];return(this.pointArrayMap||[]).forEach(e=>{r.push(t[e])}),r}function c(){let e=this.pointArrayMap,o,a;o=v(this),y.translate.apply(this,arguments),this.points.forEach(r=>{e.forEach((e,t)=>{a=r[e],null!==(a=this.dataModify?this.dataModify.modifyValue(a):a)&&(r[o[t]]=this.yAxis.toPixels(a,!0))})})}e.compose=function(e){let t=e.prototype;return t.linesApiNames=t.linesApiNames||r.slice(),t.pointArrayMap=t.pointArrayMap||o.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||a.slice(),t.drawGraph=p,t.getGraphPath=l,t.toYData=h,t.translate=c,e}}let u=e,f=n().seriesTypes["sma"],{extend:d,merge:w,pick:b}=i();function D(e,t){let r=e[0],o=0,a;for(a=1;a<e.length;a++)("max"===t&&e[a]>=r||"min"===t&&e[a]<=r)&&(r=e[a],o=a);return o}class G extends f{getValues(e,t){let r,o,a,i,n,s=t.period,p=e.xData,l=e.yData,h=l?l.length:0,c=[],u=[],f=[];for(i=s-1;i<h;i++)a=D((n=l.slice(i-s+1,i+2)).map(function(e){return b(e[2],e)}),"min"),r=D(n.map(function(e){return b(e[1],e)}),"max")/s*100,o=a/s*100,p[i+1]&&(c.push([p[i+1],r,o]),u.push(p[i+1]),f.push([r,o]));return{values:c,xData:u,yData:f}}}G.defaultOptions=w(f.defaultOptions,{params:{index:void 0,period:25},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'},aroonDown:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),d(G.prototype,{areaLinesNames:[],linesApiNames:["aroonDown"],nameBase:"Aroon",pointArrayMap:["y","aroonDown"],pointValKey:"y"}),u.compose(G),n().registerSeriesType("aroon",G);let M=i();return t.default})());