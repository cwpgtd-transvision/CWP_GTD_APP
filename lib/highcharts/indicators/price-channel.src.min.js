!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/price-channel",["highcharts/highcharts"],function(e){return t(e,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/price-channel"]=t(e._Highcharts,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(P,O)=>(()=>{"use strict";var r={512:e=>{e.exports=O},944:e=>{e.exports=P}},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;t=o[e]={exports:{}};return r[e](t,t.exports,i),t.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var e={},t=(i.d(e,{default:()=>N}),i(944)),t=i.n(t);const y={getArrayExtremes:function(e,r,o){return e.reduce((e,t)=>[Math.min(e[0],t[r]),Math.max(e[1],t[o])],[Number.MAX_VALUE,-Number.MAX_VALUE])}};var a=i(512),a=i.n(a);const g=a().seriesTypes["sma"]["prototype"],{defined:m,error:x,merge:A}=t();{var s=f=f||{};const E=["bottomLine"],G=["top","bottom"],L=["top"];function b(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function v(e,t){const r=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&r.push(b(e))}),r}function n(){const r=this,e=r.pointValKey,t=r.linesApiNames,o=r.areaLinesNames,i=r.points,a=r.options,s=r.graph,n={options:{gapSize:a.gapSize}},p=[],l=v(r,e);let h=i.length,c;var f,d,u;l.forEach((e,t)=>{for(p[t]=[];h--;)c=i[h],p[t].push({x:c.x,plotX:c.plotX,plotY:c[e],isNull:!m(c[e])});h=i.length}),r.userOptions.fillColor&&o.length&&(f=l.indexOf(b(o[0])),f=p[f],d=1===o.length?i:p[l.indexOf(b(o[1]))],u=r.color,r.points=d,r.nextPoints=f,r.color=r.userOptions.fillColor,r.options=A(i,n),r.graph=r.area,r.fillGraph=!0,g.drawGraph.call(r),r.area=r.graph,delete r.nextPoints,delete r.fillGraph,r.color=u),t.forEach((e,t)=>{p[t]?(r.points=p[t],a[e]?r.options=A(a[e].styles,n):x('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),r.graph=r["graph"+e],g.drawGraph.call(r),r["graph"+e]=r.graph):x('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),r.points=i,r.options=a,r.graph=s,g.drawGraph.call(r)}function p(e){let t,r=[],o;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=g.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",r=g.getGraphPath.call(this,e);for(let e=(o=t.slice(0,r.length)).length-1;0<=e;e--)r.push(o[e])}}else r=g.getGraphPath.apply(this,arguments);return r}function l(t){const r=[];return(this.pointArrayMap||[]).forEach(e=>{r.push(t[e])}),r}function h(){const e=this.pointArrayMap;let o,i;o=v(this),g.translate.apply(this,arguments),this.points.forEach(r=>{e.forEach((e,t)=>{i=r[e],null!==(i=this.dataModify?this.dataModify.modifyValue(i):i)&&(r[o[t]]=this.yAxis.toPixels(i,!0))})})}s.compose=function(e){const t=e.prototype;return t.linesApiNames=t.linesApiNames||E.slice(),t.pointArrayMap=t.pointArrayMap||G.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||L.slice(),t.drawGraph=n,t.getGraphPath=p,t.toYData=l,t.translate=h,e}}const c=f;var s={colors:["#2caffe","#544fc5","#00e272","#fe6a35","#6b8abc","#d568fb","#2ee0ca","#fa4b42","#feb56a","#91e8e1"]},f=a().seriesTypes["sma"];const{merge:d,extend:u}=t();class M extends f{getValues(e,t){const r=t.period,o=e.xData,i=e.yData,a=i?i.length:0,s=[],n=[],p=[];let l,h,c,f,d,u,g;if(!(a<r)){for(g=r;g<=a;g++)f=o[g-1],d=i.slice(g-r,g),l=((h=(u=y.getArrayExtremes(d,2,1))[1])+(c=u[0]))/2,s.push([f,h,l,c]),n.push(f),p.push([h,l,c]);return{values:s,xData:n,yData:p}}}}M.defaultOptions=d(f.defaultOptions,{params:{index:void 0,period:20},lineWidth:1,topLine:{styles:{lineColor:s.colors[2],lineWidth:1}},bottomLine:{styles:{lineColor:s.colors[8],lineWidth:1}},dataGrouping:{approximation:"averages"}}),u(M.prototype,{areaLinesNames:["top","bottom"],nameBase:"Price Channel",nameComponents:["period"],linesApiNames:["topLine","bottomLine"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),c.compose(M),a().registerSeriesType("pc",M);const N=t();return e.default})());