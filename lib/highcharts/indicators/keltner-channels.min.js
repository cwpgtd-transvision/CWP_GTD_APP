!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/keltner-channels",["highcharts/highcharts"],function(e){return t(e,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/keltner-channels"]=t(e._Highcharts,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(G,M)=>(()=>{"use strict";var e,i={512:e=>{e.exports=M},944:e=>{e.exports=G}},o={};function r(e){var t=o[e];if(void 0!==t)return t.exports;t=o[e]={exports:{}};return i[e](t,t.exports,r),t.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var t={},s=(r.d(t,{default:()=>L}),r(944)),s=r.n(s),a=r(512),b=r.n(a);let f=b().seriesTypes["sma"]["prototype"],{defined:m,error:g,merge:x}=s();{a=e=e||{};let i=["bottomLine"],o=["top","bottom"],r=["top"];function A(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function v(e,t){let i=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&i.push(A(e))}),i}function n(){let i=this,e=i.pointValKey,t=i.linesApiNames,o=i.areaLinesNames,r=i.points,s=i.options,a=i.graph,n={options:{gapSize:s.gapSize}},p=[],l=v(i,e),h=r.length,d;var c,u,y;l.forEach((e,t)=>{for(p[t]=[];h--;)d=r[h],p[t].push({x:d.x,plotX:d.plotX,plotY:d[e],isNull:!m(d[e])});h=r.length}),i.userOptions.fillColor&&o.length&&(c=p[l.indexOf(A(o[0]))],u=1===o.length?r:p[l.indexOf(A(o[1]))],y=i.color,i.points=u,i.nextPoints=c,i.color=i.userOptions.fillColor,i.options=x(r,n),i.graph=i.area,i.fillGraph=!0,f.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=y),t.forEach((e,t)=>{p[t]?(i.points=p[t],s[e]?i.options=x(s[e].styles,n):g('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+e],f.drawGraph.call(i),i["graph"+e]=i.graph):g('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=r,i.options=s,i.graph=a,f.drawGraph.call(i)}function p(e){let t,i=[],o;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=f.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",i=f.getGraphPath.call(this,e);for(let e=(o=t.slice(0,i.length)).length-1;0<=e;e--)i.push(o[e])}}else i=f.getGraphPath.apply(this,arguments);return i}function l(t){let i=[];return(this.pointArrayMap||[]).forEach(e=>{i.push(t[e])}),i}function h(){let e=this.pointArrayMap,o,r;o=v(this),f.translate.apply(this,arguments),this.points.forEach(i=>{e.forEach((e,t)=>{r=i[e],null!==(r=this.dataModify?this.dataModify.modifyValue(r):r)&&(i[o[t]]=this.yAxis.toPixels(r,!0))})})}a.compose=function(e){let t=e.prototype;return t.linesApiNames=t.linesApiNames||i.slice(),t.pointArrayMap=t.pointArrayMap||o.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||r.slice(),t.drawGraph=n,t.getGraphPath=p,t.toYData=l,t.translate=h,e}}let d=e,c=b().seriesTypes["sma"],{correctFloat:C,extend:u,merge:y}=s();class T extends c{init(){b().seriesTypes.sma.prototype.init.apply(this,arguments),this.options=y({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(e,t){let i,o,r,s,a,n,p,l=t.period,h=t.periodATR,d=t.multiplierATR,c=t.index,u=e.yData,y=u?u.length:0,f=[],m=b().seriesTypes.ema.prototype.getValues(e,{period:l,index:c}),g=b().seriesTypes.atr.prototype.getValues(e,{period:h}),x=[],A=[];if(!(y<l)){for(p=l;p<=y;p++)a=m.values[p-l],n=g.values[p-h],s=a[0],o=C(a[1]+d*n[1]),r=C(a[1]-d*n[1]),i=a[1],f.push([s,o,i,r]),x.push(s),A.push([o,i,r]);return{values:f,xData:x,yData:A}}}}T.defaultOptions=y(c.defaultOptions,{params:{index:0,period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1}),u(T.prototype,{nameBase:"Keltner Channels",areaLinesNames:["top","bottom"],nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),d.compose(T),b().registerSeriesType("keltnerchannels",T);let L=s();return t.default})());