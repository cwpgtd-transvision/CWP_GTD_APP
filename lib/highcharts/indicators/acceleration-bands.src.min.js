!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(t._Highcharts,t._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts/highcharts"],function(t){return e(t,t.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/acceleration-bands"]=e(t._Highcharts,t._Highcharts.SeriesRegistry):t.Highcharts=e(t.Highcharts,t.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(O,w)=>(()=>{"use strict";var a={512:t=>{t.exports=w},944:t=>{t.exports=O}},i={};function o(t){var e=i[t];if(void 0!==e)return e.exports;e=i[t]={exports:{}};return a[t](e,e.exports,o),e.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var a in e)o.o(e,a)&&!o.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var t,e={},r=(o.d(e,{default:()=>v}),o(944)),r=o.n(r),s=o(512),s=o.n(s);const y=s().seriesTypes["sma"]["prototype"],{defined:g,error:m,merge:x}=r();{var n=t=t||{};const G=["bottomLine"],M=["top","bottom"],N=["top"];function A(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function D(t,e){const a=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&a.push(A(t))}),a}function p(){const a=this,t=a.pointValKey,e=a.linesApiNames,i=a.areaLinesNames,o=a.points,r=a.options,s=a.graph,n={options:{gapSize:r.gapSize}},p=[],l=D(a,t);let h=o.length,c;var d,u,f;l.forEach((t,e)=>{for(p[e]=[];h--;)c=o[h],p[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!g(c[t])});h=o.length}),a.userOptions.fillColor&&i.length&&(d=l.indexOf(A(i[0])),d=p[d],u=1===i.length?o:p[l.indexOf(A(i[1]))],f=a.color,a.points=u,a.nextPoints=d,a.color=a.userOptions.fillColor,a.options=x(o,n),a.graph=a.area,a.fillGraph=!0,y.drawGraph.call(a),a.area=a.graph,delete a.nextPoints,delete a.fillGraph,a.color=f),e.forEach((t,e)=>{p[e]?(a.points=p[e],r[t]?a.options=x(r[t].styles,n):m('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),a.graph=a["graph"+t],y.drawGraph.call(a),a["graph"+t]=a.graph):m('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),a.points=o,a.options=r,a.graph=s,y.drawGraph.call(a)}function l(t){let e,a=[],i;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=y.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",a=y.getGraphPath.call(this,t);for(let t=(i=e.slice(0,a.length)).length-1;0<=t;t--)a.push(i[t])}}else a=y.getGraphPath.apply(this,arguments);return a}function h(e){const a=[];return(this.pointArrayMap||[]).forEach(t=>{a.push(e[t])}),a}function c(){const t=this.pointArrayMap;let i,o;i=D(this),y.translate.apply(this,arguments),this.points.forEach(a=>{t.forEach((t,e)=>{o=a[t],null!==(o=this.dataModify?this.dataModify.modifyValue(o):o)&&(a[i[e]]=this.yAxis.toPixels(o,!0))})})}n.compose=function(t){const e=t.prototype;return e.linesApiNames=e.linesApiNames||G.slice(),e.pointArrayMap=e.pointArrayMap||M.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||N.slice(),e.drawGraph=p,e.getGraphPath=l,e.toYData=h,e.translate=c,t}}const d=t;n=s().seriesTypes.sma;const{correctFloat:P,extend:u,merge:f}=r();class b extends n{getValues(t,e){const a=e.period,i=e.factor,o=e.index,r=t.xData,s=t.yData,n=s?s.length:0,p=[],l=[],h=[],c=[],d=[];let u,f,y,g,m,x,A,D,b,v,G;if(!(n<a)){for(G=0;G<=n;G++)G<n&&(M=s[G][2],N=s[G][1],O=i,m=P(N-M)/(P(N+M)/2)*1e3*O,p.push((N=s[G][1],M=m,N*P(1+2*M))),l.push((O=s[G][2],N=m,O*P(1-2*N)))),G>=a&&(b=r.slice(G-a,G),v=s.slice(G-a,G),A=super.getValues.call(this,{xData:b,yData:p.slice(G-a,G)},{period:a}),D=super.getValues.call(this,{xData:b,yData:l.slice(G-a,G)},{period:a}),g=(x=super.getValues.call(this,{xData:b,yData:v},{period:a,index:o})).xData[0],f=A.yData[0],y=D.yData[0],u=x.yData[0],h.push([g,f,u,y]),c.push(g),d.push([f,u,y]));var M,N,O;return{values:h,xData:c,yData:d}}}}b.defaultOptions=f(n.defaultOptions,{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),u(b.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameBase:"Acceleration Bands",nameComponents:["period","factor"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),d.compose(b),s().registerSeriesType("abands",b);const v=r();return e.default})());