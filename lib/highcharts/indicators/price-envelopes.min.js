!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(t._Highcharts,t._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/price-envelopes",["highcharts/highcharts"],function(t){return e(t,t.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/price-envelopes"]=e(t._Highcharts,t._Highcharts.SeriesRegistry):t.Highcharts=e(t.Highcharts,t.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(P,D)=>(()=>{"use strict";var t,o={512:t=>{t.exports=D},944:t=>{t.exports=P}},i={};function r(t){var e=i[t];if(void 0!==e)return e.exports;e=i[t]={exports:{}};return o[t](e,e.exports,r),e.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var e={},a=(r.d(e,{default:()=>M}),r(944)),a=r.n(a),s=r(512),s=r.n(s);let y=s().seriesTypes["sma"]["prototype"],{defined:m,error:g,merge:x}=a();{var n=t=t||{};let o=["bottomLine"],i=["top","bottom"],r=["top"];function b(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function v(t,e){let o=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&o.push(b(t))}),o}function p(){let o=this,t=o.pointValKey,e=o.linesApiNames,i=o.areaLinesNames,r=o.points,a=o.options,s=o.graph,n={options:{gapSize:a.gapSize}},p=[],l=v(o,t),h=r.length,c;var d,u,f;l.forEach((t,e)=>{for(p[e]=[];h--;)c=r[h],p[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!m(c[t])});h=r.length}),o.userOptions.fillColor&&i.length&&(d=p[l.indexOf(b(i[0]))],u=1===i.length?r:p[l.indexOf(b(i[1]))],f=o.color,o.points=u,o.nextPoints=d,o.color=o.userOptions.fillColor,o.options=x(r,n),o.graph=o.area,o.fillGraph=!0,y.drawGraph.call(o),o.area=o.graph,delete o.nextPoints,delete o.fillGraph,o.color=f),e.forEach((t,e)=>{p[e]?(o.points=p[e],a[t]?o.options=x(a[t].styles,n):g('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),o.graph=o["graph"+t],y.drawGraph.call(o),o["graph"+t]=o.graph):g('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=r,o.options=a,o.graph=s,y.drawGraph.call(o)}function l(t){let e,o=[],i;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=y.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",o=y.getGraphPath.call(this,t);for(let t=(i=e.slice(0,o.length)).length-1;0<=t;t--)o.push(i[t])}}else o=y.getGraphPath.apply(this,arguments);return o}function h(e){let o=[];return(this.pointArrayMap||[]).forEach(t=>{o.push(e[t])}),o}function c(){let t=this.pointArrayMap,i,r;i=v(this),y.translate.apply(this,arguments),this.points.forEach(o=>{t.forEach((t,e)=>{r=o[t],null!==(r=this.dataModify?this.dataModify.modifyValue(r):r)&&(o[i[e]]=this.yAxis.toPixels(r,!0))})})}t.compose=function(t){let e=t.prototype;return e.linesApiNames=e.linesApiNames||o.slice(),e.pointArrayMap=e.pointArrayMap||i.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||r.slice(),e.drawGraph=p,e.getGraphPath=l,e.toYData=h,e.translate=c,t}}let d=t,u=s().seriesTypes["sma"],{extend:f,isArray:A,merge:G}=a();class L extends u{init(){super.init.apply(this,arguments),this.options=G({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(t,e){let o,i,r,a,s,n,p,l,h=e.period,c=e.topBand,d=e.bottomBand,u=t.xData,f=t.yData,y=f?f.length:0,m=[],g=[],x=[];if(!(u.length<h)&&A(f[0])&&4===f[0].length){for(l=h;l<=y;l++)s=u.slice(l-h,l),n=f.slice(l-h,l),a=(p=super.getValues({xData:s,yData:n},e)).xData[0],i=(o=p.yData[0])*(1+c),r=o*(1-d),m.push([a,i,o,r]),g.push(a),x.push([i,o,r]);return{values:m,xData:g,yData:x}}}}L.defaultOptions=G(u.defaultOptions,{marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},params:{period:20,topBand:.1,bottomBand:.1},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),f(L.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","topBand","bottomBand"],nameBase:"Price envelopes",pointArrayMap:["top","middle","bottom"],parallelArrays:["x","y","top","bottom"],pointValKey:"middle"}),d.compose(L),s().registerSeriesType("priceenvelopes",L);let M=a();return e.default})());