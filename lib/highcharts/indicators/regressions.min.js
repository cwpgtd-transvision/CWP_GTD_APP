!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(e._Highcharts,e._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/regressions",["highcharts/highcharts"],function(e){return t(e,e.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/regressions"]=t(e._Highcharts,e._Highcharts.SeriesRegistry):e.Highcharts=t(e.Highcharts,e.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(S,T)=>(()=>{"use strict";var r={512:e=>{e.exports=T},944:e=>{e.exports=S}},s={};function n(e){var t=s[e];if(void 0!==t)return t.exports;t=s[e]={exports:{}};return r[e](t,t.exports,n),t.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var e={},t=(n.d(e,{default:()=>P}),n(944)),t=n.n(t),i=n(512),i=n.n(i);let o=i().seriesTypes["sma"],{isArray:y,extend:a,merge:p}=t();class l extends o{getRegressionLineParameters(e,t){function r(e,t){return y(e)?e[t]:e}let s=this.options.params.index,n=e.reduce(function(e,t){return t+e},0),i=t.reduce(function(e,t){return r(t,s)+e},0),o=n/e.length,a=i/t.length,p,l,g=0,d=0;for(l=0;l<e.length;l++)g+=(p=e[l]-o)*(r(t[l],s)-a),d+=Math.pow(p,2);var u=d?g/d:0;return{slope:u,intercept:a-u*o}}getEndPointY(e,t){return e.slope*t+e.intercept}transformXData(e,t){let r=e[0];return e.map(function(e){return(e-r)/t})}findClosestDistance(e){let t,r,s;for(s=1;s<e.length-1;s++)0<(t=e[s]-e[s-1])&&(void 0===r||t<r)&&(r=t);return r}getValues(e,t){let r,s,n,i,o,a,p,l,g,d=e.xData,u=e.yData,c=t.period,h={xData:[],yData:[],values:[]},f=this.options.params.xAxisUnit||this.findClosestDistance(d);for(s=c-1;s<=d.length-1;s++)n=s-c+1,i=s+1,o=d[s],p=d.slice(n,i),l=u.slice(n,i),g=this.transformXData(p,f),r=this.getRegressionLineParameters(g,l),a=this.getEndPointY(r,g[g.length-1]),h.values.push({regressionLineParameters:r,x:o,y:a}),y(h.xData)&&h.xData.push(o),y(h.yData)&&h.yData.push(a);return h}}l.defaultOptions=p(o.defaultOptions,{params:{xAxisUnit:null},tooltip:{valueDecimals:4}}),a(l.prototype,{nameBase:"Linear Regression Indicator"}),i().registerSeriesType("linearRegression",l);let g=i().seriesTypes["linearRegression"],{extend:d,merge:u}=t();class c extends g{getEndPointY(e){return e.slope}}c.defaultOptions=u(g.defaultOptions),d(c.prototype,{nameBase:"Linear Regression Slope Indicator"}),i().registerSeriesType("linearRegressionSlope",c);let h=i().seriesTypes["linearRegression"],{extend:f,merge:x}=t();class m extends h{getEndPointY(e){return e.intercept}}m.defaultOptions=x(h.defaultOptions),f(m.prototype,{nameBase:"Linear Regression Intercept Indicator"}),i().registerSeriesType("linearRegressionIntercept",m);let R=i().seriesTypes["linearRegression"],{extend:D,merge:v}=t();class O extends R{slopeToAngle(e){return 180/Math.PI*Math.atan(e)}getEndPointY(e){return this.slopeToAngle(e.slope)}}O.defaultOptions=v(R.defaultOptions,{tooltip:{pointFormat:'<span style="color:{point.color}">●</span>{series.name}: <b>{point.y}°</b><br/>'}}),D(O.prototype,{nameBase:"Linear Regression Angle Indicator"}),i().registerSeriesType("linearRegressionAngle",O);let P=t();return e.default})());