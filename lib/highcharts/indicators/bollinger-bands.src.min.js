!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(t._Highcharts,t._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/bollinger-bands",["highcharts/highcharts"],function(t){return e(t,t.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/bollinger-bands"]=e(t._Highcharts,t._Highcharts.SeriesRegistry):t.Highcharts=e(t.Highcharts,t.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(N,O)=>(()=>{"use strict";var o={512:t=>{t.exports=O},944:t=>{t.exports=N}},i={};function r(t){var e=i[t];if(void 0!==e)return e.exports;e=i[t]={exports:{}};return o[t](e,e.exports,r),e.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var t,e={},s=(r.d(e,{default:()=>M}),r(944)),s=r.n(s),a=r(512),v=r.n(a);const u=v().seriesTypes["sma"]["prototype"],{defined:g,error:m,merge:x}=s();{a=t=t||{};const G=["bottomLine"],L=["top","bottom"],C=["top"];function b(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function A(t,e){const o=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&o.push(b(t))}),o}function n(){const o=this,t=o.pointValKey,e=o.linesApiNames,i=o.areaLinesNames,r=o.points,s=o.options,a=o.graph,n={options:{gapSize:s.gapSize}},p=[],l=A(o,t);let h=r.length,c;var d,f,y;l.forEach((t,e)=>{for(p[e]=[];h--;)c=r[h],p[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!g(c[t])});h=r.length}),o.userOptions.fillColor&&i.length&&(d=l.indexOf(b(i[0])),d=p[d],f=1===i.length?r:p[l.indexOf(b(i[1]))],y=o.color,o.points=f,o.nextPoints=d,o.color=o.userOptions.fillColor,o.options=x(r,n),o.graph=o.area,o.fillGraph=!0,u.drawGraph.call(o),o.area=o.graph,delete o.nextPoints,delete o.fillGraph,o.color=y),e.forEach((t,e)=>{p[e]?(o.points=p[e],s[t]?o.options=x(s[t].styles,n):m('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),o.graph=o["graph"+t],u.drawGraph.call(o),o["graph"+t]=o.graph):m('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=r,o.options=s,o.graph=a,u.drawGraph.call(o)}function p(t){let e,o=[],i;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=u.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",o=u.getGraphPath.call(this,t);for(let t=(i=e.slice(0,o.length)).length-1;0<=t;t--)o.push(i[t])}}else o=u.getGraphPath.apply(this,arguments);return o}function l(e){const o=[];return(this.pointArrayMap||[]).forEach(t=>{o.push(e[t])}),o}function h(){const t=this.pointArrayMap;let i,r;i=A(this),u.translate.apply(this,arguments),this.points.forEach(o=>{t.forEach((t,e)=>{r=o[t],null!==(r=this.dataModify?this.dataModify.modifyValue(r):r)&&(o[i[e]]=this.yAxis.toPixels(r,!0))})})}a.compose=function(t){const e=t.prototype;return e.linesApiNames=e.linesApiNames||G.slice(),e.pointArrayMap=e.pointArrayMap||L.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||C.slice(),e.drawGraph=n,e.getGraphPath=p,e.toYData=l,e.translate=h,t}}const c=t;a=v().seriesTypes.sma;const{extend:d,isArray:D,merge:f}=s();class y extends a{init(){v().seriesTypes.sma.prototype.init.apply(this,arguments),this.options=f({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(t,e){const o=e.period,i=e.standardDeviation,r=[],s=[],a=t.xData,n=t.yData,p=n?n.length:0,l=[];let h,c,d,f,y,u,g,m,x;if(!(a.length<o)){var b=D(n[0]);for(x=o;x<=p;x++)y=a.slice(x-o,x),u=n.slice(x-o,x),f=(m=v().seriesTypes.sma.prototype.getValues.call(this,{xData:y,yData:u},e)).xData[0],c=(h=m.yData[0])+i*(g=function(t,e,o,i){var r=t.length;let s=0,a,n=0;for(;s<r;s++)a=(o?t[s][e]:t[s])-i,n+=a*a;return n/=r-1,Math.sqrt(n)}(u,e.index,b,h)),d=h-i*g,l.push([f,c,h,d]),r.push(f),s.push([c,h,d]);return{values:l,xData:r,yData:s}}}}y.defaultOptions=f(a.defaultOptions,{params:{period:20,standardDeviation:2,index:3},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"}}),d(y.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","standardDeviation"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),c.compose(y),v().registerSeriesType("bb",y);const M=s();return e.default})());