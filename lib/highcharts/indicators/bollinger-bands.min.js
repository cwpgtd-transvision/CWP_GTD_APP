!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(t._Highcharts,t._Highcharts.SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/bollinger-bands",["highcharts/highcharts"],function(t){return e(t,t.SeriesRegistry)}):"object"==typeof exports?exports["highcharts/indicators/bollinger-bands"]=e(t._Highcharts,t._Highcharts.SeriesRegistry):t.Highcharts=e(t.Highcharts,t.Highcharts.SeriesRegistry)}("undefined"==typeof window?this:window,(L,C)=>(()=>{"use strict";var t,i={512:t=>{t.exports=C},944:t=>{t.exports=L}},o={};function r(t){var e=o[t];if(void 0!==e)return e.exports;e=o[t]={exports:{}};return i[t](e,e.exports,r),e.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var i in e)r.o(e,i)&&!r.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var e={},a=(r.d(e,{default:()=>G}),r(944)),a=r.n(a),s=r(512),v=r.n(s);let u=v().seriesTypes["sma"]["prototype"],{defined:g,error:m,merge:x}=a();{s=t=t||{};let i=["bottomLine"],o=["top","bottom"],r=["top"];function b(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function A(t,e){let i=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&i.push(b(t))}),i}function n(){let i=this,t=i.pointValKey,e=i.linesApiNames,o=i.areaLinesNames,r=i.points,a=i.options,s=i.graph,n={options:{gapSize:a.gapSize}},p=[],l=A(i,t),h=r.length,d;var c,f,y;l.forEach((t,e)=>{for(p[e]=[];h--;)d=r[h],p[e].push({x:d.x,plotX:d.plotX,plotY:d[t],isNull:!g(d[t])});h=r.length}),i.userOptions.fillColor&&o.length&&(c=p[l.indexOf(b(o[0]))],f=1===o.length?r:p[l.indexOf(b(o[1]))],y=i.color,i.points=f,i.nextPoints=c,i.color=i.userOptions.fillColor,i.options=x(r,n),i.graph=i.area,i.fillGraph=!0,u.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=y),e.forEach((t,e)=>{p[e]?(i.points=p[e],a[t]?i.options=x(a[t].styles,n):m('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+t],u.drawGraph.call(i),i["graph"+t]=i.graph):m('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=r,i.options=a,i.graph=s,u.drawGraph.call(i)}function p(t){let e,i=[],o;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=u.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",i=u.getGraphPath.call(this,t);for(let t=(o=e.slice(0,i.length)).length-1;0<=t;t--)i.push(o[t])}}else i=u.getGraphPath.apply(this,arguments);return i}function l(e){let i=[];return(this.pointArrayMap||[]).forEach(t=>{i.push(e[t])}),i}function h(){let t=this.pointArrayMap,o,r;o=A(this),u.translate.apply(this,arguments),this.points.forEach(i=>{t.forEach((t,e)=>{r=i[t],null!==(r=this.dataModify?this.dataModify.modifyValue(r):r)&&(i[o[e]]=this.yAxis.toPixels(r,!0))})})}s.compose=function(t){let e=t.prototype;return e.linesApiNames=e.linesApiNames||i.slice(),e.pointArrayMap=e.pointArrayMap||o.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||r.slice(),e.drawGraph=n,e.getGraphPath=p,e.toYData=l,e.translate=h,t}}let d=t,c=v().seriesTypes["sma"],{extend:f,isArray:D,merge:y}=a();class M extends c{init(){v().seriesTypes.sma.prototype.init.apply(this,arguments),this.options=y({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(t,e){let i,o,r,a,s,n,p,l,h,d=e.period,c=e.standardDeviation,f=[],y=[],u=t.xData,g=t.yData,m=g?g.length:0,x=[];if(!(u.length<d)){var b=D(g[0]);for(h=d;h<=m;h++)s=u.slice(h-d,h),n=g.slice(h-d,h),a=(l=v().seriesTypes.sma.prototype.getValues.call(this,{xData:s,yData:n},e)).xData[0],o=(i=l.yData[0])+c*(p=function(t,e,i,o){let r=t.length,a=0,s,n=0;for(;a<r;a++)n+=(s=(i?t[a][e]:t[a])-o)*s;return Math.sqrt(n/=r-1)}(n,e.index,b,i)),r=i-c*p,x.push([a,o,i,r]),f.push(a),y.push([o,i,r]);return{values:x,xData:f,yData:y}}}}M.defaultOptions=y(c.defaultOptions,{params:{period:20,standardDeviation:2,index:3},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"}}),f(M.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","standardDeviation"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),d.compose(M),v().registerSeriesType("bb",M);let G=a();return e.default})());