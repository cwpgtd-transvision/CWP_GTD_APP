import*as e from"../highcharts.js";var t={n:e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},d:(e,r)=>{for(var s in r)t.o(r,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:r[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let r=e.default;var s=t.n(r);let i=e.default.SeriesRegistry;var o=t.n(i);let a=o().seriesTypes["column"],{extend:l,isNumber:d,merge:h,pick:p}=s();class n extends a{drawPoints(){let e=this.options,u=this.chart.renderer,v=e.marker,t=this.points.reduce((e,t)=>e+Math.abs(t.y||0),0),r=this.points.reduce((e,t)=>e+(t.shapeArgs?.height||0),0),b=e.itemPadding||0,s=this.points[0]?.shapeArgs?.width||0,A=e.slotsPerBar,k=s;if(!d(A))for(A=1;A<t&&!(t/A<r/k*1.2);)k=s/++A;var P,w=r*A/t;for(P of this.points){let e=P.marker||{},s=e.symbol||v.symbol,i=p(e.radius,v.radius),a="rect"!==s?w:k,t=P.shapeArgs||{},o=(t.x||0)+((t.width||0)-A*a)/2,d=Math.abs(P.y??0),r=t.y||0,h=t.height||0,n,c=o,g=P.negative?r:r+h-w,y=0,f=(P.graphics=n=P.graphics||[],P.pointAttr?P.pointAttr[P.selected?"selected":""]||this.pointAttr[""]:this.pointAttribs(P,P.selected&&"select"));if(delete f.r,this.chart.styledMode&&(delete f.stroke,delete f["stroke-width"]),"number"==typeof P.y){P.graphic||(P.graphic=u.g("point").add(this.group));for(let r=0;r<d;r++){let e={x:c+a*b,y:g+w*b,width:a*(1-2*b),height:w*(1-2*b),r:i},t=n[r];t?t.animate(e):t=u.symbol(s).attr(l(e,f)).add(P.graphic),t.isActive=!0,n[r]=t,c+=a,++y>=A&&(y=0,c=o,g=P.negative?g+w:g-w)}}let m=-1;for(var x of n)++m,x&&(x.isActive?x.isActive=!1:(x.destroy(),n.splice(m,1)))}}}n.defaultOptions=h(a.defaultOptions,{itemPadding:.1,marker:{symbol:"circle",states:{hover:{},select:{}}},slotsPerBar:void 0}),l(n.prototype,{markerAttribs:void 0}),o().registerSeriesType("dotplot",n);let c=s();export{c as default};