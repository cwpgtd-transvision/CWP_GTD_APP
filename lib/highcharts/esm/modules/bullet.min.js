import*as t from"../highcharts.js";var e={n:t=>{var r=t&&t.__esModule?()=>t.default:()=>t;return e.d(r,{a:r}),r},d:(t,r)=>{for(var a in r)e.o(r,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:r[a]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};let r=t.default;var a=e.n(r);let o=t.default.Series.types.column;var i=e.n(o);class s extends i().prototype.pointClass{destroy(){this.targetGraphic&&(this.targetGraphic=this.targetGraphic.destroy()),super.destroy.apply(this,arguments)}}let l=t.default.SeriesRegistry;var p=e.n(l);let{extend:n,isNumber:d,merge:h,pick:c,relativeLength:g}=a();class u extends i(){drawPoints(){let u=this.chart,y=this.options,b=y.animationLimit||250;for(var m of(super.drawPoints.apply(this,arguments),this.points)){let e=m.options,r=m.target,a=m.y,i,o=m.targetGraphic,s,l,n,p;if(d(r)&&null!==r){l=(n=h(y.targetOptions,e.targetOptions)).height;let t=m.shapeArgs;m.dlBox&&t&&!d(t.width)&&(t=m.dlBox),s=g(n.width,t.width),p=this.yAxis.translate(r,!1,!0,!1,!0)-n.height/2-.5,i=this.crispCol.apply({chart:u,borderWidth:n.borderWidth,options:{crisp:y.crisp}},[t.x+t.width/2-s/2,p,s,l]),o?(o[u.pointCount<b?"animate":"attr"](i),d(a)&&null!==a?o.element.point=m:o.element.point=void 0):m.targetGraphic=o=u.renderer.rect().attr(i).add(this.group),u.styledMode||o.attr({fill:c(n.color,e.color,this.zones.length&&(m.getZone.call({series:this,x:m.x,y:r,options:{}}).color||this.color)||void 0,m.color,this.color),stroke:c(n.borderColor,m.borderColor,this.options.borderColor),"stroke-width":n.borderWidth,r:n.borderRadius}),d(a)&&null!==a&&(o.element.point=m),o.addClass(m.getClassName()+" highcharts-bullet-target",!0)}else o&&(m.targetGraphic=o.destroy())}}getExtremes(t){let e=super.getExtremes.call(this,t),r=this.targetData;return r&&r.length&&(t=super.getExtremes.call(this,r),d(t.dataMin)&&(e.dataMin=Math.min(c(e.dataMin,1/0),t.dataMin)),d(t.dataMax)&&(e.dataMax=Math.max(c(e.dataMax,-1/0),t.dataMax))),e}}u.defaultOptions=h(i().defaultOptions,{targetOptions:{width:"140%",height:3,borderWidth:0,borderRadius:0},tooltip:{pointFormat:'<span style="color:{series.color}">‚óè</span> {series.name}: <b>{point.y}</b>. Target: <b>{point.target}</b><br/>'}}),n(u.prototype,{parallelArrays:["x","y","target"],pointArrayMap:["y","target"]}),u.prototype.pointClass=s,p().registerSeriesType("bullet",u);let y=a();export{y as default};