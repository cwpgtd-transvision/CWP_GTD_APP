import*as e from"../highcharts.js";var t={n:e=>{var o=e&&e.__esModule?()=>e.default:()=>e;return t.d(o,{a:o}),o},d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let o=e.default;var r=t.n(o);let i={Esri:class{constructor(){this.defaultCredits="Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS,  Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012",this.initialProjectionName="WebMercator",this.themes={WorldStreetMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},DeLorme:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/Specialty/DeLorme_World_Base_Map/MapServer/tile/{z}/{y}/{x}",minZoom:1,maxZoom:11,credits:"Tiles &copy; Esri &mdash; Copyright: &copy;2012 DeLorme"},WorldTopoMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20,credits:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community"},WorldImagery:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20,credits:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"},WorldTerrain:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:13,credits:"Tiles &copy; Esri &mdash; Source: USGS, Esri, TANA, DeLorme, and NPS"},WorldShadedRelief:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:13,credits:"Tiles &copy; Esri &mdash; Source: Esri"},WorldPhysical:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:8,credits:"Tiles &copy; Esri &mdash; Source: US National Park Service"},NatGeoWorldMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:16,credits:"Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC"},WorldGrayCanvas:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:16,credits:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ"}}}},LimaLabs:class{constructor(){this.defaultCredits='Map data &copy;2023 <a href="https://maps.lima-labs.com/">LimaLabs</a>',this.initialProjectionName="WebMercator",this.requiresApiKey=!0,this.themes={Standard:{url:"https://cdn.lima-labs.com/{zoom}/{x}/{y}.png?api={apikey}",minZoom:0,maxZoom:20}}}},OpenStreetMap:class{constructor(){this.defaultCredits='Map data &copy2023 <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',this.initialProjectionName="WebMercator",this.subdomains=["a","b","c"],this.themes={Standard:{url:"https://tile.openstreetmap.org/{zoom}/{x}/{y}.png",minZoom:0,maxZoom:19},Hot:{url:"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png",minZoom:0,maxZoom:19},OpenTopoMap:{url:"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",minZoom:0,maxZoom:17,credits:`Map data: &copy; <a href="https://www.openstreetmap.org/copyright">
                OpenStreetMap</a> contributors, <a href="https://viewfinderpanoramas.org">SRTM</a> 
                | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> 
                (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)`}}}},Stamen:class{constructor(){this.defaultCredits='&copy; Map tiles by <a href="https://stamen.com">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="https://openstreetmap.org">OpenStreetMap</a>, under <a href="https://www.openstreetmap.org/copyright">ODbL</a>',this.initialProjectionName="WebMercator",this.subdomains=["a","b","c","d"],this.themes={Toner:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},TonerBackground:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},TonerLite:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},Terrain:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png",minZoom:0,maxZoom:18},TerrainBackground:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png",minZoom:0,maxZoom:18},Watercolor:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png",minZoom:1,maxZoom:16,credits:'&copy Map tiles by <a href="https://stamen.com">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="https://openstreetmap.org">OpenStreetMap</a>, under <a href="https://creativecommons.org/licenses/by-sa/3.0">CC BY SA</a>'}}}},Thunderforest:class{constructor(){this.defaultCredits='Maps &copy <a href="https://www.thunderforest.com">Thunderforest</a>, Data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>',this.initialProjectionName="WebMercator",this.requiresApiKey=!0,this.subdomains=["a","b","c"],this.themes={OpenCycleMap:{url:"https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Transport:{url:"https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},TransportDark:{url:"https://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},SpinalMap:{url:"https://{s}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Landscape:{url:"https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Outdoors:{url:"https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Pioneer:{url:"https://{s}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},MobileAtlas:{url:"https://{s}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Neighbourhood:{url:"https://{s}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22}}}},USGS:class{constructor(){this.defaultCredits='Tiles courtesy of the <a href="https://usgs.gov/">U.S. GeologicalSurvey</a>',this.initialProjectionName="WebMercator",this.themes={USTopo:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},USImagery:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryOnly/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},USImageryTopo:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryTopo/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20}}}}},a=e.default.SeriesRegistry;var s=t.n(a);let n=r()["composed"],l=s().seriesTypes["map"],{addEvent:p,defined:m,error:h,merge:c,pick:d,pushUnique:y}=r();function u(t){let{geoBounds:o,chart:e}=t,r=(e.options.series||[]).filter(e=>"tiledwebmap"===e.type)[0];if(r&&r.provider&&r.provider.type&&!r.provider.url){let e=i[r.provider.type];var a,s,n,p;if(m(e))return t=(new e)["initialProjectionName"],o?({x1:a,y1:s,x2:n,y2:p}=o,this.recommendedMapView={projection:{name:t,parallels:[s,p],rotation:[-(a+n)/2]}}):this.recommendedMapView={projection:{name:t},minZoom:0},!1;h("Highcharts warning: Tiles Provider not defined in the Provider Registry.",!1)}return!0}class g extends l{constructor(){super(...arguments),this.redrawTiles=!1,this.isAnimating=!1}static compose(e){y(n,"TiledWebMapSeries")&&p(e,"onRecommendMapView",u)}lonLatToTile(e,t){var{lon:e,lat:o}=e;return{x:Math.floor((e+180)/360*Math.pow(2,t)),y:Math.floor((1-Math.log(Math.tan(o*Math.PI/180)+1/Math.cos(o*Math.PI/180))/Math.PI)/2*Math.pow(2,t))}}tileToLonLat(e,t,o){e=e/Math.pow(2,o)*360-180,t=Math.PI-2*Math.PI*t/Math.pow(2,o);return{lon:e,lat:180/Math.PI*Math.atan(.5*(Math.exp(t)-Math.exp(-t)))}}drawPoints(){let T=this.chart,S=T.mapView;if(S){let y=this.tiles=this.tiles||{},p=this.transformGroups=this.transformGroups||[],u=this,l=this.options.provider,e=S["zoom"],g=d(S.projection.options.rotation&&S.projection.options.rotation[0],0),f=200*!T.renderer.forExport,x=r=>{for(let o of Object.keys(y))parseFloat(o)===(S.zoom<0?0:Math.floor(S.zoom))||u.minZoom&&(S.zoom<0?0:Math.floor(S.zoom))<u.minZoom&&parseFloat(o)===u.minZoom||u.maxZoom&&(S.zoom<0?0:Math.floor(S.zoom))>u.maxZoom&&parseFloat(o)===u.maxZoom?Object.keys(y[o].tiles).forEach((e,t)=>{y[o].tiles[e].animate({opacity:1},{duration:r},()=>{t===Object.keys(y[o].tiles).length-1&&(y[o].isActive=!0)})}):Object.keys(y[o].tiles).forEach((e,t)=>{y[o].tiles[e].animate({opacity:0},{duration:r,defer:r/2},()=>{y[o].tiles[e].destroy(),delete y[o].tiles[e],t===Object.keys(y[o].tiles).length-1&&(y[o].isActive=!1,y[o].loaded=!1)})})},M=e<0?0:Math.floor(e),c=Math.pow(2,M),t=.638436911716859*Math.pow(2,e)/(.638436911716859*Math.pow(2,M)),v=256*t;if(l&&(l.type||l.url)){if(l.type&&!l.url){let e=i[l.type];if(!m(e))return void h("Highcharts warning: Tiles Provider '"+l.type+"' not defined in the ProviderRegistry.",!1);let t=new e,o=t.initialProjectionName,r,a="";l.theme&&m(t.themes[l.theme])?r=t.themes[l.theme]:(s=Object.keys(t.themes)[0],r=t.themes[s],h("Highcharts warning: The Tiles Provider's Theme '"+l.theme+"' is not defined in the Provider definition - falling back to '"+s+"'.",!1)),l.subdomain&&t.subdomains&&-1!==t.subdomains.indexOf(l.subdomain)?a=l.subdomain:m(t.subdomains)&&-1!==r.url.indexOf("{s}")&&(a=d(t.subdomains&&t.subdomains[0],""),h("Highcharts warning: The Tiles Provider's Subdomain '"+l.subdomain+"' is not defined in the Provider definition - falling back to '"+a+"'.",!1)),t.requiresApiKey&&(l.apiKey?r.url=r.url.replace("{apikey}",l.apiKey):(h("Highcharts warning: The Tiles Provider requires API Key to use tiles, use provider.apiKey to provide a token.",!1),r.url=r.url.replace("?apikey={apikey}",""))),l.url=r.url.replace("{s}",a),this.minZoom=r.minZoom,this.maxZoom=r.maxZoom;var s=d(T.userOptions.credits&&T.userOptions.credits.text,"Highcharts.com "+d(r.credits,t.defaultCredits));T.credits?T.credits.update({text:s}):T.addCredits({text:s,style:d(T.options.credits?.style,{})}),S.projection.options.name!==o&&h("Highcharts warning: The set projection is different than supported by Tiles Provider.",!1)}else S.projection.options.name||h("Highcharts warning: The set projection is different than supported by Tiles Provider.",!1);if(m(this.minZoom)&&M<this.minZoom?(c=Math.pow(2,M=this.minZoom),v=256*(t=.638436911716859*Math.pow(2,e)/(.638436911716859*Math.pow(2,M)))):m(this.maxZoom)&&M>this.maxZoom&&(c=Math.pow(2,M=this.maxZoom),v=256*(t=.638436911716859*Math.pow(2,e)/(.638436911716859*Math.pow(2,M)))),S.projection&&S.projection.def){S.projection.hasCoordinates=!0,p[M]||(p[M]=T.renderer.g().add(this.group));let n=(e,t,o,r)=>e.replace("{x}",t.toString()).replace("{y}",o.toString()).replace("{zoom}",r.toString()).replace("{z}",r.toString()),e=S.pixelsToProjectedUnits({x:0,y:0}),t=S.projection.def.inverse([e.x,e.y]),o={lon:t[0]-g,lat:t[1]},r=S.pixelsToProjectedUnits({x:T.plotWidth,y:T.plotHeight}),i=S.projection.def.inverse([r.x,r.y]),a={lon:i[0]-g,lat:i[1]};(o.lat>S.projection.maxLatitude||a.lat<-1*S.projection.maxLatitude)&&(o.lat=S.projection.maxLatitude,a.lat=-1*S.projection.maxLatitude);var Z=this.lonLatToTile(o,M),b=this.lonLatToTile(a,M),s=this.tileToLonLat(Z.x,Z.y,M),s=S.projection.def.forward([s.lon+g,s.lat]),s=S.projectedUnitsToPixels({x:s[0],y:s[1]}),w=Z.x*v-s.x,P=Z.y*v-s.y;y[""+M]||(y[""+M]={tiles:{},isActive:!1,howManyTiles:0,actualTilesCount:0,loaded:!1}),y[""+M].howManyTiles=(b.x-Z.x+1)*(b.y-Z.y+1),y[""+M].actualTilesCount=0;for(let t=Z.x;t<=b.x;t++)for(let e=Z.y;e<=b.y;e++)((e,t,o,r,i)=>{var a=e%c,s=t%c,a=a<0?a+c:a,s=s<0?s+c:s;!y[""+o].tiles[e+","+t]&&l.url&&(a=n(l.url,a,s,o),y[o].loaded=!1,y[""+o].tiles[e+","+t]=T.renderer.image(a,e*v-r,t*v-i,v,v).attr({zIndex:2,opacity:0}).on("load",function(){l.onload&&l.onload.apply(this),o!==(S.zoom<0?0:Math.floor(S.zoom))&&o!==u.minZoom||(y[""+o].actualTilesCount++,y[""+o].howManyTiles===y[""+o].actualTilesCount&&(y[o].loaded=!0,u.isAnimating?u.redrawTiles=!0:(u.redrawTiles=!1,x(f)),y[""+o].actualTilesCount=0))}).add(p[o]),y[""+o].tiles[e+","+t].posX=e,y[""+o].tiles[e+","+t].posY=t,y[""+o].tiles[e+","+t].originalURL=a)})(t,e,M,w,P)}for(let d of Object.keys(y))for(let c of Object.keys(y[d].tiles))if(S.projection&&S.projection.def){let p=.638436911716859*Math.pow(2,e)/(.638436911716859*Math.pow(2,parseFloat(d)))*256,r=y[d].tiles[Object.keys(y[d].tiles)[0]],{posX:l,posY:h}=y[d].tiles[c];if(m(l)&&m(h)&&m(r.posX)&&m(r.posY)){let e=this.tileToLonLat(r.posX,r.posY,parseFloat(d)),t=S.projection.def.forward([e.lon+g,e.lat]),o=S.projectedUnitsToPixels({x:t[0],y:t[1]}),s=r.posX*p-o.x,n=r.posY*p-o.y;if(T.renderer.globalAnimation&&T.hasRendered){let o=Number(y[d].tiles[c].attr("x")),r=Number(y[d].tiles[c].attr("y")),i=Number(y[d].tiles[c].attr("width")),a=Number(y[d].tiles[c].attr("height")),e=(e,t)=>{y[d].tiles[c].attr({x:o+(l*p-s-o)*t.pos,y:r+(h*p-n-r)*t.pos,width:i+(Math.ceil(p)+1-i)*t.pos,height:a+(Math.ceil(p)+1-a)*t.pos})};u.isAnimating=!0,y[d].tiles[c].attr({animator:0}).animate({animator:1},{step:e},function(){u.isAnimating=!1,u.redrawTiles&&(u.redrawTiles=!1,x(f))})}else(u.redrawTiles||parseFloat(d)!==M||(y[d].isActive||parseFloat(d)===M)&&Object.keys(y[d].tiles).map(e=>y[d].tiles[e]).some(e=>0===e.opacity))&&(u.redrawTiles=!1,x(f)),y[d].tiles[c].attr({x:l*p-s,y:h*p-n,width:Math.ceil(p)+1,height:Math.ceil(p)+1})}}}else h("Highcharts warning: Tiles Provider not defined in the Provider Registry.",!1)}}update(){let e=this["transformGroups"],t=this.chart,o=t.mapView,r=arguments[0],a=r["provider"];if(e&&(e.forEach(e=>{0!==Object.keys(e).length&&e.destroy()}),this.transformGroups=[]),o&&!m(t.userOptions.mapView?.projection)&&a&&a.type){let e=i[a.type];var s;e&&(s=(new e)["initialProjectionName"],o.update({projection:{name:s}}))}super.update.apply(this,arguments)}}g.defaultOptions=c(l.defaultOptions,{states:{inactive:{enabled:!1}}}),s().registerSeriesType("tiledwebmap",g);let f=r(),x=(f.TilesProviderRegistry=f.TilesProviderRegistry||i,g.compose(f.MapView),r());export{x as default};