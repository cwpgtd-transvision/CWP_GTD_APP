import*as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from"../highcharts.src.js";var __webpack_require__={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},d:(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const external_highcharts_src_js_default_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default;var external_highcharts_src_js_default_default=__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);const lang={mainBreadcrumb:"Main"},options={buttonTheme:{fill:"none",height:18,padding:2,"stroke-width":0,zIndex:7,states:{select:{fill:"none"}},style:{color:"#334eff"}},buttonSpacing:5,floating:!1,format:void 0,relativeTo:"plotBox",rtl:!1,position:{align:"left",verticalAlign:"top",x:0,y:void 0},separator:{text:"/",style:{color:"#666666",fontSize:"0.8em"}},showFullPath:!0,style:{},useHTML:!1,zIndex:7},BreadcrumbsDefaults={lang:lang,options:options},Breadcrumbs_BreadcrumbsDefaults=BreadcrumbsDefaults,external_highcharts_src_js_default_Templating_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.Templating;var external_highcharts_src_js_default_Templating_default=__webpack_require__.n(external_highcharts_src_js_default_Templating_namespaceObject);const format=external_highcharts_src_js_default_Templating_default()["format"],composed=external_highcharts_src_js_default_default()["composed"],{addEvent,defined,extend,fireEvent,isString,merge,objectEach,pick,pushUnique}=external_highcharts_src_js_default_default();function onChartAfterShowResetZoom(){var e,t,r=this;r.breadcrumbs&&(e=r.resetZoomButton&&r.resetZoomButton.getBBox(),t=r.breadcrumbs.options,e&&"right"===t.position.align&&"plotBox"===t.relativeTo&&r.breadcrumbs.alignBreadcrumbsGroup(-e.width-t.buttonSpacing))}function onChartDestroy(){this.breadcrumbs&&(this.breadcrumbs.destroy(),this.breadcrumbs=void 0)}function onChartGetMargins(){const e=this.breadcrumbs;var t,r;e&&!e.options.floating&&e.level&&(t=((t=(r=e.options).buttonTheme).height||0)+2*(t.padding||0)+r.buttonSpacing,"bottom"===(r=r.position.verticalAlign)?(this.marginBottom=(this.marginBottom||0)+t,e.yOffset=t):"middle"!==r?(this.plotTop+=t,e.yOffset=-t):e.yOffset=void 0)}function onChartRedraw(){this.breadcrumbs&&this.breadcrumbs.redraw()}function onChartSelection(e){!0===e.resetSelection&&this.breadcrumbs&&this.breadcrumbs.alignBreadcrumbsGroup()}class Breadcrumbs{static compose(e,t){pushUnique(composed,"Breadcrumbs")&&(addEvent(e,"destroy",onChartDestroy),addEvent(e,"afterShowResetZoom",onChartAfterShowResetZoom),addEvent(e,"getMargins",onChartGetMargins),addEvent(e,"redraw",onChartRedraw),addEvent(e,"selection",onChartSelection),extend(t.lang,Breadcrumbs_BreadcrumbsDefaults.lang))}constructor(e,t){this.elementList={},this.isDirty=!0,this.level=0,this.list=[];t=merge(e.options.drilldown&&e.options.drilldown.drillUpButton,Breadcrumbs.defaultOptions,e.options.navigation&&e.options.navigation.breadcrumbs,t);this.chart=e,this.options=t||{}}updateProperties(e){this.setList(e),this.setLevel(),this.isDirty=!0}setList(e){this.list=e}setLevel(){this.level=this.list.length&&this.list.length-1}getLevel(){return this.level}getButtonText(e){const t=this.chart,r=this.options,i=t.options.lang,s=pick(r.format,r.showFullPath?"{level.name}":"← {level.name}"),o=i&&pick(i.drillUpText,i.mainBreadcrumb);let a=r.formatter&&r.formatter(e)||format(s,{level:e.levelOptions},t)||"";return a=(isString(a)&&!a.length||"← "===a)&&defined(o)?r.showFullPath?o:"← "+o:a}redraw(){this.isDirty&&this.render(),this.group&&this.group.align(),this.isDirty=!1}render(){const e=this,t=e.chart,r=e.options;!e.group&&r&&(e.group=t.renderer.g("breadcrumbs-group").addClass("highcharts-no-tooltip highcharts-breadcrumbs").attr({zIndex:r.zIndex}).add()),r.showFullPath?this.renderFullPathButtons():this.renderSingleButton(),this.alignBreadcrumbsGroup()}renderFullPathButtons(){this.destroySingleButton(),this.resetElementListState(),this.updateListElements(),this.destroyListElements()}renderSingleButton(){const e=this,t=e.chart,r=e.list,i=e.options,s=i.buttonSpacing;this.destroyListElements();var o=e.group?e.group.getBBox().width:s,a=r[r.length-2];!t.drillUpButton&&0<this.level?t.drillUpButton=e.renderButton(a,o,s):t.drillUpButton&&(0<this.level?this.updateSingleButton():this.destroySingleButton())}alignBreadcrumbsGroup(e){var t=this;if(t.group){const r=t.options,i=r.buttonTheme,s=r.position,o="chart"===r.relativeTo||"spacingBox"===r.relativeTo?void 0:"plotBox",a=t.group.getBBox(),n=2*(i.padding||0)+r.buttonSpacing,l=(s.width=a.width+n,s.height=a.height+n,merge(s));e&&(l.x+=e),t.options.rtl&&(l.x+=s.width),l.y=pick(l.y,this.yOffset,0),t.group.align(l,!0,o)}}renderButton(i,e,t){const s=this,r=this.chart,o=s.options,a=merge(o.buttonTheme),n=r.renderer.button(s.getButtonText(i),e,t,function(e){const t=o.events&&o.events.click;let r;!1!==(r=t?t.call(s,e,i):r)&&(o.showFullPath?e.newLevel=i.level:e.newLevel=s.level-1,fireEvent(s,"up",e))},a).addClass("highcharts-breadcrumbs-button").add(s.group);return r.styledMode||n.attr(o.style),n}renderSeparator(e,t){const r=this.chart,i=this.options,s=i.separator,o=r.renderer.label(s.text,e,t,void 0,void 0,void 0,!1).addClass("highcharts-breadcrumbs-separator").add(this.group);return r.styledMode||o.css(s.style),o}update(e){merge(!0,this.options,e),this.destroy(),this.isDirty=!0}updateSingleButton(){const e=this.chart,t=this.list[this.level-1];e.drillUpButton&&e.drillUpButton.attr({text:this.getButtonText(t)})}destroy(){this.destroySingleButton(),this.destroyListElements(!0),this.group&&this.group.destroy(),this.group=void 0}destroyListElements(r){const i=this.elementList;objectEach(i,(e,t)=>{!r&&i[t].updated||((e=i[t]).button&&e.button.destroy(),e.separator&&e.separator.destroy(),delete e.button,delete e.separator,delete i[t])}),r&&(this.elementList={})}destroySingleButton(){this.chart.drillUpButton&&(this.chart.drillUpButton.destroy(),this.chart.drillUpButton=void 0)}resetElementListState(){objectEach(this.elementList,e=>{e.updated=!1})}updateListElements(){function s(e,t){return c*e.getBBox().width+c*t}function o(e,t,r){e.translate(t-e.getBBox().width,r)}const a=this,n=a.elementList,l=a.options.buttonSpacing,d=l,h=a.list,p=a.options.rtl,c=p?-1:1;let u=a.group?s(a.group,l):l,_,m;for(let r=0,i=h.length;r<i;++r){var g=r===i-1;let e,t;m=h[r],n[m.level]?(_=n[m.level],e=_.button,_.separator||g?_.separator&&g&&(_.separator.destroy(),delete _.separator):(u+=c*l,_.separator=a.renderSeparator(u,d),p&&o(_.separator,u,d),u+=s(_.separator,l)),n[m.level].updated=!0):(e=a.renderButton(m,u,d),p&&o(e,u,d),u+=s(e,l),g||(t=a.renderSeparator(u,d),p&&o(t,u,d),u+=s(t,l)),n[m.level]={button:e,separator:t,updated:!0}),e&&e.setState(g?2:0)}}}Breadcrumbs.defaultOptions=Breadcrumbs_BreadcrumbsDefaults.options;const Breadcrumbs_Breadcrumbs=Breadcrumbs,external_highcharts_src_js_default_Color_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.Color;var external_highcharts_src_js_default_Color_default=__webpack_require__.n(external_highcharts_src_js_default_Color_namespaceObject);const external_highcharts_src_js_default_SeriesRegistry_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.SeriesRegistry;var external_highcharts_src_js_default_SeriesRegistry_default=__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);const external_highcharts_src_js_default_SVGElement_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.SVGElement;var ColorMapComposition,external_highcharts_src_js_default_SVGElement_default=__webpack_require__.n(external_highcharts_src_js_default_SVGElement_namespaceObject);const{prototype:columnProto}=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["column"],{addEvent:ColorMapComposition_addEvent,defined:ColorMapComposition_defined}=external_highcharts_src_js_default_default(),Series_ColorMapComposition=(!function(e){function r(e){const t=this,r=t.series,i=r.chart.renderer;t.moveToTopOnHover&&t.graphic&&(r.stateMarkerGraphic||(r.stateMarkerGraphic=new(external_highcharts_src_js_default_SVGElement_default())(i,"use").css({pointerEvents:"none"}).add(t.graphic.parentGroup)),"hover"===e?.state?(t.graphic.attr({id:this.id}),r.stateMarkerGraphic.attr({href:i.url+"#"+this.id,visibility:"visible"})):r.stateMarkerGraphic.attr({href:""}))}e.pointMembers={dataLabelOnNull:!0,moveToTopOnHover:!0,isValid:function(){return null!==this.value&&this.value!==1/0&&this.value!==-1/0&&(void 0===this.value||!isNaN(this.value))}},e.seriesMembers={colorKey:"value",axisTypes:["xAxis","yAxis","colorAxis"],parallelArrays:["x","y","value"],pointArrayMap:["value"],trackerGroups:["group","markerGroup","dataLabelsGroup"],colorAttribs:function(e){const t={};!ColorMapComposition_defined(e.color)||e.state&&"normal"!==e.state||(t[this.colorProp||"fill"]=e.color);return t},pointAttribs:columnProto.pointAttribs},e.compose=function(e){var t=e.prototype.pointClass;return ColorMapComposition_addEvent(t,"afterSetState",r),e}}(ColorMapComposition=ColorMapComposition||{}),ColorMapComposition),external_highcharts_src_js_default_Series_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.Series;var TreemapUtilities,external_highcharts_src_js_default_Series_default=__webpack_require__.n(external_highcharts_src_js_default_Series_namespaceObject);class TreemapAlgorithmGroup{constructor(e,t,r,i){this.height=e,this.width=t,this.plot=i,this.direction=r,this.startDirection=r,this.total=0,this.nW=0,this.lW=0,this.nH=0,this.lH=0,this.elArr=[],this.lP={total:0,lH:0,nH:0,lW:0,nW:0,nR:0,lR:0,aspectRatio:function(e,t){return Math.max(e/t,t/e)}}}addElement(e){this.lP.total=this.elArr[this.elArr.length-1],this.total=this.total+e,0===this.direction?(this.lW=this.nW,this.lP.lH=this.lP.total/this.lW,this.lP.lR=this.lP.aspectRatio(this.lW,this.lP.lH),this.nW=this.total/this.height,this.lP.nH=this.lP.total/this.nW,this.lP.nR=this.lP.aspectRatio(this.nW,this.lP.nH)):(this.lH=this.nH,this.lP.lW=this.lP.total/this.lH,this.lP.lR=this.lP.aspectRatio(this.lP.lW,this.lH),this.nH=this.total/this.width,this.lP.nW=this.lP.total/this.nH,this.lP.nR=this.lP.aspectRatio(this.lP.nW,this.nH)),this.elArr.push(e)}reset(){this.nW=0,this.lW=0,this.elArr=[],this.total=0}}const Treemap_TreemapAlgorithmGroup=TreemapAlgorithmGroup;class TreemapNode{constructor(){this.childrenTotal=0,this.visible=!1}init(e,t,r,i,s,o,a){return this.id=e,this.i=t,this.children=r,this.height=i,this.level=s,this.series=o,this.parent=a,this}}const Treemap_TreemapNode=TreemapNode;function draw(e,t){const{animatableAttribs:r,onComplete:i,css:s,renderer:o}=t;var a=e.series&&e.series.chart.hasRendered?void 0:e.series&&e.series.options.animation;let n=e.graphic;if(t.attribs={...t.attribs,class:e.getClassName()},e.shouldDraw())n||(n="text"===t.shapeType?o.text():"image"===t.shapeType?o.image(t.imageUrl||"").attr(t.shapeArgs||{}):o[t.shapeType](t.shapeArgs||{}),(e.graphic=n).add(t.group)),s&&n.css(s),n.attr(t.attribs).animate(r,!t.isNew&&a,i);else if(n){const l=()=>{e.graphic=n=n&&n.destroy(),"function"==typeof i&&i()};Object.keys(r).length?n.animate(r,void 0,()=>l()):l()}}const DrawPointUtilities={draw:draw},Series_DrawPointUtilities=DrawPointUtilities,{pie:{prototype:{pointClass:PiePoint}},scatter:{prototype:{pointClass:ScatterPoint}}}=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes,{extend:TreemapPoint_extend,isNumber,pick:TreemapPoint_pick}=external_highcharts_src_js_default_default();class TreemapPoint extends ScatterPoint{constructor(){super(...arguments),this.groupedPointsAmount=0,this.shapeType="rect"}draw(e){Series_DrawPointUtilities.draw(this,e)}getClassName(){var e=this.series,t=e.options;let r=super.getClassName();return this.node.level<=e.nodeMap[e.rootNode].level&&this.node.children.length?r+=" highcharts-above-level":this.node.isGroup||this.node.isLeaf||e.nodeMap[e.rootNode].isGroup||TreemapPoint_pick(t.interactByLeaf,!t.allowTraversingTree)?this.node.isGroup||this.node.isLeaf||e.nodeMap[e.rootNode].isGroup||(r+=" highcharts-internal-node"):r+=" highcharts-internal-node-interactive",r}isValid(){return Boolean(this.id||isNumber(this.value))}setState(e){super.setState.apply(this,arguments),this.graphic&&this.graphic.attr({zIndex:"hover"===e?1:0})}shouldDraw(){return isNumber(this.plotY)&&null!==this.y}}TreemapPoint_extend(TreemapPoint.prototype,{setVisible:PiePoint.prototype.setVisible});const Treemap_TreemapPoint=TreemapPoint,TreemapSeriesDefaults_isString=external_highcharts_src_js_default_default()["isString"],TreemapSeriesDefaults={allowTraversingTree:!1,animationLimit:250,borderRadius:0,showInLegend:!1,marker:void 0,colorByPoint:!1,dataLabels:{enabled:!0,formatter:function(){var e=this&&this.point?this.point:{};return TreemapSeriesDefaults_isString(e.name)?e.name:""},headers:!1,inside:!0,padding:2,verticalAlign:"middle",style:{textOverflow:"ellipsis"}},tooltip:{headerFormat:"",pointFormat:"<b>{point.name}</b>: {point.value}<br/>",clusterFormat:"+ {point.groupedPointsAmount} more...<br/>"},ignoreHiddenPoint:!0,layoutAlgorithm:"sliceAndDice",layoutStartingDirection:"vertical",alternateStartingDirection:!1,levelIsConstant:!0,traverseUpButton:{position:{align:"right",x:-10,y:10}},borderColor:"#e6e6e6",borderWidth:1,colorKey:"colorValue",opacity:.15,states:{hover:{borderColor:"#999999",brightness:external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes.heatmap?0:.1,halo:!1,opacity:.75,shadow:!1}},legendSymbol:"rectangle",traverseToLeaf:!1,cluster:{className:void 0,color:void 0,enabled:!1,pixelWidth:void 0,pixelHeight:void 0,name:void 0,reductionFactor:void 0,minimumClusterSize:5,layoutAlgorithm:{distance:0,gridSize:0,kmeansThreshold:0},marker:{lineWidth:0,radius:0}}},Treemap_TreemapSeriesDefaults=TreemapSeriesDefaults,Treemap_TreemapUtilities=((TreemapUtilities||(TreemapUtilities={})).recursive=function e(t,r,i){t=r.call(i||this,t);!1!==t&&e(t,r,i)},TreemapUtilities),{extend:TreeUtilities_extend,isArray,isNumber:TreeUtilities_isNumber,isObject,merge:TreeUtilities_merge,pick:TreeUtilities_pick,relativeLength}=external_highcharts_src_js_default_default();function getColor(e,t){const r=t.index,i=t.mapOptionsToLevel,s=t.parentColor,o=t.parentColorIndex,a=t.series,n=t.colors,l=t.siblings,d=a.points,h=a.chart.options.chart;let p,c,u,_,m,g;var v;return e&&(p=d[e.i],c=i[e.level]||{},p&&c.colorByPoint&&(_=p.index%(n?n.length:h.colorCount),u=n&&n[_]),a.chart.styledMode||(m=TreeUtilities_pick(p&&p.options.color,c&&c.color,u,s&&(e=s,(v=c&&c.colorVariation)&&"brightness"===v.key&&r&&l?external_highcharts_src_js_default_Color_default().parse(e).brighten(v.to*(r/l)).get():e),a.color)),g=TreeUtilities_pick(p&&p.options.colorIndex,c&&c.colorIndex,_,o,t.colorIndex)),{color:m,colorIndex:g}}function getLevelOptions(e){const t={};let o,r,i,a,s,n;if(isObject(e))for(a=TreeUtilities_isNumber(e.from)?e.from:1,n=e.levels,r={},o=isObject(e.defaults)?e.defaults:{},isArray(n)&&(r=n.reduce((e,t)=>{let r,i,s;return isObject(t)&&TreeUtilities_isNumber(t.level)&&(s=TreeUtilities_merge({},t),i=TreeUtilities_pick(s.levelIsConstant,o.levelIsConstant),delete s.levelIsConstant,delete s.level,r=t.level+(i?0:a-1),isObject(e[r])?TreeUtilities_merge(!0,e[r],s):e[r]=s),e},{})),s=TreeUtilities_isNumber(e.to)?e.to:1,i=0;i<=s;i++)t[i]=TreeUtilities_merge({},o,isObject(r[i])?r[i]:{});return t}function setTreeValues(i,s){const e=s.before,t=s.idRoot,r=s.mapIdToNode,o=r[t],a=!1!==s.levelIsConstant,n=s.points,l=n[i.i],d=l&&l.options||{},h=[];let p=0;i.levelDynamic=i.level-(a?0:o.level),i.name=TreeUtilities_pick(l&&l.name,""),i.visible=t===i.id||!0===s.visible,(i="function"==typeof e?e(i,s):i).children.forEach((e,t)=>{var r=TreeUtilities_extend({},s);TreeUtilities_extend(r,{index:t,siblings:i.children.length,visible:i.visible}),e=setTreeValues(e,r),h.push(e),e.visible&&(p+=e.val)});var c=TreeUtilities_pick(d.value,p);return i.visible=0<=c&&(0<p||i.visible),i.children=h,i.childrenTotal=p,i.isLeaf=i.visible&&!p,i.val=c,i}function updateRootId(e){let t,r;return isObject(e)&&(r=isObject(e.options)?e.options:{},t=TreeUtilities_pick(e.rootNode,r.rootId,""),isObject(e.userOptions)&&(e.userOptions.rootId=t),e.rootNode=t),t}function getNodeWidth(e,t){var{chart:e,options:r}=e,{nodeDistance:r=0,nodeWidth:i=0}=r,{plotSizeX:e=1}=e;if("auto"!==i)return relativeLength(i,e);if("string"==typeof r&&/%$/.test(r))return e/(t+parseFloat(r)/100*(t-1));i=Number(r);return(e+i)/(t||1)-i}const TreeUtilities={getColor:getColor,getLevelOptions:getLevelOptions,getNodeWidth:getNodeWidth,setTreeValues:setTreeValues,updateRootId:updateRootId},Series_TreeUtilities=TreeUtilities,color=external_highcharts_src_js_default_Color_default()["parse"],{composed:TreemapSeries_composed,noop}=external_highcharts_src_js_default_default(),{column:ColumnSeries,scatter:ScatterSeries}=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes,{getColor:TreemapSeries_getColor,getLevelOptions:TreemapSeries_getLevelOptions,updateRootId:TreemapSeries_updateRootId}=Series_TreeUtilities,{addEvent:TreemapSeries_addEvent,arrayMax,clamp,correctFloat,crisp,defined:TreemapSeries_defined,error,extend:TreemapSeries_extend,fireEvent:TreemapSeries_fireEvent,isArray:TreemapSeries_isArray,isNumber:TreemapSeries_isNumber,isObject:TreemapSeries_isObject,isString:TreemapSeries_isString,merge:TreemapSeries_merge,pick:TreemapSeries_pick,pushUnique:TreemapSeries_pushUnique,splat,stableSort}=external_highcharts_src_js_default_default(),axisMax=(external_highcharts_src_js_default_Series_default().keepProps.push("simulation","hadOutsideDataLabels"),100);let treemapAxisDefaultValues=!1;function onSeriesAfterBindAxes(){const e=this.xAxis,t=this.yAxis;var r;e&&t&&(this.is("treemap")?(r={endOnTick:!1,gridLineWidth:0,lineWidth:0,min:0,minPadding:0,max:axisMax,maxPadding:0,startOnTick:!1,title:void 0,tickPositions:[]},TreemapSeries_extend(t.options,r),TreemapSeries_extend(e.options,r),treemapAxisDefaultValues=!0):treemapAxisDefaultValues&&(t.setOptions(t.userOptions),e.setOptions(e.userOptions),treemapAxisDefaultValues=!1))}class TreemapSeries extends ScatterSeries{constructor(){super(...arguments),this.simulation=0}static compose(e){TreemapSeries_pushUnique(TreemapSeries_composed,"TreemapSeries")&&TreemapSeries_addEvent(e,"afterBindAxes",onSeriesAfterBindAxes)}algorithmCalcPoints(e,t,r,i){const s=r.plot,o=r.elArr.length-1;let a,n,l,d,h=r.lW,p=r.lH,c,u=0;t?(h=r.nW,p=r.nH):c=r.elArr[o];for(const _ of r.elArr)(t||u<o)&&(0===r.direction?(a=s.x,n=s.y,l=h,d=_/l):(a=s.x,n=s.y,d=p,l=_/d),i.push({x:a,y:n,width:l,height:correctFloat(d)}),0===r.direction?s.y=s.y+d:s.x=s.x+l),u+=1;r.reset(),0===r.direction?r.width=r.width-h:r.height=r.height-p,s.y=s.parent.y+(s.parent.height-r.height),s.x=s.parent.x+(s.parent.width-r.width),e&&(r.direction=1-r.direction),t||r.addElement(c)}algorithmFill(e,t,r){const i=[];let s,o=t.direction,a=t.x,n=t.y,l=t.width,d=t.height,h,p,c,u;for(const _ of r)s=t.width*t.height*(_.val/t.val),h=a,p=n,0===o?(u=d,c=s/u,l-=c,a+=c):(c=l,u=s/c,d-=u,n+=u),i.push({x:h,y:p,width:c,height:u,direction:0,val:0}),e&&(o=1-o);return i}algorithmLowAspectRatio(e,t,r){const i=[],s={x:t.x,y:t.y,parent:t},o=t.direction,a=r.length-1,n=new Treemap_TreemapAlgorithmGroup(t.height,t.width,o,s);let l,d=0;for(const h of r)l=t.width*t.height*(h.val/t.val),n.addElement(l),n.lP.nR>n.lP.lR&&this.algorithmCalcPoints(e,!1,n,i,s),d===a&&this.algorithmCalcPoints(e,!0,n,i,s),++d;return i}alignDataLabel(e,t,r){ColumnSeries.prototype.alignDataLabel.apply(this,arguments),e.dataLabel&&e.dataLabel.attr({zIndex:(e.node.zIndex||0)+1})}applyTreeGrouping(){const l=this,d=l.parentList||{},h=l.options["cluster"],e=h?.minimumClusterSize||5;if(h?.enabled){const n={},p=e=>{var t,r,i,s,o,a;e?.point?.shapeArgs&&({width:t=0,height:r=0}=e.point.shapeArgs,i=t*r,{pixelWidth:s=0,pixelHeight:o=0}=h,a=TreemapSeries_defined(o),(t<s||r<(a?o:s)||i<(o?s*o:s*s))&&!e.isGroup&&TreemapSeries_defined(e.parent)&&(n[e.parent]||(n[e.parent]=[]),n[e.parent].push(e))),e?.children.forEach(e=>{p(e)})};p(l.tree);for(const c in n)n[c]&&n[c].length>e&&n[c].forEach(t=>{var r=d[c].indexOf(t.i);if(-1!==r){d[c].splice(r,1);const o="highcharts-grouped-treemap-points-"+(t.parent||"root");let e=l.points.find(e=>e.id===o);if(!e){const a=l.pointClass,n=l.points.length;e=new a(l,{className:h.className,color:h.color,id:o,index:n,isGroup:!0,value:0}),TreemapSeries_extend(e,{formatPrefix:"cluster"}),l.points.push(e),d[c].push(n),d[o]=[]}var r=e.groupedPointsAmount+1,i=l.points[e.index].options.value||0,s=h.name||"+ "+r;l.points[e.index].groupedPointsAmount=r,l.points[e.index].options.value=i+(t.point.value||0),l.points[e.index].name=s,d[o].push(t.point.index)}});l.nodeMap={},l.nodeList=[],l.parentList=d;var t=l.buildTree("",-1,0,l.parentList);l.translate(t)}}calculateChildrenAreas(a,n){var s=this,o=s.options,l=s.mapOptionsToLevel[a.level+1],d=TreemapSeries_pick(l?.layoutAlgorithm&&s[l?.layoutAlgorithm]&&l.layoutAlgorithm,o.layoutAlgorithm),h=o.alternateStartingDirection,p=a.children.filter(e=>a.isGroup||!e.ignore),c=l?.groupPadding??o.groupPadding??0,u=s.nodeMap[s.rootNode];if(d){let e,t=u.pointValues?.width||0,r=u.pointValues?.height||0,i=(l?.layoutStartingDirection&&(n.direction="vertical"===l.layoutStartingDirection?0:1),e=s[d](n,p),-1);for(const b of p){var _,m=e[++i],g=(b===u&&(t=t||m.width,r=m.height),c/(s.xAxis.len/r)),v=c/(s.yAxis.len/r);b.values=TreemapSeries_merge(m,{val:b.childrenTotal,direction:h?1-n.direction:n.direction}),b.children.length&&b.point.dataLabels?.length&&((_=arrayMax(b.point.dataLabels.map(e=>e.options?.headers&&e.height||0))/(s.yAxis.len/r))<b.values.height/2&&(b.values.y+=_,b.values.height-=_)),c&&(_=Math.min(g,b.values.width/4),g=Math.min(v,b.values.height/4),b.values.x+=_,b.values.width-=2*_,b.values.y+=g,b.values.height-=2*g),b.pointValues=TreemapSeries_merge(m,{x:m.x/s.axisRatio,y:axisMax-m.y-m.height,width:m.width/s.axisRatio}),b.children.length&&s.calculateChildrenAreas(b,b.values)}const f=(e,t=[],r=!0)=>(e.children.forEach(e=>{(r&&e.isLeaf||!r&&!e.isLeaf)&&t.push(e.point),e.children.length&&f(e,t,r)}),t);if("leaf"===o.nodeSizeBy&&a===u&&this.hasOutsideDataLabels&&!f(u,void 0,!1).some(e=>TreemapSeries_isNumber(e.options.value))&&!TreemapSeries_isNumber(u.point?.options.value)){const T=f(u),x=T.map(e=>e.options.value||0),S=T.map(({node:{pointValues:e}})=>e?e.width*e.height:0),y=x.reduce((e,t)=>e+t,0),w=S.reduce((e,t)=>e+t,0),L=w/y;let s=0,o=0;T.forEach((e,t)=>{var r=x[t]?S[t]/x[t]:1,r=clamp(r/L,.8,1.4);let i=1-r;e.value&&(S[t]<20&&(i*=S[t]/20),i>o&&(o=i),i<s&&(s=i),e.simulatedValue=(e.simulatedValue||e.value)/r)}),(s<-.05||.05<o)&&this.simulation<10?(this.simulation++,this.setTreeValues(a),n.val=a.val,this.calculateChildrenAreas(a,n)):(T.forEach(e=>{delete e.simulatedValue}),this.setTreeValues(a),this.simulation=0)}}}createList(r){const i=this.chart,e=i.breadcrumbs,s=[];if(e){let e=0,t=(s.push({level:e,levelOptions:i.series[0]}),r.target.nodeMap[r.newRootId]);const o=[];for(;t.parent||""===t.parent;)o.push(t),t=r.target.nodeMap[t.parent];for(const a of o.reverse())s.push({level:++e,levelOptions:a});s.length<=1&&(s.length=0)}return s}drawDataLabels(){const e=this,t=e.mapOptionsToLevel,r=e.points.filter(function(e){return e.node.visible||TreemapSeries_defined(e.dataLabel)}),i=splat(e.options.dataLabels||{})[0]?.padding,s=r.some(e=>TreemapSeries_isNumber(e.plotY));for(const l of r){const d={},h={style:d},p=t[l.node.level];var o,a,n;(!l.node.isLeaf&&!l.node.isGroup||l.node.isGroup&&l.node.level<=e.nodeMap[e.rootNode].level)&&(h.enabled=!1),p?.dataLabels&&(TreemapSeries_merge(!0,h,splat(p.dataLabels)[0]),e.hasDataLabels=()=>!0),l.node.isLeaf?h.inside=!0:h.headers&&(h.verticalAlign="top"),l.shapeArgs&&s&&({height:o=0,width:a=0}=l.shapeArgs,32<a&&16<o&&l.shouldDraw()?(n=a-2*(h.padding||i||0),d.width=n+"px",d.lineClamp??(d.lineClamp=Math.floor(o/16)),d.visibility="inherit",h.headers&&l.dataLabel?.attr({width:n})):(d.width=a+"px",d.visibility="hidden")),l.dlOptions=TreemapSeries_merge(h,l.options.dataLabels)}super.drawDataLabels(r)}drawPoints(e=this.points){const t=this,r=t.chart,i=r.renderer,s=r.styledMode,o=t.options,a=s?{}:o.shadow,n=o.borderRadius,l=r.pointCount<o.animationLimit,d=o.allowTraversingTree;for(const h of e){const p=h.node.levelDynamic,c={},u={},_={},m="level-group-"+h.node.level,g=!!h.graphic,v=l&&g,f=h.shapeArgs;h.shouldDraw()&&(h.isInside=!0,n&&(u.r=n),TreemapSeries_merge(!0,v?c:u,g?f:{},s?{}:t.pointAttribs(h,h.selected?"select":void 0)),t.colorAttribs&&s&&TreemapSeries_extend(_,t.colorAttribs(h)),t[m]||(t[m]=i.g(m).attr({zIndex:1e3-(p||0)}).add(t.group),t[m].survive=!0)),h.draw({animatableAttribs:c,attribs:u,css:_,group:t[m],imageUrl:h.imageUrl,renderer:i,shadow:a,shapeArgs:f,shapeType:h.shapeType}),d&&h.graphic&&(h.drillId=o.interactByLeaf?t.drillToByLeaf(h):t.drillToByGroup(h))}}drillToByGroup(e){return!(e.node.isLeaf&&!e.node.isGroup)&&e.id}drillToByLeaf(e){var t=e.series.options["traverseToLeaf"];let r=!1,i;if(e.node.parent!==this.rootNode&&e.node.isLeaf)if(t)r=e.id;else for(i=e.node;!r;)(i=void 0!==i.parent?this.nodeMap[i.parent]:i).parent===this.rootNode&&(r=i.id);return r}drillToNode(e,t){error(32,!1,void 0,{"treemap.drillToNode":"use treemap.setRootNode"}),this.setRootNode(e,t)}drillUp(){var e=this.nodeMap[this.rootNode];e&&TreemapSeries_isString(e.parent)&&this.setRootNode(e.parent,!0,{trigger:"traverseUpButton"})}getExtremes(){var{dataMin:e,dataMax:t}=super.getExtremes(this.colorValueData);return this.valueMin=e,this.valueMax=t,super.getExtremes()}getListOfParents(e,t){const r=TreemapSeries_isArray(e)?e:[],i=TreemapSeries_isArray(t)?t:[],s=r.reduce(function(e,t,r){t=TreemapSeries_pick(t.parent,"");return void 0===e[t]&&(e[t]=[]),e[t].push(r),e},{"":[]});for(const a of Object.keys(s)){var o=s[a];if(""!==a&&-1===i.indexOf(a)){for(const n of o)s[""].push(n);delete s[a]}}return s}getTree(){var e=this,t=this.data.map(function(e){return e.id});return e.parentList=e.getListOfParents(this.data,t),e.nodeMap={},e.nodeList=[],e.buildTree("",-1,0,e.parentList||{})}buildTree(e,t,r,i,s){const o=this,a=[],n=o.points[t];let l=0,d;for(const p of i[e]||[])d=o.buildTree(o.points[p].id,p,r+1,i,e),l=Math.max(d.height+1,l),a.push(d);const h=(new o.NodeClass).init(e,t,a,l,r,o,s);for(const d of a)d.parentNode=h;return o.nodeMap[h.id]=h,o.nodeList.push(h),n&&((n.node=h).point=n),h}hasData(){return!!this.dataTable.rowCount}init(e,t){const r=this,i=TreemapSeries_merge(t.drillUpButton,t.breadcrumbs),s=TreemapSeries_addEvent(r,"setOptions",e=>{const t=e.userOptions,r=(TreemapSeries_defined(t.allowDrillToNode)&&!TreemapSeries_defined(t.allowTraversingTree)&&(t.allowTraversingTree=t.allowDrillToNode,delete t.allowDrillToNode),TreemapSeries_defined(t.drillUpButton)&&!TreemapSeries_defined(t.traverseUpButton)&&(t.traverseUpButton=t.drillUpButton,delete t.drillUpButton),splat(t.dataLabels||{}));t.levels?.forEach(e=>{r.push.apply(r,splat(e.dataLabels||{}))}),this.hasOutsideDataLabels=r.some(e=>e.headers)});super.init(e,t),delete r.opacity,r.eventsToUnbind.push(s),r.options.allowTraversingTree&&(r.eventsToUnbind.push(TreemapSeries_addEvent(r,"click",r.onClickDrillToNode)),r.eventsToUnbind.push(TreemapSeries_addEvent(r,"setRootNode",function(e){const t=r.chart;t.breadcrumbs&&t.breadcrumbs.updateProperties(r.createList(e))})),r.eventsToUnbind.push(TreemapSeries_addEvent(r,"update",function(e,t){const r=this.chart.breadcrumbs;r&&e.options.breadcrumbs&&r.update(e.options.breadcrumbs),this.hadOutsideDataLabels=this.hasOutsideDataLabels})),r.eventsToUnbind.push(TreemapSeries_addEvent(r,"destroy",function(e){const t=this.chart;t.breadcrumbs&&!e.keepEventsForUpdate&&(t.breadcrumbs.destroy(),t.breadcrumbs=void 0)}))),e.breadcrumbs||(e.breadcrumbs=new Breadcrumbs_Breadcrumbs(e,i)),r.eventsToUnbind.push(TreemapSeries_addEvent(e.breadcrumbs,"up",function(e){var t=this.level-e.newLevel;for(let e=0;e<t;e++)r.drillUp()}))}onClickDrillToNode(e){const t=e.point,r=t?.drillId;TreemapSeries_isString(r)&&(t.setState(""),this.setRootNode(r,!0,{trigger:"click"}))}pointAttribs(e,t){const r=TreemapSeries_isObject(this.mapOptionsToLevel)?this.mapOptionsToLevel:{},i=e&&r[e.node.level]||{},s=this.options,o=t&&s.states&&s.states[t]||{},a=e?.getClassName()||"",n={stroke:e&&e.borderColor||i.borderColor||o.borderColor||s.borderColor,"stroke-width":TreemapSeries_pick(e&&e.borderWidth,i.borderWidth,o.borderWidth,s.borderWidth),dashstyle:e?.borderDashStyle||i.borderDashStyle||o.borderDashStyle||s.borderDashStyle,fill:e?.color||this.color};return-1!==a.indexOf("highcharts-above-level")?(n.fill="none",n["stroke-width"]=0):-1!==a.indexOf("highcharts-internal-node-interactive")?(n["fill-opacity"]=o.opacity??s.opacity??1,n.cursor="pointer"):-1!==a.indexOf("highcharts-internal-node")?n.fill="none":t&&o.brightness&&(n.fill=color(n.fill).brighten(o.brightness).get()),n}setColorRecursive(t,r,i,s,o){var a=this,n=(a?.chart)?.options?.colors;if(t){const l=TreemapSeries_getColor(t,{colors:n,index:s,mapOptionsToLevel:a.mapOptionsToLevel,parentColor:r,parentColorIndex:i,series:a,siblings:o}),d=a.points[t.i];d&&(d.color=l.color,d.colorIndex=l.colorIndex);let e=-1;for(const h of t.children||[])a.setColorRecursive(h,l.color,l.colorIndex,++e,t.children.length)}}setPointValues(){const e=this,{points:t,xAxis:r,yAxis:i}=e,s=e.chart.styledMode;for(const _ of t){var o,a,n,l,d,h,p,{pointValues:c,visible:u}=_.node;c&&u?({height:u,width:c,x:h,y:o}=c,a=_,a=!s&&e.pointAttribs(a)["stroke-width"]||0,l=r.toPixels(h,!0),d=r.toPixels(h+c,!0),p=i.toPixels(o,!0),n=i.toPixels(o+u,!0),l=0===l?a/2:crisp(r.toPixels(h,!0),a,!0),d=d===r.len?r.len-a/2:crisp(r.toPixels(h+c,!0),a,!0),h=p===i.len?i.len-a/2:crisp(i.toPixels(o,!0),a,!0),c=0===n?a/2:crisp(i.toPixels(o+u,!0),a,!0),p={x:Math.min(l,d),y:Math.min(h,c),width:Math.abs(d-l),height:Math.abs(c-h)},_.plotX=p.x+p.width/2,_.plotY=p.y+p.height/2,_.shapeArgs=p):(delete _.plotX,delete _.plotY)}}setRootNode(e,t,r){e=TreemapSeries_extend({newRootId:e,previousRootId:this.rootNode,redraw:TreemapSeries_pick(t,!0),series:this},r);TreemapSeries_fireEvent(this,"setRootNode",e,function(e){const t=e.series;t.idPreviousRoot=e.previousRootId,t.rootNode=e.newRootId,t.isDirty=!0,e.redraw&&t.chart.redraw()})}setState(e){this.options.inactiveOtherPoints=!0,super.setState(e,!1),this.options.inactiveOtherPoints=!1}setTreeValues(e){const t=this,r=t.options,i=t.rootNode,s=t.nodeMap,o=s[i],a="boolean"!=typeof r.levelIsConstant||r.levelIsConstant,n=[],l=t.points[e.i];let d=0;for(var h of e.children)h=t.setTreeValues(h),n.push(h),h.ignore||(d+=h.val);stableSort(n,(e,t)=>(e.sortIndex||0)-(t.sortIndex||0));let p=TreemapSeries_pick(l?.simulatedValue,l?.options.value,d);return l&&(l.value=p),l?.isGroup&&r.cluster?.reductionFactor&&(p/=r.cluster.reductionFactor),e.parentNode?.point?.isGroup&&t.rootNode!==e.parent&&(e.visible=!1),TreemapSeries_extend(e,{children:n,childrenTotal:d,ignore:!(TreemapSeries_pick(l?.visible,!0)&&0<p),isLeaf:e.visible&&!d,isGroup:l?.isGroup,levelDynamic:e.level-(a?0:o.level),name:TreemapSeries_pick(l?.name,""),sortIndex:TreemapSeries_pick(l?.sortIndex,-p),val:p}),e}sliceAndDice(e,t){return this.algorithmFill(!0,e,t)}squarified(e,t){return this.algorithmLowAspectRatio(!0,e,t)}strip(e,t){return this.algorithmLowAspectRatio(!1,e,t)}stripes(e,t){return this.algorithmFill(!1,e,t)}translate(e){const i=this,t=i.options,r=!e;let s=TreemapSeries_updateRootId(i),o,a,n,l;e||s.startsWith("highcharts-grouped-treemap-points-")||((this.points||[]).forEach(e=>{e.isGroup&&e.destroy()}),super.translate(),e=i.getTree()),i.tree=e=e||i.tree,o=i.nodeMap[s],""===s||o||(i.setRootNode("",!1),s=i.rootNode,o=i.nodeMap[s]),o.point?.isGroup||(i.mapOptionsToLevel=TreemapSeries_getLevelOptions({from:o.level+1,levels:t.levels,to:e.height,defaults:{levelIsConstant:i.options.levelIsConstant,colorByPoint:t.colorByPoint}})),Treemap_TreemapUtilities.recursive(i.nodeMap[i.rootNode],e=>{var t=e.parent;let r=!1;return e.visible=!0,r=!t&&""!==t?r:i.nodeMap[t]}),Treemap_TreemapUtilities.recursive(i.nodeMap[i.rootNode].children,e=>{let t=!1;for(const r of e)r.visible=!0,r.children.length&&(t=(t||[]).concat(r.children));return t}),i.setTreeValues(e),i.axisRatio=i.xAxis.len/i.yAxis.len,i.nodeMap[""].pointValues=a={x:0,y:0,width:axisMax,height:axisMax},i.nodeMap[""].values=n=TreemapSeries_merge(a,{width:a.width*i.axisRatio,direction:"vertical"===t.layoutStartingDirection?0:1,val:e.val}),(this.hasOutsideDataLabels||this.hadOutsideDataLabels)&&this.drawDataLabels(),i.calculateChildrenAreas(e,n),i.colorAxis||t.colorByPoint||i.setColorRecursive(i.tree),t.allowTraversingTree&&o.pointValues&&(l=o.pointValues,i.xAxis.setExtremes(l.x,l.x+l.width,!1),i.yAxis.setExtremes(l.y,l.y+l.height,!1),i.xAxis.setScale(),i.yAxis.setScale()),i.setPointValues(),r&&i.applyTreeGrouping()}}TreemapSeries.defaultOptions=TreemapSeries_merge(ScatterSeries.defaultOptions,Treemap_TreemapSeriesDefaults),TreemapSeries_extend(TreemapSeries.prototype,{buildKDTree:noop,colorAttribs:Series_ColorMapComposition.seriesMembers.colorAttribs,colorKey:"colorValue",directTouch:!0,getExtremesFromAll:!0,getSymbol:noop,optionalAxis:"colorAxis",parallelArrays:["x","y","value","colorValue"],pointArrayMap:["value","colorValue"],pointClass:Treemap_TreemapPoint,NodeClass:Treemap_TreemapNode,trackerGroups:["group","dataLabelsGroup"],utils:Treemap_TreemapUtilities}),Series_ColorMapComposition.compose(TreemapSeries),external_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType("treemap",TreemapSeries);const Treemap_TreemapSeries=TreemapSeries,G=external_highcharts_src_js_default_default(),treemap_src=(G.Breadcrumbs=G.Breadcrumbs||Breadcrumbs_Breadcrumbs,G.Breadcrumbs.compose(G.Chart,G.defaultOptions),Treemap_TreemapSeries.compose(G.Series),external_highcharts_src_js_default_default());export{treemap_src as default};