import*as t from"../highcharts.js";var e={n:t=>{var i=t&&t.__esModule?()=>t.default:()=>t;return e.d(i,{a:i}),i},d:(t,i)=>{for(var a in i)e.o(i,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:i[a]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};let i=t.default;var a=e.n(i);let s=t.default.SeriesRegistry;var n=e.n(s);let r=n().seriesTypes["pie"],{arrayMax:l,arrayMin:o,clamp:h,extend:d,fireEvent:p,merge:c,pick:M}=a();class u extends r{calculateExtremes(){let t,e,i=this.chart,a=i.plotWidth,r=i.plotHeight,n=this.options,s=2*(n.slicedOffset||0),d=this.getColumn("z"),p=Math.min(a,r)-s,c={},u=this.center||this.getCenter();for(var g of["minPointSize","maxPointSize"]){var f=n[g],m=/%$/.test(f),f=parseInt(f,10);c[g]=m?p*f/100:2*f}this.minPxSize=u[3]+c.minPointSize,this.maxPxSize=h(u[2],u[3]+c.minPointSize,c.maxPointSize),d.length&&(t=M(n.zMin,o(d.filter(this.zValEval))),e=M(n.zMax,l(d.filter(this.zValEval))),this.getRadii(t,e,this.minPxSize,this.maxPxSize))}getRadii(e,i,a,r){let n,s,l,o=this.getColumn("z"),h=[],d="radius"!==this.options.sizeBy,p=i-e;for(let t=0;t<o.length;t++)l=(s=this.zValEval(o[t])?o[t]:e)<=e?a/2:i<=s?r/2:(n=0<p?(s-e)/p:.5,d&&(n=Math.sqrt(n)),Math.ceil(a+n*(r-a))/2),h.push(l);this.radii=h}redraw(){this.center=null,super.redraw()}getDataLabelPosition(t,e){var{center:i,options:a}=this,r=t.angle||0,n=this.radii[t.index],s=i[0]+Math.cos(r)*n,i=i[1]+Math.sin(r)*n,n=Math.min((a.slicedOffset||0)+(a.borderWidth||0),e/5);return{distance:e,natural:{x:s+Math.cos(r)*e,y:i+Math.sin(r)*e},computed:{},alignment:t.half?"right":"left",connectorPosition:{breakAt:{x:s+Math.cos(r)*n,y:i+Math.sin(r)*n},touchingSliceAt:{x:s,y:i}}}}translate(e){this.generatePoints();let t=this.options,i=t.slicedOffset,a=t.startAngle||0,r=Math.PI/180*(a-90),n=Math.PI/180*(M(t.endAngle,a+360)-90),s=n-r,l=this.points,o=t.ignoreHiddenPoint,h=0,d,c,u,g,f,m,z;this.startAngleRad=r,this.endAngleRad=n,this.calculateExtremes(),e||(this.center=e=this.getCenter());for(let t=0;t<l.length;t++)m=l[t],z=this.radii[t],d=r+h*s,o&&!m.visible||(h+=m.percentage/100),c=r+h*s,m.shapeType="arc",m.shapeArgs={x:e[0],y:e[1],r:z,innerR:e[3]/2,start:Math.round(1e3*d)/1e3,end:Math.round(1e3*c)/1e3},(u=(c+d)/2)>1.5*Math.PI?u-=2*Math.PI:u<-Math.PI/2&&(u+=2*Math.PI),m.slicedTranslation={translateX:Math.round(Math.cos(u)*i),translateY:Math.round(Math.sin(u)*i)},g=Math.cos(u)*e[2]/2,f=Math.sin(u)*e[2]/2,m.tooltipPos=[e[0]+.7*g,e[1]+.7*f],m.half=+(u<-Math.PI/2||u>Math.PI/2),m.angle=u;p(this,"afterTranslate")}zValEval(t){return!("number"!=typeof t||isNaN(t))||null}}u.defaultOptions=c(r.defaultOptions,{minPointSize:"10%",maxPointSize:"100%",zMin:void 0,zMax:void 0,sizeBy:"area",tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> {series.name}<br/>Value: {point.y}<br/>Size: {point.z}<br/>'}}),d(u.prototype,{pointArrayMap:["y","z"],parallelArrays:["x","y","z"]}),n().registerSeriesType("variablepie",u);let g=a();export{g as default};