import*as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from"../highcharts.src.js";var __webpack_require__={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},d:(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const external_highcharts_src_js_default_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default;var external_highcharts_src_js_default_default=__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);class OpenStreetMap{constructor(){this.defaultCredits='Map data &copy2023 <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',this.initialProjectionName="WebMercator",this.subdomains=["a","b","c"],this.themes={Standard:{url:"https://tile.openstreetmap.org/{zoom}/{x}/{y}.png",minZoom:0,maxZoom:19},Hot:{url:"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png",minZoom:0,maxZoom:19},OpenTopoMap:{url:"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",minZoom:0,maxZoom:17,credits:`Map data: &copy; <a href="https://www.openstreetmap.org/copyright">
                OpenStreetMap</a> contributors, <a href="https://viewfinderpanoramas.org">SRTM</a> 
                | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> 
                (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)`}}}}const TilesProviders_OpenStreetMap=OpenStreetMap;class Stamen{constructor(){this.defaultCredits='&copy; Map tiles by <a href="https://stamen.com">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="https://openstreetmap.org">OpenStreetMap</a>, under <a href="https://www.openstreetmap.org/copyright">ODbL</a>',this.initialProjectionName="WebMercator",this.subdomains=["a","b","c","d"],this.themes={Toner:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},TonerBackground:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},TonerLite:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}.png",minZoom:0,maxZoom:20},Terrain:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png",minZoom:0,maxZoom:18},TerrainBackground:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png",minZoom:0,maxZoom:18},Watercolor:{url:"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png",minZoom:1,maxZoom:16,credits:'&copy Map tiles by <a href="https://stamen.com">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="https://openstreetmap.org">OpenStreetMap</a>, under <a href="https://creativecommons.org/licenses/by-sa/3.0">CC BY SA</a>'}}}}const TilesProviders_Stamen=Stamen;class LimaLabs{constructor(){this.defaultCredits='Map data &copy;2023 <a href="https://maps.lima-labs.com/">LimaLabs</a>',this.initialProjectionName="WebMercator",this.requiresApiKey=!0,this.themes={Standard:{url:"https://cdn.lima-labs.com/{zoom}/{x}/{y}.png?api={apikey}",minZoom:0,maxZoom:20}}}}const TilesProviders_LimaLabs=LimaLabs;class Thunderforest{constructor(){this.defaultCredits='Maps &copy <a href="https://www.thunderforest.com">Thunderforest</a>, Data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>',this.initialProjectionName="WebMercator",this.requiresApiKey=!0,this.subdomains=["a","b","c"],this.themes={OpenCycleMap:{url:"https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Transport:{url:"https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},TransportDark:{url:"https://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},SpinalMap:{url:"https://{s}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Landscape:{url:"https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Outdoors:{url:"https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Pioneer:{url:"https://{s}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},MobileAtlas:{url:"https://{s}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22},Neighbourhood:{url:"https://{s}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey={apikey}",minZoom:0,maxZoom:22}}}}const TilesProviders_Thunderforest=Thunderforest;class Esri{constructor(){this.defaultCredits="Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS,  Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012",this.initialProjectionName="WebMercator",this.themes={WorldStreetMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},DeLorme:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/Specialty/DeLorme_World_Base_Map/MapServer/tile/{z}/{y}/{x}",minZoom:1,maxZoom:11,credits:"Tiles &copy; Esri &mdash; Copyright: &copy;2012 DeLorme"},WorldTopoMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20,credits:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community"},WorldImagery:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20,credits:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"},WorldTerrain:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:13,credits:"Tiles &copy; Esri &mdash; Source: USGS, Esri, TANA, DeLorme, and NPS"},WorldShadedRelief:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:13,credits:"Tiles &copy; Esri &mdash; Source: Esri"},WorldPhysical:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:8,credits:"Tiles &copy; Esri &mdash; Source: US National Park Service"},NatGeoWorldMap:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:16,credits:"Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC"},WorldGrayCanvas:{url:"https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:16,credits:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ"}}}}const TilesProviders_Esri=Esri;class USGS{constructor(){this.defaultCredits='Tiles courtesy of the <a href="https://usgs.gov/">U.S. GeologicalSurvey</a>',this.initialProjectionName="WebMercator",this.themes={USTopo:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},USImagery:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryOnly/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20},USImageryTopo:{url:"https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryTopo/MapServer/tile/{z}/{y}/{x}",minZoom:0,maxZoom:20}}}}const TilesProviders_USGS=USGS,tilesProviderRegistry={Esri:TilesProviders_Esri,LimaLabs:TilesProviders_LimaLabs,OpenStreetMap:TilesProviders_OpenStreetMap,Stamen:TilesProviders_Stamen,Thunderforest:TilesProviders_Thunderforest,USGS:TilesProviders_USGS},TilesProviderRegistry=tilesProviderRegistry,external_highcharts_src_js_default_SeriesRegistry_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.SeriesRegistry;var external_highcharts_src_js_default_SeriesRegistry_default=__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);const TiledWebMapSeriesDefaults={states:{inactive:{enabled:!1}}},TiledWebMap_TiledWebMapSeriesDefaults=TiledWebMapSeriesDefaults,composed=external_highcharts_src_js_default_default()["composed"],MapSeries=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["map"],{addEvent,defined,error,merge,pick,pushUnique}=external_highcharts_src_js_default_default();function onRecommendMapView(e){const{geoBounds:t,chart:r}=e,o=(r.options.series||[]).filter(e=>"tiledwebmap"===e.type)[0];if(o&&o.provider&&o.provider.type&&!o.provider.url){const p=TilesProviderRegistry[o.provider.type];var i,s,a,n;if(defined(p))return e=(new p)["initialProjectionName"],t?({x1:i,y1:s,x2:a,y2:n}=t,this.recommendedMapView={projection:{name:e,parallels:[s,n],rotation:[-(i+a)/2]}}):this.recommendedMapView={projection:{name:e},minZoom:0},!1;error("Highcharts warning: Tiles Provider not defined in the Provider Registry.",!1)}return!0}class TiledWebMapSeries extends MapSeries{constructor(){super(...arguments),this.redrawTiles=!1,this.isAnimating=!1}static compose(e){pushUnique(composed,"TiledWebMapSeries")&&addEvent(e,"onRecommendMapView",onRecommendMapView)}lonLatToTile(e,t){var{lon:e,lat:r}=e;return{x:Math.floor((e+180)/360*Math.pow(2,t)),y:Math.floor((1-Math.log(Math.tan(r*Math.PI/180)+1/Math.cos(r*Math.PI/180))/Math.PI)/2*Math.pow(2,t))}}tileToLonLat(e,t,r){e=e/Math.pow(2,r)*360-180,t=Math.PI-2*Math.PI*t/Math.pow(2,r);return{lon:e,lat:180/Math.PI*Math.atan(.5*(Math.exp(t)-Math.exp(-t)))}}drawPoints(){const l=this.chart,m=l.mapView;if(m){const c=this.tiles=this.tiles||{},d=this.transformGroups=this.transformGroups||[],h=this,D=this.options,u=D.provider,t=m["zoom"],a=pick(m.projection.options.rotation&&m.projection.options.rotation[0],0),y=400.979322,_=256,f=l.renderer.forExport?0:200,g=r=>{for(const o of Object.keys(c))parseFloat(o)===(m.zoom<0?0:Math.floor(m.zoom))||h.minZoom&&(m.zoom<0?0:Math.floor(m.zoom))<h.minZoom&&parseFloat(o)===h.minZoom||h.maxZoom&&(m.zoom<0?0:Math.floor(m.zoom))>h.maxZoom&&parseFloat(o)===h.maxZoom?Object.keys(c[o].tiles).forEach((e,t)=>{c[o].tiles[e].animate({opacity:1},{duration:r},()=>{t===Object.keys(c[o].tiles).length-1&&(c[o].isActive=!0)})}):Object.keys(c[o].tiles).forEach((e,t)=>{c[o].tiles[e].animate({opacity:0},{duration:r,defer:r/2},()=>{c[o].tiles[e].destroy(),delete c[o].tiles[e],t===Object.keys(c[o].tiles).length-1&&(c[o].isActive=!1,c[o].loaded=!1)})})};let o=t<0?0:Math.floor(t),n=Math.pow(2,o),e=_/y*Math.pow(2,t)/(_/y*Math.pow(2,o)),p=256*e;if(u&&(u.type||u.url)){if(u.type&&!u.url){const T=TilesProviderRegistry[u.type];if(!defined(T))return void error("Highcharts warning: Tiles Provider '"+u.type+"' not defined in the ProviderRegistry.",!1);const x=new T,B=x.initialProjectionName;let e,t="";u.theme&&defined(x.themes[u.theme])?e=x.themes[u.theme]:(r=Object.keys(x.themes)[0],e=x.themes[r],error("Highcharts warning: The Tiles Provider's Theme '"+u.theme+"' is not defined in the Provider definition - falling back to '"+r+"'.",!1)),u.subdomain&&x.subdomains&&-1!==x.subdomains.indexOf(u.subdomain)?t=u.subdomain:defined(x.subdomains)&&-1!==e.url.indexOf("{s}")&&(t=pick(x.subdomains&&x.subdomains[0],""),error("Highcharts warning: The Tiles Provider's Subdomain '"+u.subdomain+"' is not defined in the Provider definition - falling back to '"+t+"'.",!1)),x.requiresApiKey&&(u.apiKey?e.url=e.url.replace("{apikey}",u.apiKey):(error("Highcharts warning: The Tiles Provider requires API Key to use tiles, use provider.apiKey to provide a token.",!1),e.url=e.url.replace("?apikey={apikey}",""))),u.url=e.url.replace("{s}",t),this.minZoom=e.minZoom,this.maxZoom=e.maxZoom;var r=pick(l.userOptions.credits&&l.userOptions.credits.text,"Highcharts.com "+pick(e.credits,x.defaultCredits));l.credits?l.credits.update({text:r}):l.addCredits({text:r,style:pick(l.options.credits?.style,{})}),m.projection.options.name!==B&&error("Highcharts warning: The set projection is different than supported by Tiles Provider.",!1)}else m.projection.options.name||error("Highcharts warning: The set projection is different than supported by Tiles Provider.",!1);if(defined(this.minZoom)&&o<this.minZoom?(o=this.minZoom,n=Math.pow(2,o),e=_/y*Math.pow(2,t)/(_/y*Math.pow(2,o)),p=256*e):defined(this.maxZoom)&&o>this.maxZoom&&(o=this.maxZoom,n=Math.pow(2,o),e=_/y*Math.pow(2,t)/(_/y*Math.pow(2,o)),p=256*e),m.projection&&m.projection.def){m.projection.hasCoordinates=!0,d[o]||(d[o]=l.renderer.g().add(this.group));const H=(e,t,r,o)=>e.replace("{x}",t.toString()).replace("{y}",r.toString()).replace("{zoom}",o.toString()).replace("{z}",o.toString());const M=m.pixelsToProjectedUnits({x:0,y:0}),S=m.projection.def.inverse([M.x,M.y]),v={lon:S[0]-a,lat:S[1]},b=m.pixelsToProjectedUnits({x:l.plotWidth,y:l.plotHeight}),Z=m.projection.def.inverse([b.x,b.y]),w={lon:Z[0]-a,lat:Z[1]};(v.lat>m.projection.maxLatitude||w.lat<-1*m.projection.maxLatitude)&&(v.lat=m.projection.maxLatitude,w.lat=-1*m.projection.maxLatitude);var i=this.lonLatToTile(v,o),s=this.lonLatToTile(w,o),r=this.tileToLonLat(i.x,i.y,o),r=m.projection.def.forward([r.lon+a,r.lat]),r=m.projectedUnitsToPixels({x:r[0],y:r[1]}),U=i.x*p-r.x,I=i.y*p-r.y;c[""+o]||(c[""+o]={tiles:{},isActive:!1,howManyTiles:0,actualTilesCount:0,loaded:!1}),c[""+o].howManyTiles=(s.x-i.x+1)*(s.y-i.y+1),c[""+o].actualTilesCount=0;for(let t=i.x;t<=s.x;t++)for(let e=i.y;e<=s.y;e++)((e,t,r,o,i)=>{var s=e%n,a=t%n,s=s<0?s+n:s,a=a<0?a+n:a;c[""+r].tiles[e+","+t]||u.url&&(s=H(u.url,s,a,r),c[r].loaded=!1,c[""+r].tiles[e+","+t]=l.renderer.image(s,e*p-o,t*p-i,p,p).attr({zIndex:2,opacity:0}).on("load",function(){u.onload&&u.onload.apply(this),r!==(m.zoom<0?0:Math.floor(m.zoom))&&r!==h.minZoom||(c[""+r].actualTilesCount++,c[""+r].howManyTiles===c[""+r].actualTilesCount&&(c[r].loaded=!0,h.isAnimating?h.redrawTiles=!0:(h.redrawTiles=!1,g(f)),c[""+r].actualTilesCount=0))}).add(d[r]),c[""+r].tiles[e+","+t].posX=e,c[""+r].tiles[e+","+t].posY=t,c[""+r].tiles[e+","+t].originalURL=s)})(t,e,o,U,I)}for(const P of Object.keys(c))for(const j of Object.keys(c[P].tiles))if(m.projection&&m.projection.def){const e=_/y*Math.pow(2,t)/(_/y*Math.pow(2,parseFloat(P))),r=256*e,E=c[P].tiles[Object.keys(c[P].tiles)[0]],{posX:k,posY:A}=c[P].tiles[j];if(defined(k)&&defined(A)&&defined(E.posX)&&defined(E.posY)){const O=this.tileToLonLat(E.posX,E.posY,parseFloat(P)),G=m.projection.def.forward([O.lon+a,O.lat]),L=m.projectedUnitsToPixels({x:G[0],y:G[1]}),W=E.posX*r-L.x,z=E.posY*r-L.y;if(l.renderer.globalAnimation&&l.hasRendered){const C=Number(c[P].tiles[j].attr("x")),N=Number(c[P].tiles[j].attr("y")),R=Number(c[P].tiles[j].attr("width")),K=Number(c[P].tiles[j].attr("height"));h.isAnimating=!0,c[P].tiles[j].attr({animator:0}).animate({animator:1},{step:(e,t)=>{c[P].tiles[j].attr({x:C+(k*r-W-C)*t.pos,y:N+(A*r-z-N)*t.pos,width:R+(Math.ceil(r)+1-R)*t.pos,height:K+(Math.ceil(r)+1-K)*t.pos})}},function(){h.isAnimating=!1,h.redrawTiles&&(h.redrawTiles=!1,g(f))})}else(h.redrawTiles||parseFloat(P)!==o||(c[P].isActive||parseFloat(P)===o)&&Object.keys(c[P].tiles).map(e=>c[P].tiles[e]).some(e=>0===e.opacity))&&(h.redrawTiles=!1,g(f)),c[P].tiles[j].attr({x:k*r-W,y:A*r-z,width:Math.ceil(r)+1,height:Math.ceil(r)+1})}}}else error("Highcharts warning: Tiles Provider not defined in the Provider Registry.",!1)}}update(){const e=this["transformGroups"],t=this.chart,r=t.mapView,o=arguments[0],i=o["provider"];if(e&&(e.forEach(e=>{0!==Object.keys(e).length&&e.destroy()}),this.transformGroups=[]),r&&!defined(t.userOptions.mapView?.projection)&&i&&i.type){const a=TilesProviderRegistry[i.type];var s;a&&(s=(new a)["initialProjectionName"],r.update({projection:{name:s}}))}super.update.apply(this,arguments)}}TiledWebMapSeries.defaultOptions=merge(MapSeries.defaultOptions,TiledWebMap_TiledWebMapSeriesDefaults),external_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType("tiledwebmap",TiledWebMapSeries);const TiledWebMap_TiledWebMapSeries=TiledWebMapSeries,G=external_highcharts_src_js_default_default(),tiledwebmap_src=(G.TilesProviderRegistry=G.TilesProviderRegistry||TilesProviderRegistry,TiledWebMap_TiledWebMapSeries.compose(G.MapView),external_highcharts_src_js_default_default());export{tiledwebmap_src as default};