import*as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from"../highcharts.src.js";import*as __WEBPACK_EXTERNAL_MODULE__modules_stock_src_js_b3d80146__ from"../modules/stock.src.js";var __webpack_require__={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},d:(e,t)=>{for(var a in t)__webpack_require__.o(t,a)&&!__webpack_require__.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const external_highcharts_src_js_default_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default;var external_highcharts_src_js_default_default=__webpack_require__.n(external_highcharts_src_js_default_namespaceObject),x=e=>{var t={};return __webpack_require__.d(t,e),t},y=e=>()=>e;const stock_src_js_namespaceObject=x({}),external_highcharts_src_js_default_SeriesRegistry_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.SeriesRegistry;var MultipleLinesComposition,external_highcharts_src_js_default_SeriesRegistry_default=__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);const{prototype:smaProto}=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["sma"],{defined,error,merge}=external_highcharts_src_js_default_default(),Indicators_MultipleLinesComposition=(!function(e){const a=["bottomLine"],s=["top","bottom"],r=["top"];function m(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function f(e,t){const a=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&a.push(m(e))}),a}function i(){const a=this,e=a.pointValKey,t=a.linesApiNames,s=a.areaLinesNames,r=a.points,i=a.options,o=a.graph,l={options:{gapSize:i.gapSize}},n=[],c=f(a,e);let p=r.length,_;var h,u,d;c.forEach((e,t)=>{for(n[t]=[];p--;)_=r[p],n[t].push({x:_.x,plotX:_.plotX,plotY:_[e],isNull:!defined(_[e])});p=r.length}),a.userOptions.fillColor&&s.length&&(h=c.indexOf(m(s[0])),h=n[h],u=1===s.length?r:n[c.indexOf(m(s[1]))],d=a.color,a.points=u,a.nextPoints=h,a.color=a.userOptions.fillColor,a.options=merge(r,l),a.graph=a.area,a.fillGraph=!0,smaProto.drawGraph.call(a),a.area=a.graph,delete a.nextPoints,delete a.fillGraph,a.color=d),t.forEach((e,t)=>{n[t]?(a.points=n[t],i[e]?a.options=merge(i[e].styles,l):error('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),a.graph=a["graph"+e],smaProto.drawGraph.call(a),a["graph"+e]=a.graph):error('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),a.points=r,a.options=i,a.graph=o,smaProto.drawGraph.call(a)}function o(e){let t,a=[],s;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=smaProto.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",a=smaProto.getGraphPath.call(this,e);for(let e=(s=t.slice(0,a.length)).length-1;0<=e;e--)a.push(s[e])}}else a=smaProto.getGraphPath.apply(this,arguments);return a}function l(t){const a=[];return(this.pointArrayMap||[]).forEach(e=>{a.push(t[e])}),a}function n(){const e=this.pointArrayMap;let s,r;s=f(this),smaProto.translate.apply(this,arguments),this.points.forEach(a=>{e.forEach((e,t)=>{r=a[e],null!==(r=this.dataModify?this.dataModify.modifyValue(r):r)&&(a[s[t]]=this.yAxis.toPixels(r,!0))})})}e.compose=function(e){const t=e.prototype;return t.linesApiNames=t.linesApiNames||a.slice(),t.pointArrayMap=t.pointArrayMap||s.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||r.slice(),t.drawGraph=i,t.getGraphPath=o,t.toYData=l,t.translate=n,e}}(MultipleLinesComposition=MultipleLinesComposition||{}),MultipleLinesComposition),SMAIndicator=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["sma"],{correctFloat,extend,isArray,merge:DMIIndicator_merge}=external_highcharts_src_js_default_default();class DMIIndicator extends SMAIndicator{calculateDM(e,t,a){var s=e[t][1],r=e[t][2],i=e[t-1][1],e=e[t-1][2];let o;return o=e-r<s-i?a?Math.max(s-i,0):0:a?0:Math.max(e-r,0),correctFloat(o)}calculateDI(e,t){return e/t*100}calculateDX(e,t){return correctFloat(Math.abs(e-t)/Math.abs(e+t)*100)}smoothValues(e,t,a){return correctFloat(e-e/a+t)}getTR(e,t){return correctFloat(Math.max(e[1]-e[2],t?Math.abs(e[1]-t[3]):0,t?Math.abs(e[2]-t[3]):0))}getValues(e,t){const u=t.period,d=e.xData,m=e.yData,a=m?m.length:0,f=[],g=[],y=[];if(!(d.length<=u)&&isArray(m[0])&&4===m[0].length){let c=0,p=0,_=0,h;for(h=1;h<a;h++){let e,t,a,s,r,i,o,l,n;h<=u?(s=this.calculateDM(m,h,!0),r=this.calculateDM(m,h),i=this.getTR(m[h],m[h-1]),c+=s,p+=r,_+=i,h===u&&(o=this.calculateDI(c,_),l=this.calculateDI(p,_),n=this.calculateDX(c,p),f.push([d[h],n,o,l]),g.push(d[h]),y.push([n,o,l]))):(s=this.calculateDM(m,h,!0),r=this.calculateDM(m,h),i=this.getTR(m[h],m[h-1]),e=this.smoothValues(c,s,u),t=this.smoothValues(p,r,u),a=this.smoothValues(_,i,u),c=e,p=t,_=a,o=this.calculateDI(c,_),l=this.calculateDI(p,_),n=this.calculateDX(c,p),f.push([d[h],n,o,l]),g.push(d[h]),y.push([n,o,l]))}return{values:f,xData:g,yData:y}}}}DMIIndicator.defaultOptions=DMIIndicator_merge(SMAIndicator.defaultOptions,{params:{index:void 0},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">DX</span>: {point.y}<br/><span style="color: {point.series.options.plusDILine.styles.lineColor}">+DI</span>: {point.plusDI}<br/><span style="color: {point.series.options.minusDILine.styles.lineColor}">-DI</span>: {point.minusDI}<br/>'},plusDILine:{styles:{lineWidth:1,lineColor:"#06b535"}},minusDILine:{styles:{lineWidth:1,lineColor:"#f21313"}},dataGrouping:{approximation:"averages"}}),extend(DMIIndicator.prototype,{areaLinesNames:[],nameBase:"DMI",linesApiNames:["plusDILine","minusDILine"],pointArrayMap:["y","plusDI","minusDI"],parallelArrays:["x","y","plusDI","minusDI"],pointValKey:"y"}),Indicators_MultipleLinesComposition.compose(DMIIndicator),external_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType("dmi",DMIIndicator);const DMI_DMIIndicator=null,dmi_src=external_highcharts_src_js_default_default();export{dmi_src as default};