import*as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from"../highcharts.src.js";import*as __WEBPACK_EXTERNAL_MODULE__modules_stock_src_js_b3d80146__ from"../modules/stock.src.js";import*as __WEBPACK_EXTERNAL_MODULE__modules_datagrouping_src_js_b7a4250c__ from"../modules/datagrouping.src.js";var __webpack_require__={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},d:(e,t)=>{for(var o in t)__webpack_require__.o(t,o)&&!__webpack_require__.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const external_highcharts_src_js_default_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default;var external_highcharts_src_js_default_default=__webpack_require__.n(external_highcharts_src_js_default_namespaceObject),x=e=>{var t={};return __webpack_require__.d(t,e),t},y=e=>()=>e;const stock_src_js_namespaceObject=x({}),datagrouping_src_js_default_dataGrouping_approximations_namespaceObject=__WEBPACK_EXTERNAL_MODULE__modules_datagrouping_src_js_b7a4250c__.default.dataGrouping.approximations;var datagrouping_src_js_default_dataGrouping_approximations_default=__webpack_require__.n(datagrouping_src_js_default_dataGrouping_approximations_namespaceObject);const external_highcharts_src_js_default_Color_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.Color;var external_highcharts_src_js_default_Color_default=__webpack_require__.n(external_highcharts_src_js_default_Color_namespaceObject);const external_highcharts_src_js_default_SeriesRegistry_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.SeriesRegistry;var external_highcharts_src_js_default_SeriesRegistry_default=__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);const color=external_highcharts_src_js_default_Color_default()["parse"],SMAIndicator=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["sma"],{defined,extend,isArray,isNumber,getClosestDistance,merge,objectEach}=external_highcharts_src_js_default_default();function maxHigh(e){return e.reduce(function(e,t){return Math.max(e,t[1])},-1/0)}function minLow(e){return e.reduce(function(e,t){return Math.min(e,t[2])},1/0)}function highlowLevel(e){return{high:maxHigh(e),low:minLow(e)}}function checkLineIntersection(e,t,o,a){if(e&&t&&o&&a){var s=t.plotX-e.plotX,t=t.plotY-e.plotY,r=a.plotX-o.plotX,a=a.plotY-o.plotY,n=e.plotX-o.plotX,o=e.plotY-o.plotY,i=(-t*n+s*o)/(-r*t+s*a),o=(r*o-a*n)/(-r*t+s*a);if(0<=i&&i<=1&&0<=o&&o<=1)return{plotX:e.plotX+o*s,plotY:e.plotY+o*t}}}function drawSenkouSpan(e){const t=e.indicator;t.points=e.points,t.nextPoints=e.nextPoints,t.color=e.color,t.options=merge(e.options.senkouSpan.styles,e.gap),t.graph=e.graph,t.fillGraph=!0,external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes.sma.prototype.drawGraph.call(t)}function ichimokuAverages(){const o=[];let a;return[].forEach.call(arguments,function(e,t){o.push(datagrouping_src_js_default_dataGrouping_approximations_default().average(e)),a=!a&&void 0===o[t]}),a?void 0:o}class IKHIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=[],this.options={},this.points=[],this.graphCollection=[]}init(){super.init.apply(this,arguments),this.options=merge({tenkanLine:{styles:{lineColor:this.color}},kijunLine:{styles:{lineColor:this.color}},chikouLine:{styles:{lineColor:this.color}},senkouSpanA:{styles:{lineColor:this.color,fill:color(this.color).setOpacity(.5).get()}},senkouSpanB:{styles:{lineColor:this.color,fill:color(this.color).setOpacity(.5).get()}},senkouSpan:{styles:{fill:color(this.color).setOpacity(.2).get()}}},this.options)}toYData(e){return[e.tenkanSen,e.kijunSen,e.chikouSpan,e.senkouSpanA,e.senkouSpanB]}translate(){var e=this;external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes.sma.prototype.translate.apply(e);for(const o of e.points)for(const a of e.pointArrayMap){var t=o[a];isNumber(t)&&(o["plot"+a]=e.yAxis.toPixels(t,!0),o.plotY=o["plot"+a],o.tooltipPos=[o.plotX,o["plot"+a]],o.isNull=!1)}}drawGraph(){const o=this,e=o.points,a=o.options,t=o.graph,s=o.color,r={options:{gapSize:a.gapSize}},n=o.pointArrayMap.length,i=[[],[],[],[],[],[]],l={tenkanLine:i[0],kijunLine:i[1],chikouLine:i[2],senkouSpanA:i[3],senkouSpanB:i[4],senkouSpan:i[5]},_=[],p=o.options.senkouSpan,c=p.color||p.styles.fill,h=p.negativeColor,u=[[],[]],d=[[],[]];let g=e.length,f=0,k,S,y,m,j,x,A,v,b,E,C,L,O;for(o.ikhMap=l;g--;){for(S=e[g],y=0;y<n;y++)k=o.pointArrayMap[y],defined(S[k])&&i[y].push({plotX:S.plotX,plotY:S["plot"+k],isNull:!1});var w,P;h&&g!==e.length-1&&(w=l.senkouSpanB.length-1,(P=checkLineIntersection(l.senkouSpanA[w-1],l.senkouSpanA[w],l.senkouSpanB[w-1],l.senkouSpanB[w]))&&(P={plotX:P.plotX,plotY:P.plotY,isNull:!1,intersectPoint:!0},l.senkouSpanA.splice(w,0,P),l.senkouSpanB.splice(w,0,P),_.push(w)))}if(objectEach(l,(e,t)=>{a[t]&&"senkouSpan"!==t&&(o.points=i[f],o.options=merge(a[t].styles,r),o.graph=o["graph"+t],o.fillGraph=!1,o.color=s,external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes.sma.prototype.drawGraph.call(o),o["graph"+t]=o.graph),f++}),o.graphCollection)for(const N of o.graphCollection)o[N].destroy(),delete o[N];if(o.graphCollection=[],h&&l.senkouSpanA[0]&&l.senkouSpanB[0]){for(_.unshift(0),_.push(l.senkouSpanA.length-1),L=0;L<_.length-1;L++)if(m=_[L],j=_[L+1],x=l.senkouSpanB.slice(m,j+1),A=l.senkouSpanA.slice(m,j+1),1<=Math.floor(x.length/2)){var B=Math.floor(x.length/2);if(x[B].plotY===A[B].plotY){for(v=0,b=0,O=0;O<x.length;O++)v+=x[O].plotY,b+=A[O].plotY;C=v>b?0:1,u[C]=u[C].concat(x),d[C]=d[C].concat(A)}else C=x[B].plotY>A[B].plotY?0:1,u[C]=u[C].concat(x),d[C]=d[C].concat(A)}else C=x[0].plotY>A[0].plotY?0:1,u[C]=u[C].concat(x),d[C]=d[C].concat(A);["graphsenkouSpanColor","graphsenkouSpanNegativeColor"].forEach(function(e,t){u[t].length&&d[t].length&&(E=0===t?c:h,drawSenkouSpan({indicator:o,points:u[t],nextPoints:d[t],color:E,options:a,gap:r,graph:o[e]}),o[e]=o.graph,o.graphCollection.push(e))})}else drawSenkouSpan({indicator:o,points:l.senkouSpanB,nextPoints:l.senkouSpanA,color:c,options:a,gap:r,graph:o.graphsenkouSpan}),o.graphsenkouSpan=o.graph;delete o.nextPoints,delete o.fillGraph,o.points=e,o.options=a,o.graph=t,o.color=s}getGraphPath(e){var t=this;let o=[],a,s;if(e=e||this.points,t.fillGraph&&t.nextPoints){if((a=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes.sma.prototype.getGraphPath.call(t,t.nextPoints))&&a.length){a[0][0]="L",o=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes.sma.prototype.getGraphPath.call(t,e);for(let e=(s=a.slice(0,o.length)).length-1;0<=e;e--)o.push(s[e])}}else o=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes.sma.prototype.getGraphPath.apply(t,arguments);return o}getValues(e,t){const o=t.period,a=t.periodTenkan,s=t.periodSenkouSpanB,r=e.xData,n=e.yData,i=e.xAxis,l=n&&n.length||0,_=getClosestDistance(i.series.map(e=>e.getColumn("x"))),p=[],c=[];let h,u,d,g,f,k,S,y,m,j;if(!(r.length<=o)&&isArray(n[0])&&4===n[0].length){var x=r[0]-o*_;for(f=0;f<o;f++)c.push(x+f*_);for(f=0;f<l;f++)f>=a&&(u=highlowLevel(n.slice(f-a,f)),k=(u.high+u.low)/2),f>=o&&(d=highlowLevel(n.slice(f-o,f)),S=(d.high+d.low)/2,m=(k+S)/2),f>=s&&(g=highlowLevel(n.slice(f-s,f)),j=(g.high+g.low)/2),y=n[f][3],h=r[f],void 0===p[f]&&(p[f]=[]),void 0===p[f+o-1]&&(p[f+o-1]=[]),p[f+o-1][0]=k,p[f+o-1][1]=S,(p[f+o-1][2]=void 0)===p[f+1]&&(p[f+1]=[]),p[f+1][2]=y,f<=o&&(p[f+o-1][3]=void 0,p[f+o-1][4]=void 0),void 0===p[f+2*o-2]&&(p[f+2*o-2]=[]),p[f+2*o-2][3]=m,p[f+2*o-2][4]=j,c.push(h);for(f=1;f<=o;f++)c.push(h+f*_);return{values:p,xData:c,yData:p}}}}IKHIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:26,periodTenkan:9,periodSenkouSpanB:52},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b> {series.name}</b><br/>TENKAN SEN: {point.tenkanSen:.3f}<br/>KIJUN SEN: {point.kijunSen:.3f}<br/>CHIKOU SPAN: {point.chikouSpan:.3f}<br/>SENKOU SPAN A: {point.senkouSpanA:.3f}<br/>SENKOU SPAN B: {point.senkouSpanB:.3f}<br/>'},tenkanLine:{styles:{lineWidth:1,lineColor:void 0}},kijunLine:{styles:{lineWidth:1,lineColor:void 0}},chikouLine:{styles:{lineWidth:1,lineColor:void 0}},senkouSpanA:{styles:{lineWidth:1,lineColor:void 0}},senkouSpanB:{styles:{lineWidth:1,lineColor:void 0}},senkouSpan:{styles:{fill:"rgba(255, 0, 0, 0.5)"}},dataGrouping:{approximation:"ichimoku-averages"}}),extend(IKHIndicator.prototype,{pointArrayMap:["tenkanSen","kijunSen","chikouSpan","senkouSpanA","senkouSpanB"],pointValKey:"tenkanSen",nameComponents:["periodSenkouSpanB","period","periodTenkan"]}),datagrouping_src_js_default_dataGrouping_approximations_default()["ichimoku-averages"]=ichimokuAverages,external_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType("ikh",IKHIndicator);const IKH_IKHIndicator=null,ichimoku_kinko_hyo_src=external_highcharts_src_js_default_default();export{ichimoku_kinko_hyo_src as default};