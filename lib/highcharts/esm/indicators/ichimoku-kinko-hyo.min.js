import*as o from"../highcharts.js";import"../modules/stock.js";import*as t from"../modules/datagrouping.js";var e={n:o=>{var t=o&&o.__esModule?()=>o.default:()=>o;return e.d(t,{a:t}),t},d:(o,t)=>{for(var n in t)e.o(t,n)&&!e.o(o,n)&&Object.defineProperty(o,n,{enumerable:!0,get:t[n]})},o:(o,e)=>Object.prototype.hasOwnProperty.call(o,e)};let n=o.default;var i=e.n(n);e.d({},{});let p=t.default.dataGrouping.approximations;var l=e.n(p);let s=o.default.Color;var a=e.n(s);let r=o.default.SeriesRegistry;var h=e.n(r);let u=a()["parse"],c=h().seriesTypes["sma"],{defined:g,extend:k,isArray:f,isNumber:d,getClosestDistance:S,merge:y,objectEach:m}=i();function v(o){return{high:o.reduce(function(o,e){return Math.max(o,e[1])},-1/0),low:o.reduce(function(o,e){return Math.min(o,e[2])},1/0)}}function A(o){let e=o.indicator;e.points=o.points,e.nextPoints=o.nextPoints,e.color=o.color,e.options=y(o.options.senkouSpan.styles,o.gap),e.graph=o.graph,e.fillGraph=!0,h().seriesTypes.sma.prototype.drawGraph.call(e)}class C extends c{constructor(){super(...arguments),this.data=[],this.options={},this.points=[],this.graphCollection=[]}init(){super.init.apply(this,arguments),this.options=y({tenkanLine:{styles:{lineColor:this.color}},kijunLine:{styles:{lineColor:this.color}},chikouLine:{styles:{lineColor:this.color}},senkouSpanA:{styles:{lineColor:this.color,fill:u(this.color).setOpacity(.5).get()}},senkouSpanB:{styles:{lineColor:this.color,fill:u(this.color).setOpacity(.5).get()}},senkouSpan:{styles:{fill:u(this.color).setOpacity(.2).get()}}},this.options)}toYData(o){return[o.tenkanSen,o.kijunSen,o.chikouSpan,o.senkouSpanA,o.senkouSpanB]}translate(){for(var o of(h().seriesTypes.sma.prototype.translate.apply(this),this.points))for(var e of this.pointArrayMap){var t=o[e];d(t)&&(o["plot"+e]=this.yAxis.toPixels(t,!0),o.plotY=o["plot"+e],o.tooltipPos=[o.plotX,o["plot"+e]],o.isNull=!1)}}drawGraph(){let t=this,o=t.points,n=t.options,e=t.graph,i=t.color,p={options:{gapSize:n.gapSize}},s=t.pointArrayMap.length,l=[[],[],[],[],[],[]],a={tenkanLine:l[0],kijunLine:l[1],chikouLine:l[2],senkouSpanA:l[3],senkouSpanB:l[4],senkouSpan:l[5]},r=[],u=t.options.senkouSpan,c=u.color||u.styles.fill,k=u.negativeColor,d=[[],[]],f=[[],[]],S=o.length,v=0,C,Y,x,P,B,b,N,G,X,j,T,O,L;for(t.ikhMap=a;S--;){for(x=0,Y=o[S];x<s;x++)g(Y[C=t.pointArrayMap[x]])&&l[x].push({plotX:Y.plotX,plotY:Y["plot"+C],isNull:!1});var M,w;k&&S!==o.length-1&&(M=a.senkouSpanB.length-1,(w=function(o,e,t,n){if(o&&e&&t&&n){var i=e.plotX-o.plotX,e=e.plotY-o.plotY,p=n.plotX-t.plotX,n=n.plotY-t.plotY,s=o.plotX-t.plotX,t=o.plotY-t.plotY,l=(-e*s+i*t)/(-p*e+i*n),t=(p*t-n*s)/(-p*e+i*n);if(0<=l&&l<=1&&0<=t&&t<=1)return{plotX:o.plotX+t*i,plotY:o.plotY+t*e}}}(a.senkouSpanA[M-1],a.senkouSpanA[M],a.senkouSpanB[M-1],a.senkouSpanB[M]))&&(w={plotX:w.plotX,plotY:w.plotY,isNull:!1,intersectPoint:!0},a.senkouSpanA.splice(M,0,w),a.senkouSpanB.splice(M,0,w),r.push(M)))}if(m(a,(o,e)=>{n[e]&&"senkouSpan"!==e&&(t.points=l[v],t.options=y(n[e].styles,p),t.graph=t["graph"+e],t.fillGraph=!1,t.color=i,h().seriesTypes.sma.prototype.drawGraph.call(t),t["graph"+e]=t.graph),v++}),t.graphCollection)for(var E of t.graphCollection)t[E].destroy(),delete t[E];if(t.graphCollection=[],k&&a.senkouSpanA[0]&&a.senkouSpanB[0]){for(r.unshift(0),r.push(a.senkouSpanA.length-1),O=0;O<r.length-1;O++)if(P=r[O],B=r[O+1],b=a.senkouSpanB.slice(P,B+1),N=a.senkouSpanA.slice(P,B+1),1<=Math.floor(b.length/2)){var D=Math.floor(b.length/2);if(b[D].plotY===N[D].plotY){for(L=0,G=0,X=0;L<b.length;L++)G+=b[L].plotY,X+=N[L].plotY;d[T=G>X?0:1]=d[T].concat(b),f[T]=f[T].concat(N)}else d[T=b[D].plotY>N[D].plotY?0:1]=d[T].concat(b),f[T]=f[T].concat(N)}else d[T=b[0].plotY>N[0].plotY?0:1]=d[T].concat(b),f[T]=f[T].concat(N);["graphsenkouSpanColor","graphsenkouSpanNegativeColor"].forEach(function(o,e){d[e].length&&f[e].length&&(j=0===e?c:k,A({indicator:t,points:d[e],nextPoints:f[e],color:j,options:n,gap:p,graph:t[o]}),t[o]=t.graph,t.graphCollection.push(o))})}else A({indicator:t,points:a.senkouSpanB,nextPoints:a.senkouSpanA,color:c,options:n,gap:p,graph:t.graphsenkouSpan}),t.graphsenkouSpan=t.graph;delete t.nextPoints,delete t.fillGraph,t.points=o,t.options=n,t.graph=e,t.color=i}getGraphPath(o){let e=[],t,n;if(o=o||this.points,this.fillGraph&&this.nextPoints){if((t=h().seriesTypes.sma.prototype.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",e=h().seriesTypes.sma.prototype.getGraphPath.call(this,o);for(let o=(n=t.slice(0,e.length)).length-1;0<=o;o--)e.push(n[o])}}else e=h().seriesTypes.sma.prototype.getGraphPath.apply(this,arguments);return e}getValues(o,e){let t,n,i,p,s,l,a,r,h,u,c=e.period,g=e.periodTenkan,k=e.periodSenkouSpanB,d=o.xData,y=o.yData,m=o.xAxis,A=y&&y.length||0,C=S(m.series.map(o=>o.getColumn("x"))),Y=[],x=[];if(!(d.length<=c)&&f(y[0])&&4===y[0].length){var P=d[0]-c*C;for(s=0;s<c;s++)x.push(P+s*C);for(s=0;s<A;s++)s>=g&&(l=((n=v(y.slice(s-g,s))).high+n.low)/2),s>=c&&(h=(l+(a=((i=v(y.slice(s-c,s))).high+i.low)/2))/2),s>=k&&(u=((p=v(y.slice(s-k,s))).high+p.low)/2),r=y[s][3],t=d[s],void 0===Y[s]&&(Y[s]=[]),void 0===Y[s+c-1]&&(Y[s+c-1]=[]),Y[s+c-1][0]=l,Y[s+c-1][1]=a,(Y[s+c-1][2]=void 0)===Y[s+1]&&(Y[s+1]=[]),Y[s+1][2]=r,s<=c&&(Y[s+c-1][3]=void 0,Y[s+c-1][4]=void 0),void 0===Y[s+2*c-2]&&(Y[s+2*c-2]=[]),Y[s+2*c-2][3]=h,Y[s+2*c-2][4]=u,x.push(t);for(s=1;s<=c;s++)x.push(t+s*C);return{values:Y,xData:x,yData:Y}}}}C.defaultOptions=y(c.defaultOptions,{params:{index:void 0,period:26,periodTenkan:9,periodSenkouSpanB:52},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b> {series.name}</b><br/>TENKAN SEN: {point.tenkanSen:.3f}<br/>KIJUN SEN: {point.kijunSen:.3f}<br/>CHIKOU SPAN: {point.chikouSpan:.3f}<br/>SENKOU SPAN A: {point.senkouSpanA:.3f}<br/>SENKOU SPAN B: {point.senkouSpanB:.3f}<br/>'},tenkanLine:{styles:{lineWidth:1,lineColor:void 0}},kijunLine:{styles:{lineWidth:1,lineColor:void 0}},chikouLine:{styles:{lineWidth:1,lineColor:void 0}},senkouSpanA:{styles:{lineWidth:1,lineColor:void 0}},senkouSpanB:{styles:{lineWidth:1,lineColor:void 0}},senkouSpan:{styles:{fill:"rgba(255, 0, 0, 0.5)"}},dataGrouping:{approximation:"ichimoku-averages"}}),k(C.prototype,{pointArrayMap:["tenkanSen","kijunSen","chikouSpan","senkouSpanA","senkouSpanB"],pointValKey:"tenkanSen",nameComponents:["periodSenkouSpanB","period","periodTenkan"]}),l()["ichimoku-averages"]=function(){let t,n=[];return[].forEach.call(arguments,function(o,e){n.push(l().average(o)),t=!t&&void 0===n[e]}),t?void 0:n},h().registerSeriesType("ikh",C);let Y=i();export{Y as default};