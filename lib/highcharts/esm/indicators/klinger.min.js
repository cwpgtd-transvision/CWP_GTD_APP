import*as e from"../highcharts.js";import"../modules/stock.js";var t,r={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},d:(e,t)=>{for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let a=e.default;var i=r.n(a);r.d({},{});let o=e.default.SeriesRegistry;var s=r.n(o);let{prototype:l}=s().seriesTypes["sma"],{defined:n,error:p,merge:h}=i(),g=(!function(e){let r=["bottomLine"],a=["top","bottom"],i=["top"];function A(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function P(e,t){let r=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&r.push(A(e))}),r}function o(){let r=this,e=r.pointValKey,t=r.linesApiNames,a=r.areaLinesNames,i=r.points,o=r.options,s=r.graph,g={options:{gapSize:o.gapSize}},u=[],c=P(r,e),d=i.length,f;var m,y,v;c.forEach((e,t)=>{for(u[t]=[];d--;)f=i[d],u[t].push({x:f.x,plotX:f.plotX,plotY:f[e],isNull:!n(f[e])});d=i.length}),r.userOptions.fillColor&&a.length&&(m=u[c.indexOf(A(a[0]))],y=1===a.length?i:u[c.indexOf(A(a[1]))],v=r.color,r.points=y,r.nextPoints=m,r.color=r.userOptions.fillColor,r.options=h(i,g),r.graph=r.area,r.fillGraph=!0,l.drawGraph.call(r),r.area=r.graph,delete r.nextPoints,delete r.fillGraph,r.color=v),t.forEach((e,t)=>{u[t]?(r.points=u[t],o[e]?r.options=h(o[e].styles,g):p('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),r.graph=r["graph"+e],l.drawGraph.call(r),r["graph"+e]=r.graph):p('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),r.points=i,r.options=o,r.graph=s,l.drawGraph.call(r)}function s(e){let t,r=[],a;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=l.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",r=l.getGraphPath.call(this,e);for(let e=(a=t.slice(0,r.length)).length-1;0<=e;e--)r.push(a[e])}}else r=l.getGraphPath.apply(this,arguments);return r}function g(t){let r=[];return(this.pointArrayMap||[]).forEach(e=>{r.push(t[e])}),r}function u(){let e=this.pointArrayMap,a,i;a=P(this),l.translate.apply(this,arguments),this.points.forEach(r=>{e.forEach((e,t)=>{i=r[e],null!==(i=this.dataModify?this.dataModify.modifyValue(i):i)&&(r[a[t]]=this.yAxis.toPixels(i,!0))})})}e.compose=function(e){let t=e.prototype;return t.linesApiNames=t.linesApiNames||r.slice(),t.pointArrayMap=t.pointArrayMap||a.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||i.slice(),t.drawGraph=o,t.getGraphPath=s,t.toYData=g,t.translate=u,e}}(t=t||{}),t),{ema:u,sma:c}=s().seriesTypes,{correctFloat:d,error:f,extend:m,isArray:y,merge:A}=i();class v extends c{calculateTrend(e,t){return e[t][1]+e[t][2]+e[t][3]>e[t-1][1]+e[t-1][2]+e[t-1][3]?1:-1}isValidData(e){let t=this.chart,r=this.options,a=this.linkedParent,i=y(e)&&4===e.length,o=this.volumeSeries||(this.volumeSeries=t.get(r.params.volumeSeriesID));return o||f("Series "+r.params.volumeSeriesID+" not found! Check `volumeSeriesID`.",!0,a.chart),!(![a,o].every(function(e){return e&&e.dataTable.rowCount>=r.params.slowAvgPeriod})||!i)}getCM(e,t,r,a,i){return d(t+(r===a?e:i))}getDM(e,t){return d(e-t)}getVolumeForce(e){let t=[],r,a,i=1,o=0,s=e[0][1]-e[0][2],l=0,n;for(;i<e.length;i++)n=this.calculateTrend(e,i),a=this.getDM(e[i][1],e[i][2]),r=this.getCM(o,a,n,l,s),t.push([this.volumeSeries.getColumn("y")[i]*n*Math.abs(2*(a/r-1))*100]),l=n,o=r,s=a;return t}getEMA(e,t,r,a,i,o,s){return u.prototype.calculateEma(s||[],e,void 0===o?1:o,a,t,void 0===i?-1:i,r)}getSMA(e,t,r){return u.prototype.accumulatePeriodPoints(e,t,r)/e}getValues(e,t){let r=[],a=e.xData,i=e.yData,o=[],s=[],l=[],n,p=0,h=0,g,u,c,f=null;if(this.isValidData(i[0])){for(var m=this.getVolumeForce(i),y=this.getSMA(t.fastAvgPeriod,0,m),v=this.getSMA(t.slowAvgPeriod,0,m),A=2/(t.fastAvgPeriod+1),P=2/(t.slowAvgPeriod+1);p<i.length;p++)p>=t.fastAvgPeriod&&(u=h=this.getEMA(m,u,y,A,0,p,a)[1]),p>=t.slowAvgPeriod&&(c=g=this.getEMA(m,c,v,P,0,p,a)[1],l.push(n=d(h-g)),l.length>=t.signalPeriod&&(f=l.slice(-t.signalPeriod).reduce((e,t)=>e+t)/t.signalPeriod),r.push([a[p],n,f]),o.push(a[p]),s.push([n,f]));return{values:r,xData:o,yData:s}}}}v.defaultOptions=A(c.defaultOptions,{params:{fastAvgPeriod:34,slowAvgPeriod:55,signalPeriod:13,volumeSeriesID:"volume"},signalLine:{styles:{lineWidth:1,lineColor:"#ff0000"}},dataGrouping:{approximation:"averages"},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">Klinger</span>: {point.y}<br/><span style="color: {point.series.options.signalLine.styles.lineColor}">Signal</span>: {point.signal}<br/>'}}),m(v.prototype,{areaLinesNames:[],linesApiNames:["signalLine"],nameBase:"Klinger",nameComponents:["fastAvgPeriod","slowAvgPeriod"],pointArrayMap:["y","signal"],parallelArrays:["x","y","signal"],pointValKey:"y"}),g.compose(v),s().registerSeriesType("klinger",v);let P=i();export{P as default};