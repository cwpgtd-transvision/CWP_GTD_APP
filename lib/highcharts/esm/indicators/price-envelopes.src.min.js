import*as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from"../highcharts.src.js";import*as __WEBPACK_EXTERNAL_MODULE__modules_stock_src_js_b3d80146__ from"../modules/stock.src.js";var __webpack_require__={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},d:(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const external_highcharts_src_js_default_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default;var external_highcharts_src_js_default_default=__webpack_require__.n(external_highcharts_src_js_default_namespaceObject),x=e=>{var t={};return __webpack_require__.d(t,e),t},y=e=>()=>e;const stock_src_js_namespaceObject=x({}),external_highcharts_src_js_default_SeriesRegistry_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.SeriesRegistry;var MultipleLinesComposition,external_highcharts_src_js_default_SeriesRegistry_default=__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);const{prototype:smaProto}=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["sma"],{defined,error,merge}=external_highcharts_src_js_default_default(),Indicators_MultipleLinesComposition=(!function(e){const r=["bottomLine"],s=["top","bottom"],o=["top"];function m(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function f(e,t){const r=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&r.push(m(e))}),r}function a(){const r=this,e=r.pointValKey,t=r.linesApiNames,s=r.areaLinesNames,o=r.points,a=r.options,i=r.graph,n={options:{gapSize:a.gapSize}},l=[],p=f(r,e);let _=o.length,c;var h,d,u;p.forEach((e,t)=>{for(l[t]=[];_--;)c=o[_],l[t].push({x:c.x,plotX:c.plotX,plotY:c[e],isNull:!defined(c[e])});_=o.length}),r.userOptions.fillColor&&s.length&&(h=p.indexOf(m(s[0])),h=l[h],d=1===s.length?o:l[p.indexOf(m(s[1]))],u=r.color,r.points=d,r.nextPoints=h,r.color=r.userOptions.fillColor,r.options=merge(o,n),r.graph=r.area,r.fillGraph=!0,smaProto.drawGraph.call(r),r.area=r.graph,delete r.nextPoints,delete r.fillGraph,r.color=u),t.forEach((e,t)=>{l[t]?(r.points=l[t],a[e]?r.options=merge(a[e].styles,n):error('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),r.graph=r["graph"+e],smaProto.drawGraph.call(r),r["graph"+e]=r.graph):error('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),r.points=o,r.options=a,r.graph=i,smaProto.drawGraph.call(r)}function i(e){let t,r=[],s;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=smaProto.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",r=smaProto.getGraphPath.call(this,e);for(let e=(s=t.slice(0,r.length)).length-1;0<=e;e--)r.push(s[e])}}else r=smaProto.getGraphPath.apply(this,arguments);return r}function n(t){const r=[];return(this.pointArrayMap||[]).forEach(e=>{r.push(t[e])}),r}function l(){const e=this.pointArrayMap;let s,o;s=f(this),smaProto.translate.apply(this,arguments),this.points.forEach(r=>{e.forEach((e,t)=>{o=r[e],null!==(o=this.dataModify?this.dataModify.modifyValue(o):o)&&(r[s[t]]=this.yAxis.toPixels(o,!0))})})}e.compose=function(e){const t=e.prototype;return t.linesApiNames=t.linesApiNames||r.slice(),t.pointArrayMap=t.pointArrayMap||s.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||o.slice(),t.drawGraph=a,t.getGraphPath=i,t.toYData=n,t.translate=l,e}}(MultipleLinesComposition=MultipleLinesComposition||{}),MultipleLinesComposition),SMAIndicator=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["sma"],{extend,isArray,merge:PriceEnvelopesIndicator_merge}=external_highcharts_src_js_default_default();class PriceEnvelopesIndicator extends SMAIndicator{init(){super.init.apply(this,arguments),this.options=PriceEnvelopesIndicator_merge({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(e,t){const r=t.period,s=t.topBand,o=t.bottomBand,a=e.xData,i=e.yData,n=i?i.length:0,l=[],p=[],_=[];let c,h,d,u,m,f,g,y;if(!(a.length<r)&&isArray(i[0])&&4===i[0].length){for(y=r;y<=n;y++)m=a.slice(y-r,y),f=i.slice(y-r,y),u=(g=super.getValues({xData:m,yData:f},t)).xData[0],h=(c=g.yData[0])*(1+s),d=c*(1-o),l.push([u,h,c,d]),p.push(u),_.push([h,c,d]);return{values:l,xData:p,yData:_}}}}PriceEnvelopesIndicator.defaultOptions=PriceEnvelopesIndicator_merge(SMAIndicator.defaultOptions,{marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},params:{period:20,topBand:.1,bottomBand:.1},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),extend(PriceEnvelopesIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","topBand","bottomBand"],nameBase:"Price envelopes",pointArrayMap:["top","middle","bottom"],parallelArrays:["x","y","top","bottom"],pointValKey:"middle"}),Indicators_MultipleLinesComposition.compose(PriceEnvelopesIndicator),external_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType("priceenvelopes",PriceEnvelopesIndicator);const PriceEnvelopes_PriceEnvelopesIndicator=null,price_envelopes_src=external_highcharts_src_js_default_default();export{price_envelopes_src as default};