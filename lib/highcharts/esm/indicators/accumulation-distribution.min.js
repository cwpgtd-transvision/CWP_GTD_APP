import*as e from"../highcharts.js";import"../modules/stock.js";var t={n:e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},d:(e,r)=>{for(var a in r)t.o(r,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:r[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let r=e.default;var a=t.n(r);t.d({},{});let s=e.default.SeriesRegistry;var o=t.n(s);let l=o().seriesTypes["sma"],{error:u,extend:i,merge:n}=a();class p extends l{static populateAverage(e,t,r,a,o){var s=t[a][1],l=t[a][2],t=t[a][3],r=r[a];return[e[a],t===s&&t===l||s===l?0:(2*t-l-s)/(s-l)*r]}getValues(e,t){let r,a,o,s=t.period,l=e.xData,n=e.yData,i=t.volumeSeriesID,d=e.chart.get(i),m=d?.getColumn("y"),g=n?n.length:0,h=[],v=[],f=[];if(!(l.length<=s&&g&&4!==n[0].length)){if(d){for(a=s;a<g;a++)r=h.length,o=p.populateAverage(l,n,m,a,s),0<r&&(o[1]+=h[r-1][1]),h.push(o),v.push(o[0]),f.push(o[1]);return{values:h,xData:v,yData:f}}u("Series "+i+" not found! Check `volumeSeriesID`.",!0,e.chart)}}}p.defaultOptions=n(l.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume"}}),i(p.prototype,{nameComponents:!1,nameBase:"Accumulation/Distribution"}),o().registerSeriesType("ad",p);let d=a();export{d as default};