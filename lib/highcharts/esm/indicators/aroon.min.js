import*as e from"../highcharts.js";import"../modules/stock.js";var t,o={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},d:(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let a=e.default;var r=o.n(a);o.d({},{});let n=e.default.SeriesRegistry;var i=o.n(n);let{prototype:s}=i().seriesTypes["sma"],{defined:p,error:l,merge:h}=r(),c=(!function(e){let o=["bottomLine"],a=["top","bottom"],r=["top"];function x(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function v(e,t){let o=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&o.push(x(e))}),o}function n(){let o=this,e=o.pointValKey,t=o.linesApiNames,a=o.areaLinesNames,r=o.points,n=o.options,i=o.graph,u={options:{gapSize:n.gapSize}},c=[],f=v(o,e),d=r.length,m;var y,g,A;f.forEach((e,t)=>{for(c[t]=[];d--;)m=r[d],c[t].push({x:m.x,plotX:m.plotX,plotY:m[e],isNull:!p(m[e])});d=r.length}),o.userOptions.fillColor&&a.length&&(y=c[f.indexOf(x(a[0]))],g=1===a.length?r:c[f.indexOf(x(a[1]))],A=o.color,o.points=g,o.nextPoints=y,o.color=o.userOptions.fillColor,o.options=h(r,u),o.graph=o.area,o.fillGraph=!0,s.drawGraph.call(o),o.area=o.graph,delete o.nextPoints,delete o.fillGraph,o.color=A),t.forEach((e,t)=>{c[t]?(o.points=c[t],n[e]?o.options=h(n[e].styles,u):l('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),o.graph=o["graph"+e],s.drawGraph.call(o),o["graph"+e]=o.graph):l('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=r,o.options=n,o.graph=i,s.drawGraph.call(o)}function i(e){let t,o=[],a;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=s.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",o=s.getGraphPath.call(this,e);for(let e=(a=t.slice(0,o.length)).length-1;0<=e;e--)o.push(a[e])}}else o=s.getGraphPath.apply(this,arguments);return o}function u(t){let o=[];return(this.pointArrayMap||[]).forEach(e=>{o.push(t[e])}),o}function c(){let e=this.pointArrayMap,a,r;a=v(this),s.translate.apply(this,arguments),this.points.forEach(o=>{e.forEach((e,t)=>{r=o[e],null!==(r=this.dataModify?this.dataModify.modifyValue(r):r)&&(o[a[t]]=this.yAxis.toPixels(r,!0))})})}e.compose=function(e){let t=e.prototype;return t.linesApiNames=t.linesApiNames||o.slice(),t.pointArrayMap=t.pointArrayMap||a.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||r.slice(),t.drawGraph=n,t.getGraphPath=i,t.toYData=u,t.translate=c,e}}(t=t||{}),t),u=i().seriesTypes["sma"],{extend:f,merge:m,pick:y}=r();function d(e,t){let o=e[0],a=0,r;for(r=1;r<e.length;r++)("max"===t&&e[r]>=o||"min"===t&&e[r]<=o)&&(o=e[r],a=r);return a}class g extends u{getValues(e,t){let o,a,r,n,i,s=t.period,p=e.xData,l=e.yData,h=l?l.length:0,u=[],c=[],f=[];for(n=s-1;n<h;n++)r=d((i=l.slice(n-s+1,n+2)).map(function(e){return y(e[2],e)}),"min"),o=d(i.map(function(e){return y(e[1],e)}),"max")/s*100,a=r/s*100,p[n+1]&&(u.push([p[n+1],o,a]),c.push(p[n+1]),f.push([o,a]));return{values:u,xData:c,yData:f}}}g.defaultOptions=m(u.defaultOptions,{params:{index:void 0,period:25},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'},aroonDown:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),f(g.prototype,{areaLinesNames:[],linesApiNames:["aroonDown"],nameBase:"Aroon",pointArrayMap:["y","aroonDown"],pointValKey:"y"}),c.compose(g),i().registerSeriesType("aroon",g);let A=r();export{A as default};