import*as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from"../highcharts.src.js";import*as __WEBPACK_EXTERNAL_MODULE__modules_stock_src_js_b3d80146__ from"../modules/stock.src.js";var __webpack_require__={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},d:(e,t)=>{for(var a in t)__webpack_require__.o(t,a)&&!__webpack_require__.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const external_highcharts_src_js_default_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default;var external_highcharts_src_js_default_default=__webpack_require__.n(external_highcharts_src_js_default_namespaceObject),x=e=>{var t={};return __webpack_require__.d(t,e),t},y=e=>()=>e;const stock_src_js_namespaceObject=x({}),external_highcharts_src_js_default_SeriesRegistry_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.SeriesRegistry;var MultipleLinesComposition,external_highcharts_src_js_default_SeriesRegistry_default=__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);const{prototype:smaProto}=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["sma"],{defined,error,merge}=external_highcharts_src_js_default_default(),Indicators_MultipleLinesComposition=(!function(e){const a=["bottomLine"],r=["top","bottom"],s=["top"];function f(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function g(e,t){const a=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&a.push(f(e))}),a}function i(){const a=this,e=a.pointValKey,t=a.linesApiNames,r=a.areaLinesNames,s=a.points,i=a.options,o=a.graph,n={options:{gapSize:i.gapSize}},l=[],_=g(a,e);let c=s.length,p;var h,d,u;_.forEach((e,t)=>{for(l[t]=[];c--;)p=s[c],l[t].push({x:p.x,plotX:p.plotX,plotY:p[e],isNull:!defined(p[e])});c=s.length}),a.userOptions.fillColor&&r.length&&(h=_.indexOf(f(r[0])),h=l[h],d=1===r.length?s:l[_.indexOf(f(r[1]))],u=a.color,a.points=d,a.nextPoints=h,a.color=a.userOptions.fillColor,a.options=merge(s,n),a.graph=a.area,a.fillGraph=!0,smaProto.drawGraph.call(a),a.area=a.graph,delete a.nextPoints,delete a.fillGraph,a.color=u),t.forEach((e,t)=>{l[t]?(a.points=l[t],i[e]?a.options=merge(i[e].styles,n):error('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),a.graph=a["graph"+e],smaProto.drawGraph.call(a),a["graph"+e]=a.graph):error('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),a.points=s,a.options=i,a.graph=o,smaProto.drawGraph.call(a)}function o(e){let t,a=[],r;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=smaProto.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",a=smaProto.getGraphPath.call(this,e);for(let e=(r=t.slice(0,a.length)).length-1;0<=e;e--)a.push(r[e])}}else a=smaProto.getGraphPath.apply(this,arguments);return a}function n(t){const a=[];return(this.pointArrayMap||[]).forEach(e=>{a.push(t[e])}),a}function l(){const e=this.pointArrayMap;let r,s;r=g(this),smaProto.translate.apply(this,arguments),this.points.forEach(a=>{e.forEach((e,t)=>{s=a[e],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(a[r[t]]=this.yAxis.toPixels(s,!0))})})}e.compose=function(e){const t=e.prototype;return t.linesApiNames=t.linesApiNames||a.slice(),t.pointArrayMap=t.pointArrayMap||r.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||s.slice(),t.drawGraph=i,t.getGraphPath=o,t.toYData=n,t.translate=l,e}}(MultipleLinesComposition=MultipleLinesComposition||{}),MultipleLinesComposition),SMAIndicator=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["sma"],{correctFloat,extend,merge:ABandsIndicator_merge}=external_highcharts_src_js_default_default();function getBaseForBand(e,t,a){return correctFloat(t-e)/(correctFloat(t+e)/2)*1e3*a}function getPointUB(e,t){return e*correctFloat(1+2*t)}function getPointLB(e,t){return e*correctFloat(1-2*t)}class ABandsIndicator extends SMAIndicator{getValues(e,t){const a=t.period,r=t.factor,s=t.index,i=e.xData,o=e.yData,n=o?o.length:0,l=[],_=[],c=[],p=[],h=[];let d,u,f,g,m,y,x,A,P,j,L;if(!(n<a)){for(L=0;L<=n;L++)L<n&&(m=getBaseForBand(o[L][2],o[L][1],r),l.push(getPointUB(o[L][1],m)),_.push(getPointLB(o[L][2],m))),L>=a&&(P=i.slice(L-a,L),j=o.slice(L-a,L),x=super.getValues.call(this,{xData:P,yData:l.slice(L-a,L)},{period:a}),A=super.getValues.call(this,{xData:P,yData:_.slice(L-a,L)},{period:a}),g=(y=super.getValues.call(this,{xData:P,yData:j},{period:a,index:s})).xData[0],u=x.yData[0],f=A.yData[0],d=y.yData[0],c.push([g,u,d,f]),p.push(g),h.push([u,d,f]));return{values:c,xData:p,yData:h}}}}ABandsIndicator.defaultOptions=ABandsIndicator_merge(SMAIndicator.defaultOptions,{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),extend(ABandsIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameBase:"Acceleration Bands",nameComponents:["period","factor"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),Indicators_MultipleLinesComposition.compose(ABandsIndicator),external_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType("abands",ABandsIndicator);const ABands_ABandsIndicator=null,acceleration_bands_src=external_highcharts_src_js_default_default();export{acceleration_bands_src as default};